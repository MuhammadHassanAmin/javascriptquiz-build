(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[40910],{55244:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/arrow-functions/what-is-the-output-of-this-code-using-array-map-with-an-arrow-function",function(){return t(10640)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}});var o=t(85893),a=t(67294),s=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:s="auto",className:r,fullWidthResponsive:i="true",style:c={}}=e,u=(0,a.useRef)(null),d=(0,a.useRef)(!1),[l,h]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))u.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{u.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[l]),l)?(0,o.jsx)("ins",{ref:u,className:"adsbygoogle ".concat(r),style:{display:"block",...c},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":s,"data-full-width-responsive":i}):null};function r(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},10640:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return i}});var o=t(85893),a=t(1475),s=t(25190),r=t(16833),i=!0;n.default=(0,s.Z)((0,r.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Arrow Functions"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(a.Y3,{activeQuestionIndex:5,totalQuestions:20,index:5,question:"What is the output of this code using array.map with an arrow function?",options:["[1, 2, 3, 4]","[2, 4, 6, 8]","TypeError: numbers.map is not a function","undefined"],code:"const numbers = [1, 2, 3, 4];\nconst doubled = numbers.map(num => num * 2);\nconsole.log(doubled);",nextQuestionPath:"when-returning-an-object-literal-directly-from-an-arrow-function-with-a-concise-body-what-syntax-must-be-used",correctAnswer:2,explanation:"The output is `[2, 4, 6, 8]`. This code demonstrates a common and elegant use of arrow functions as callbacks. The `map()` method creates a new array populated with the results of calling a provided function on every element in the calling array. Here, the arrow function `num => num * 2` takes each element from the `numbers` array and returns its doubled value. The concise syntax of arrow functions makes them particularly well-suited for this kind of operation, eliminating the boilerplate code of a full function expression. This example shows how arrow functions can make functional programming patterns more readable. The original array remains unchanged, and a new array with the transformed values is created and stored in `doubled`. This pattern is frequently used for transforming data in a clean, declarative way without side effects.",id:206,quizId:9},5)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=55244)}),_N_E=e.O()}]);