(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[95448],{12633:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/function-declarations-vs-expressions/what-will-this-code-output",function(){return t(25556)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return c}});var o=t(85893),s=t(67294),i=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:i="auto",className:c,fullWidthResponsive:a="true",style:l={}}=e,r=(0,s.useRef)(null),u=(0,s.useRef)(!1),[d,f]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(f(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[d]),d)?(0,o.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(c),style:{display:"block",...l},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":i,"data-full-width-responsive":a}):null};function c(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},25556:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return a}});var o=t(85893),s=t(1475),i=t(25190),c=t(16833),a=!0;n.default=(0,i.Z)((0,c.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Function Declarations vs Expressions"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:5,totalQuestions:20,index:5,question:"What will this code output?",options:["function, function","function, undefined","undefined, undefined","function, ReferenceError"],code:"let greeting = function sayHello() {\n  console.log(typeof sayHello);\n};\ngreeting();\nconsole.log(typeof sayHello);",nextQuestionPath:"what-is-the-primary-advantage-of-using-a-function-expression-over-a-function-declaration",correctAnswer:4,explanation:"This code will output `function` followed by a `ReferenceError`. The first line creates a named function expression `sayHello` and assigns it to the variable `greeting`. When `greeting()` is called, it executes the function body, which logs the type of `sayHello`. Inside the function, `sayHello` refers to the function itself, so `typeof sayHello` is 'function'. However, the function name in a named function expression is only accessible within the function's own scope, not in the outer scope. Therefore, when trying to access `sayHello` in the global scope with `console.log(typeof sayHello)`, JavaScript throws a ReferenceError because `sayHello` is not defined in that scope. Only `greeting` is accessible in the outer scope, not the internal function name `sayHello`. This demonstrates the scope limitation of named function expressions, which is useful for recursion and debugging but not for external access.",id:186,quizId:8},5)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=12633)}),_N_E=e.O()}]);