(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[68203],{10746:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/hoisting-and-execution-context/how-does-variable-hoisting-work-within-a-function-scope",function(){return t(47352)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}});var o=t(85893),i=t(67294),s=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:s="auto",className:a,fullWidthResponsive:c="true",style:l={}}=e,r=(0,i.useRef)(null),d=(0,i.useRef)(!1),[u,h]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,o.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(a),style:{display:"block",...l},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":s,"data-full-width-responsive":c}):null};function a(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},47352:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var o=t(85893),i=t(1475),s=t(25190),a=t(16833),c=!0;n.default=(0,s.Z)((0,a.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Hoisting and Execution Context"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(i.Y3,{activeQuestionIndex:4,totalQuestions:20,index:4,question:"How does variable hoisting work within a function scope?",options:["undefined, undefined","5, 5","undefined, 5","ReferenceError: Cannot access 'a' before initialization"],code:"function example() {\n  console.log(a);\n  var a = 5;\n  console.log(a);\n}\n\nexample();",nextQuestionPath:"how-does-function-hoisting-allow-code-execution-before-declaration",correctAnswer:3,explanation:"The output will be `undefined, 5`. This demonstrates how variable hoisting works within a function scope. When the `example()` function is called, during the creation phase, the variable declaration `var a;` is hoisted to the top of the function, but the initialization `a = 5;` stays in its original position. So the code effectively runs as:\n```javascript\nfunction example() {\n  var a; // a is declared but not yet initialized (value is undefined)\n  console.log(a); // logs undefined\n  a = 5; // a is assigned the value 5\n  console.log(a); // logs 5\n}\n```\nThis example illustrates how hoisting affects variable behavior within function scopes, not just at the global level. Each function creates its own execution context with its own variable environment, and hoisting occurs independently within each function scope. This behavior is consistent for all `var` declarations, regardless of the containing scope.",id:246,quizId:11},4)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=10746)}),_N_E=e.O()}]);