(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[48612],{17566:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/hoisting-and-execution-context/what-error-occurs-when-accessing-function-expressions-before-initialization",function(){return t(39284)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}});var s=t(85893),i=t(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:o="auto",className:a,fullWidthResponsive:r="true",style:c={}}=e,d=(0,i.useRef)(null),u=(0,i.useRef)(!1),[l,h]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[l]),l)?(0,s.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(a),style:{display:"block",...c},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":o,"data-full-width-responsive":r}):null};function a(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},39284:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return r}});var s=t(85893),i=t(1475),o=t(25190),a=t(16833),r=!0;n.default=(0,o.Z)((0,a.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Hoisting and Execution Context"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:7,totalQuestions:20,index:7,question:"What error occurs when accessing function expressions before initialization?",options:["25","undefined","TypeError: square is not a function","ReferenceError: Cannot access 'square' before initialization"],code:"console.log(square(5));\nconst square = function(n) {\n  return n * n;\n}",nextQuestionPath:"what-is-the-javascript-execution-context",correctAnswer:4,explanation:"This code will throw a `ReferenceError: Cannot access 'square' before initialization`. When using `const` or `let`, the variable is hoisted but remains in a temporal dead zone until its declaration is reached during execution. Unlike with `var`, which would be initialized as `undefined` when hoisted, accessing a `const` or `let` variable before its declaration results in a ReferenceError. Additionally, this example uses a function expression assigned to a variable, not a function declaration. With function declarations (`function square(n) {...}`), the entire function would be hoisted and could be called before its declaration in the code. But with function expressions assigned to variables, the rules of variable hoisting apply based on whether `var`, `let`, or `const` is used. In this case, using `const` means that `square` cannot be accessed before its declaration line, resulting in the ReferenceError.",id:249,quizId:11},7)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=17566)}),_N_E=e.O()}]);