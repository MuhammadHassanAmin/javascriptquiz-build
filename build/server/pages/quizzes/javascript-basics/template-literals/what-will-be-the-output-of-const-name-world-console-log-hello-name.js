"use strict";(()=>{var e={};e.id=3982,e.ids=[3982,660],e.modules={9074:(e,t,s)=>{s.r(t),s.d(t,{config:()=>v,default:()=>x,getServerSideProps:()=>w,getStaticPaths:()=>f,getStaticProps:()=>b,reportWebVitals:()=>S,routeModule:()=>k,unstable_getServerProps:()=>q,unstable_getServerSideProps:()=>y,unstable_getStaticParams:()=>j,unstable_getStaticPaths:()=>P,unstable_getStaticProps:()=>_});var a={};s.r(a),s.d(a,{default:()=>g,getStaticProps:()=>m});var l=s(7093),r=s(5244),i=s(1323),n=s(2899),o=s.n(n),u=s(9413),d=s(997),c=s(1475),p=s(1354),h=s(6833);async function m(){let e=await s.e(1317).then(s.t.bind(s,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"What will be the output of: const name = 'World'; console.log(`Hello ${name}`);",description:"Test your knowledge of JavaScript template literals (template strings) with this comprehensive quiz. Learn about string interpolation, multi-line strings, tagged templates, and other powerful features introduced in ES6."}}}let g=(0,p.Z)((0,h.Z)(()=>(0,d.jsxs)(d.Fragment,{children:[d.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Template Literals"}),d.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:d.jsx(c.Y3,{activeQuestionIndex:17,totalQuestions:30,index:17,question:"What will be the output of: const name = 'World'; console.log(`Hello ${name}`);",options:["Hello World","Hello ${name}","Hello \\World","Error"],code:void 0,nextQuestionPath:"what-is-nested-template-interpolation",correctAnswer:2,explanation:"The output will be 'Hello ${name}'. When the $ symbol is escaped with a backslash (\\$) inside a template literal, it is treated as a literal dollar sign rather than the beginning of an interpolation expression. This means that the characters '${name}' are included as-is in the resulting string, and no variable substitution occurs. Escaping the dollar sign is useful when you want to include the literal text '${something}' in your output, such as when explaining template literal syntax in documentation or when generating code that itself contains template literals. This is similar to how you would escape quotes or backticks within their respective string types.",id:148,quizId:6},17)})]}))),x=(0,i.l)(a,"default"),b=(0,i.l)(a,"getStaticProps"),f=(0,i.l)(a,"getStaticPaths"),w=(0,i.l)(a,"getServerSideProps"),v=(0,i.l)(a,"config"),S=(0,i.l)(a,"reportWebVitals"),_=(0,i.l)(a,"unstable_getStaticProps"),P=(0,i.l)(a,"unstable_getStaticPaths"),j=(0,i.l)(a,"unstable_getStaticParams"),q=(0,i.l)(a,"unstable_getServerProps"),y=(0,i.l)(a,"unstable_getServerSideProps"),k=new l.PagesRouteModule({definition:{kind:r.x.PAGES,page:"/quizzes/javascript-basics/template-literals/what-will-be-the-output-of-const-name-world-console-log-hello-name",pathname:"/quizzes/javascript-basics/template-literals/what-will-be-the-output-of-const-name-world-console-log-hello-name",bundlePath:"",filename:""},components:{App:u.default,Document:o()},userland:a})},6833:(e,t,s)=>{s.d(t,{Z:()=>i});var a=s(997),l=s(6689);let r=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:s})=>{let r=(0,l.useRef)(null);(0,l.useRef)(!1);let[i,n]=(0,l.useState)(!1);return((0,l.useEffect)(()=>(n(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,l.useEffect)(()=>{},[i]),i)?a.jsx("ins",{ref:r,className:`adsbygoogle ${s}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function i(e){return class extends l.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return a.jsx(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[a.jsx("div",{children:a.jsx(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),a.jsx("div",{children:a.jsx(e,{...this.props})}),a.jsx("div",{children:a.jsx(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),a=t.X(0,[2899,8559,5675,1163,7830],()=>s(9074));module.exports=a})();