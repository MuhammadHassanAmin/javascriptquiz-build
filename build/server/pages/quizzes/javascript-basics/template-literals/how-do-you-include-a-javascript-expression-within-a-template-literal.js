"use strict";(()=>{var e={};e.id=7030,e.ids=[7030,660],e.modules={5381:(e,t,a)=>{a.r(t),a.d(t,{config:()=>b,default:()=>h,getServerSideProps:()=>S,getStaticPaths:()=>f,getStaticProps:()=>v,reportWebVitals:()=>_,routeModule:()=>k,unstable_getServerProps:()=>y,unstable_getServerSideProps:()=>q,unstable_getStaticParams:()=>P,unstable_getStaticPaths:()=>w,unstable_getStaticProps:()=>j});var s={};a.r(s),a.d(s,{default:()=>x,getStaticProps:()=>m});var i=a(7093),r=a(5244),l=a(1323),n=a(2899),o=a.n(n),d=a(9413),p=a(997),u=a(4815),c=a(1354),g=a(6833);async function m(){let e=await a.e(1317).then(a.t.bind(a,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"How do you include a JavaScript expression within a template literal?",description:"Test your knowledge of JavaScript template literals (template strings) with this comprehensive quiz. Learn about string interpolation, multi-line strings, tagged templates, and other powerful features introduced in ES6."}}}let x=(0,c.Z)((0,g.Z)(()=>(0,p.jsxs)(p.Fragment,{children:[p.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Template Literals"}),p.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:p.jsx(u.Y3,{activeQuestionIndex:1,totalQuestions:30,index:1,question:"How do you include a JavaScript expression within a template literal?",options:["Using #{ expression }","Using ${ expression }","Using @{ expression }","Using %{ expression }"],code:void 0,nextQuestionPath:"what-is-one-advantage-of-template-literals-over-traditional-string-concatenation-in-javascript",correctAnswer:2,explanation:"In JavaScript template literals, expressions are embedded using the syntax ${ expression }. When the template literal is evaluated, any expressions inside the ${} placeholders are executed, and their results are converted to strings and included in the final string value. This feature, called string interpolation, greatly simplifies string concatenation compared to older methods like using the + operator. For example, `Hello, ${name}!` will replace ${name} with the value of the name variable. The expression can be any valid JavaScript expression, including variables, function calls, arithmetic operations, or even nested template literals.",id:132,quizId:6},1)})]}))),h=(0,l.l)(s,"default"),v=(0,l.l)(s,"getStaticProps"),f=(0,l.l)(s,"getStaticPaths"),S=(0,l.l)(s,"getServerSideProps"),b=(0,l.l)(s,"config"),_=(0,l.l)(s,"reportWebVitals"),j=(0,l.l)(s,"unstable_getStaticProps"),w=(0,l.l)(s,"unstable_getStaticPaths"),P=(0,l.l)(s,"unstable_getStaticParams"),y=(0,l.l)(s,"unstable_getServerProps"),q=(0,l.l)(s,"unstable_getServerSideProps"),k=new i.PagesRouteModule({definition:{kind:r.x.PAGES,page:"/quizzes/javascript-basics/template-literals/how-do-you-include-a-javascript-expression-within-a-template-literal",pathname:"/quizzes/javascript-basics/template-literals/how-do-you-include-a-javascript-expression-within-a-template-literal",bundlePath:"",filename:""},components:{App:d.default,Document:o()},userland:s})},6833:(e,t,a)=>{a.d(t,{Z:()=>l});var s=a(997),i=a(6689);let r=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:a})=>{let r=(0,i.useRef)(null);(0,i.useRef)(!1);let[l,n]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(n(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{},[l]),l)?s.jsx("ins",{ref:r,className:`adsbygoogle ${a}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function l(e){return class extends i.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return s.jsx(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[s.jsx("div",{children:s.jsx(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),s.jsx("div",{children:s.jsx(e,{...this.props})}),s.jsx("div",{children:s.jsx(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),s=t.X(0,[2899,8559,5675,1163,2603],()=>a(5381));module.exports=s})();