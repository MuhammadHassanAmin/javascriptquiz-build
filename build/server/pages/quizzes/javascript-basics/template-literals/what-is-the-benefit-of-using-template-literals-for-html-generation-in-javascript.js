"use strict";(()=>{var e={};e.id=4741,e.ids=[4741,660],e.modules={6329:(e,t,a)=>{a.r(t),a.d(t,{config:()=>S,default:()=>f,getServerSideProps:()=>v,getStaticPaths:()=>b,getStaticProps:()=>x,reportWebVitals:()=>_,routeModule:()=>q,unstable_getServerProps:()=>T,unstable_getServerSideProps:()=>P,unstable_getStaticParams:()=>w,unstable_getStaticPaths:()=>j,unstable_getStaticProps:()=>y});var i={};a.r(i),a.d(i,{default:()=>h,getStaticProps:()=>g});var r=a(7093),s=a(5244),l=a(1323),n=a(2899),o=a.n(n),d=a(9413),p=a(997),u=a(1475),c=a(1354),m=a(6833);async function g(){let e=await a.e(1317).then(a.t.bind(a,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"What is the benefit of using template literals for HTML generation in JavaScript?",description:"Test your knowledge of JavaScript template literals (template strings) with this comprehensive quiz. Learn about string interpolation, multi-line strings, tagged templates, and other powerful features introduced in ES6."}}}let h=(0,c.Z)((0,m.Z)(()=>(0,p.jsxs)(p.Fragment,{children:[p.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Template Literals"}),p.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:p.jsx(u.Y3,{activeQuestionIndex:28,totalQuestions:30,index:28,question:"What is the benefit of using template literals for HTML generation in JavaScript?",options:["Template literals automatically sanitize HTML input","Template literals validate HTML syntax","Template literals provide more readable multi-line syntax that resembles HTML structure","Template literals compile HTML to optimize rendering"],code:void 0,nextQuestionPath:"what-feature-of-tagged-templates-allows-them-to-handle-template-literals-with-embedded-expressions-more-flexibly-than-regular-string-methods",correctAnswer:3,explanation:"The primary benefit of using template literals for HTML generation in JavaScript is that they provide more readable multi-line syntax that resembles HTML structure. Before template literals, creating HTML strings in JavaScript was cumbersome, requiring concatenation or array joins with explicit line breaks. Template literals allow developers to write HTML-like content directly in JavaScript with preserved line breaks and indentation, making the code more maintainable and closer to the final output. This is particularly valuable for component-based UI frameworks. However, it's important to note that template literals don't automatically provide HTML sanitization (you'd need a tagged template for that), don't validate HTML syntax, and don't perform any special optimizations for rendering. Their main advantage is in developer experience and code readability.",id:159,quizId:6},28)})]}))),f=(0,l.l)(i,"default"),x=(0,l.l)(i,"getStaticProps"),b=(0,l.l)(i,"getStaticPaths"),v=(0,l.l)(i,"getServerSideProps"),S=(0,l.l)(i,"config"),_=(0,l.l)(i,"reportWebVitals"),y=(0,l.l)(i,"unstable_getStaticProps"),j=(0,l.l)(i,"unstable_getStaticPaths"),w=(0,l.l)(i,"unstable_getStaticParams"),T=(0,l.l)(i,"unstable_getServerProps"),P=(0,l.l)(i,"unstable_getServerSideProps"),q=new r.PagesRouteModule({definition:{kind:s.x.PAGES,page:"/quizzes/javascript-basics/template-literals/what-is-the-benefit-of-using-template-literals-for-html-generation-in-javascript",pathname:"/quizzes/javascript-basics/template-literals/what-is-the-benefit-of-using-template-literals-for-html-generation-in-javascript",bundlePath:"",filename:""},components:{App:d.default,Document:o()},userland:i})},6833:(e,t,a)=>{a.d(t,{Z:()=>l});var i=a(997),r=a(6689);let s=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:a})=>{let s=(0,r.useRef)(null);(0,r.useRef)(!1);let[l,n]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(n(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{},[l]),l)?i.jsx("ins",{ref:s,className:`adsbygoogle ${a}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function l(e){return class extends r.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return i.jsx(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[i.jsx("div",{children:i.jsx(s,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),i.jsx("div",{children:i.jsx(e,{...this.props})}),i.jsx("div",{children:i.jsx(s,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),i=t.X(0,[2899,8559,5675,1163,7830],()=>a(6329));module.exports=i})();