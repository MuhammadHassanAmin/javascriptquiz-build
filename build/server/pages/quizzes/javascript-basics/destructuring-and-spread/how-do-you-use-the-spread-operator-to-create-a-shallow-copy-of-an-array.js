"use strict";(()=>{var e={};e.id=266,e.ids=[266,660],e.modules={6554:(e,t,r)=>{r.r(t),r.d(t,{config:()=>v,default:()=>m,getServerSideProps:()=>b,getStaticPaths:()=>x,getStaticProps:()=>f,reportWebVitals:()=>S,routeModule:()=>k,unstable_getServerProps:()=>P,unstable_getServerSideProps:()=>q,unstable_getStaticParams:()=>j,unstable_getStaticPaths:()=>_,unstable_getStaticProps:()=>w});var a={};r.r(a),r.d(a,{default:()=>h,getStaticProps:()=>g});var s=r(7093),o=r(5244),n=r(1323),i=r(2899),l=r.n(i),c=r(9413),d=r(997),p=r(4815),u=r(1354),y=r(6833);async function g(){let e=await r.e(1317).then(r.t.bind(r,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"How do you use the spread operator to create a shallow copy of an array?",description:"Test your knowledge of JavaScript's destructuring assignment and spread syntax. Learn how to efficiently extract values from arrays and objects, copy collections, merge data structures, and use rest parameters in this comprehensive quiz."}}}let h=(0,u.Z)((0,y.Z)(()=>(0,d.jsxs)(d.Fragment,{children:[d.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Destructuring & Spread Operator"}),d.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:d.jsx(p.Y3,{activeQuestionIndex:4,totalQuestions:20,index:4,question:"How do you use the spread operator to create a shallow copy of an array?",options:["const copy = [array];","const copy = [...array];","const copy = array.copy();","const copy = Array.from(array);"],code:void 0,nextQuestionPath:"what-will-be-logged-const-obj-a-1-b-2-const-a-rest-obj-console-log-rest",correctAnswer:2,explanation:"To create a shallow copy of an array using the spread operator, you write `const copy = [...array];`. This syntax creates a new array and expands all elements of the original array into it. It's a concise and popular way to clone arrays in modern JavaScript. It's important to note that this creates a shallow copy, meaning that if the array contains objects or nested arrays, those will still be references to the original objects (not deep copies). A shallow copy is sufficient for arrays of primitive values (numbers, strings, booleans). The spread operator provides a clean alternative to other array copying methods like `Array.from(array)`, `array.slice()`, or `[].concat(array)`. If you need a deep copy for nested data structures, you would need to use more complex approaches like `JSON.parse(JSON.stringify(array))` (with limitations) or a dedicated deep-cloning library.",id:165,quizId:7},4)})]}))),m=(0,n.l)(a,"default"),f=(0,n.l)(a,"getStaticProps"),x=(0,n.l)(a,"getStaticPaths"),b=(0,n.l)(a,"getServerSideProps"),v=(0,n.l)(a,"config"),S=(0,n.l)(a,"reportWebVitals"),w=(0,n.l)(a,"unstable_getStaticProps"),_=(0,n.l)(a,"unstable_getStaticPaths"),j=(0,n.l)(a,"unstable_getStaticParams"),P=(0,n.l)(a,"unstable_getServerProps"),q=(0,n.l)(a,"unstable_getServerSideProps"),k=new s.PagesRouteModule({definition:{kind:o.x.PAGES,page:"/quizzes/javascript-basics/destructuring-and-spread/how-do-you-use-the-spread-operator-to-create-a-shallow-copy-of-an-array",pathname:"/quizzes/javascript-basics/destructuring-and-spread/how-do-you-use-the-spread-operator-to-create-a-shallow-copy-of-an-array",bundlePath:"",filename:""},components:{App:c.default,Document:l()},userland:a})},6833:(e,t,r)=>{r.d(t,{Z:()=>n});var a=r(997),s=r(6689);let o=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:r})=>{let o=(0,s.useRef)(null);(0,s.useRef)(!1);let[n,i]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(i(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{},[n]),n)?a.jsx("ins",{ref:o,className:`adsbygoogle ${r}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function n(e){return class extends s.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return a.jsx(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[a.jsx("div",{children:a.jsx(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),a.jsx("div",{children:a.jsx(e,{...this.props})}),a.jsx("div",{children:a.jsx(o,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[2899,8559,5675,1163,2603],()=>r(6554));module.exports=a})();