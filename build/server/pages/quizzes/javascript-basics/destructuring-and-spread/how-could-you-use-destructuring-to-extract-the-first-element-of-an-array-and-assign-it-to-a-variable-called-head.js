"use strict";(()=>{var e={};e.id=5670,e.ids=[5670,660],e.modules={9867:(e,t,a)=>{a.r(t),a.d(t,{config:()=>b,default:()=>x,getServerSideProps:()=>v,getStaticPaths:()=>y,getStaticProps:()=>f,reportWebVitals:()=>S,routeModule:()=>k,unstable_getServerProps:()=>w,unstable_getServerSideProps:()=>q,unstable_getStaticParams:()=>P,unstable_getStaticPaths:()=>j,unstable_getStaticProps:()=>_});var r={};a.r(r),a.d(r,{default:()=>m,getStaticProps:()=>g});var s=a(7093),n=a(5244),i=a(1323),o=a(2899),l=a.n(o),d=a(9413),u=a(997),c=a(4815),p=a(1354),h=a(6833);async function g(){let e=await a.e(1317).then(a.t.bind(a,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"How could you use destructuring to extract the first element of an array and assign it to a variable called 'head'?",description:"Test your knowledge of JavaScript's destructuring assignment and spread syntax. Learn how to efficiently extract values from arrays and objects, copy collections, merge data structures, and use rest parameters in this comprehensive quiz."}}}let m=(0,p.Z)((0,h.Z)(()=>(0,u.jsxs)(u.Fragment,{children:[u.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Destructuring & Spread Operator"}),u.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:u.jsx(c.Y3,{activeQuestionIndex:13,totalQuestions:20,index:13,question:"How could you use destructuring to extract the first element of an array and assign it to a variable called 'head'?",options:["const head = array[0];","const {0: head} = array;","const [head] = array;","const {head} = array;"],code:void 0,nextQuestionPath:"what-will-be-the-value-of-x-and-y-after-this-code-let-x-1-y-2-undefined-null",correctAnswer:3,explanation:"You can use array destructuring to extract the first element of an array and assign it to a variable called 'head' by writing `const [head] = array;`. This concise syntax destructures the array and takes only the first element. It's equivalent to `const head = array[0];` but uses the more modern destructuring syntax. When you provide fewer variables in the destructuring pattern than there are elements in the array, JavaScript only assigns the elements that have corresponding variables in the pattern. Any additional elements in the array are simply ignored in this destructuring operation. This approach is particularly useful in functional programming patterns, like when implementing recursive functions where you often need to separate the first element (head) from the rest of the array. Option 2 (`const {0: head} = array;`) is technically valid as it uses object destructuring with numeric keys, but it's much less common.",id:174,quizId:7},13)})]}))),x=(0,i.l)(r,"default"),f=(0,i.l)(r,"getStaticProps"),y=(0,i.l)(r,"getStaticPaths"),v=(0,i.l)(r,"getServerSideProps"),b=(0,i.l)(r,"config"),S=(0,i.l)(r,"reportWebVitals"),_=(0,i.l)(r,"unstable_getStaticProps"),j=(0,i.l)(r,"unstable_getStaticPaths"),P=(0,i.l)(r,"unstable_getStaticParams"),w=(0,i.l)(r,"unstable_getServerProps"),q=(0,i.l)(r,"unstable_getServerSideProps"),k=new s.PagesRouteModule({definition:{kind:n.x.PAGES,page:"/quizzes/javascript-basics/destructuring-and-spread/how-could-you-use-destructuring-to-extract-the-first-element-of-an-array-and-assign-it-to-a-variable-called-head",pathname:"/quizzes/javascript-basics/destructuring-and-spread/how-could-you-use-destructuring-to-extract-the-first-element-of-an-array-and-assign-it-to-a-variable-called-head",bundlePath:"",filename:""},components:{App:d.default,Document:l()},userland:r})},6833:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(997),s=a(6689);let n=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:a})=>{let n=(0,s.useRef)(null);(0,s.useRef)(!1);let[i,o]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(o(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{},[i]),i)?r.jsx("ins",{ref:n,className:`adsbygoogle ${a}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function i(e){return class extends s.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return r.jsx(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[r.jsx("div",{children:r.jsx(n,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),r.jsx("div",{children:r.jsx(e,{...this.props})}),r.jsx("div",{children:r.jsx(n,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[2899,8559,5675,1163,2603],()=>a(9867));module.exports=r})();