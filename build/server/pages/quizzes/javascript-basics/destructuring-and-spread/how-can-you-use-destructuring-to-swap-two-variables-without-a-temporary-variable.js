"use strict";(()=>{var e={};e.id=2090,e.ids=[2090,660],e.modules={7417:(e,t,a)=>{a.r(t),a.d(t,{config:()=>f,default:()=>m,getServerSideProps:()=>w,getStaticPaths:()=>x,getStaticProps:()=>v,reportWebVitals:()=>y,routeModule:()=>k,unstable_getServerProps:()=>P,unstable_getServerSideProps:()=>q,unstable_getStaticParams:()=>j,unstable_getStaticPaths:()=>_,unstable_getStaticProps:()=>S});var r={};a.r(r),a.d(r,{default:()=>b,getStaticProps:()=>h});var s=a(7093),i=a(5244),n=a(1323),o=a(2899),l=a.n(o),u=a(9413),d=a(997),c=a(1475),p=a(1354),g=a(6833);async function h(){let e=await a.e(1317).then(a.t.bind(a,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"How can you use destructuring to swap two variables without a temporary variable?",description:"Test your knowledge of JavaScript's destructuring assignment and spread syntax. Learn how to efficiently extract values from arrays and objects, copy collections, merge data structures, and use rest parameters in this comprehensive quiz."}}}let b=(0,p.Z)((0,g.Z)(()=>(0,d.jsxs)(d.Fragment,{children:[d.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Destructuring & Spread Operator"}),d.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:d.jsx(c.Y3,{activeQuestionIndex:7,totalQuestions:20,index:7,question:"How can you use destructuring to swap two variables without a temporary variable?",options:["a = b + (b = a);","a ^= b ^= a ^= b;","[a, b] = [b, a];","({a, b} = {a: b, b: a});"],code:void 0,nextQuestionPath:"what-happens-when-you-destructure-a-property-that-doesn-t-exist-on-the-object",correctAnswer:3,explanation:"You can use array destructuring to swap two variables without a temporary variable by writing `[a, b] = [b, a];`. This elegant one-liner leverages array destructuring assignment to perform the swap. The right side `[b, a]` creates a new array with the values in swapped order, and the left side destructures these values back into the original variables. This technique is more readable and less error-prone than traditional approaches that use a temporary variable (`let temp = a; a = b; b = temp;`) or bitwise operations. It works because the right-hand side array is evaluated first, capturing the current values of `a` and `b`, and then the destructuring assignment happens as a separate step. This pattern is commonly used in modern JavaScript and is especially useful in algorithms like sorting where variable swapping is frequent.",id:168,quizId:7},7)})]}))),m=(0,n.l)(r,"default"),v=(0,n.l)(r,"getStaticProps"),x=(0,n.l)(r,"getStaticPaths"),w=(0,n.l)(r,"getServerSideProps"),f=(0,n.l)(r,"config"),y=(0,n.l)(r,"reportWebVitals"),S=(0,n.l)(r,"unstable_getStaticProps"),_=(0,n.l)(r,"unstable_getStaticPaths"),j=(0,n.l)(r,"unstable_getStaticParams"),P=(0,n.l)(r,"unstable_getServerProps"),q=(0,n.l)(r,"unstable_getServerSideProps"),k=new s.PagesRouteModule({definition:{kind:i.x.PAGES,page:"/quizzes/javascript-basics/destructuring-and-spread/how-can-you-use-destructuring-to-swap-two-variables-without-a-temporary-variable",pathname:"/quizzes/javascript-basics/destructuring-and-spread/how-can-you-use-destructuring-to-swap-two-variables-without-a-temporary-variable",bundlePath:"",filename:""},components:{App:u.default,Document:l()},userland:r})},6833:(e,t,a)=>{a.d(t,{Z:()=>n});var r=a(997),s=a(6689);let i=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:a})=>{let i=(0,s.useRef)(null);(0,s.useRef)(!1);let[n,o]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(o(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{},[n]),n)?r.jsx("ins",{ref:i,className:`adsbygoogle ${a}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function n(e){return class extends s.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return r.jsx(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[r.jsx("div",{children:r.jsx(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),r.jsx("div",{children:r.jsx(e,{...this.props})}),r.jsx("div",{children:r.jsx(i,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[2899,8559,5675,1163,7830],()=>a(7417));module.exports=r})();