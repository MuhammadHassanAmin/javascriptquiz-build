"use strict";(()=>{var e={};e.id=5448,e.ids=[5448,660],e.modules={699:(e,t,s)=>{s.r(t),s.d(t,{config:()=>w,default:()=>x,getServerSideProps:()=>b,getStaticPaths:()=>v,getStaticProps:()=>m,reportWebVitals:()=>S,routeModule:()=>k,unstable_getServerProps:()=>q,unstable_getServerSideProps:()=>y,unstable_getStaticParams:()=>j,unstable_getStaticPaths:()=>P,unstable_getStaticProps:()=>_});var n={};s.r(n),s.d(n,{default:()=>g,getStaticProps:()=>f});var i=s(7093),o=s(5244),a=s(1323),r=s(2899),l=s.n(r),c=s(9413),d=s(997),u=s(4815),p=s(1354),h=s(6833);async function f(){let e=await s.e(1317).then(s.t.bind(s,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"What will this code output?",description:"Test your knowledge of JavaScript function types, hoisting behavior, scope chains, closures and the key differences between function declarations and expressions in this comprehensive quiz. Master these foundational concepts to write cleaner, more efficient JavaScript code."}}}let g=(0,p.Z)((0,h.Z)(()=>(0,d.jsxs)(d.Fragment,{children:[d.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Function Declarations vs Expressions"}),d.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:d.jsx(u.Y3,{activeQuestionIndex:17,totalQuestions:20,index:17,question:"What will this code output?",options:["10","20","undefined","ReferenceError"],code:"const x = 10;\nfunction foo() {\n  console.log(x);\n  var x = 20;\n}\nfoo();",nextQuestionPath:"which-statement-about-the-arguments-object-is-true",correctAnswer:3,explanation:"This code will output `undefined`. This example demonstrates variable hoisting and shadowing within function scope. Even though there's a global `const x = 10`, inside the function `foo`, the local declaration `var x = 20` is hoisted. This means the variable declaration (but not its assignment) is moved to the top of the function scope. So within `foo`, the code behaves as if it were written:\n```javascript\nfunction foo() {\n  var x; // hoisted declaration, initially undefined\n  console.log(x); // logs undefined\n  x = 20; // assignment happens here\n}\n```\nThe local `x` shadows (takes precedence over) the global `x`, so the global `x` is inaccessible within `foo` once a local `x` is declared. This is why `console.log(x)` outputs `undefined`â€”it's accessing the hoisted but not yet assigned local variable, not the global constant. This behavior is specific to `var`; if `let` or `const` were used instead, we would get a ReferenceError due to the temporal dead zone (accessing a variable before its declaration).",id:198,quizId:8},17)})]}))),x=(0,a.l)(n,"default"),m=(0,a.l)(n,"getStaticProps"),v=(0,a.l)(n,"getStaticPaths"),b=(0,a.l)(n,"getServerSideProps"),w=(0,a.l)(n,"config"),S=(0,a.l)(n,"reportWebVitals"),_=(0,a.l)(n,"unstable_getStaticProps"),P=(0,a.l)(n,"unstable_getStaticPaths"),j=(0,a.l)(n,"unstable_getStaticParams"),q=(0,a.l)(n,"unstable_getServerProps"),y=(0,a.l)(n,"unstable_getServerSideProps"),k=new i.PagesRouteModule({definition:{kind:o.x.PAGES,page:"/quizzes/functions-and-scope/function-declarations-vs-expressions/what-will-this-code-output",pathname:"/quizzes/functions-and-scope/function-declarations-vs-expressions/what-will-this-code-output",bundlePath:"",filename:""},components:{App:c.default,Document:l()},userland:n})},6833:(e,t,s)=>{s.d(t,{Z:()=>a});var n=s(997),i=s(6689);let o=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:s})=>{let o=(0,i.useRef)(null);(0,i.useRef)(!1);let[a,r]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(r(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{},[a]),a)?n.jsx("ins",{ref:o,className:`adsbygoogle ${s}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function a(e){return class extends i.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return n.jsx(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[n.jsx("div",{children:n.jsx(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),n.jsx("div",{children:n.jsx(e,{...this.props})}),n.jsx("div",{children:n.jsx(o,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),n=t.X(0,[2899,8559,5675,1163,2603],()=>s(699));module.exports=n})();