"use strict";(()=>{var e={};e.id=2428,e.ids=[2428,660],e.modules={5371:(e,t,n)=>{n.r(t),n.d(t,{config:()=>b,default:()=>g,getServerSideProps:()=>v,getStaticPaths:()=>w,getStaticProps:()=>x,reportWebVitals:()=>S,routeModule:()=>k,unstable_getServerProps:()=>q,unstable_getServerSideProps:()=>y,unstable_getStaticParams:()=>j,unstable_getStaticPaths:()=>P,unstable_getStaticProps:()=>_});var s={};n.r(s),n.d(s,{default:()=>f,getStaticProps:()=>m});var o=n(7093),r=n(5244),a=n(1323),i=n(2899),c=n.n(i),l=n(9413),u=n(997),d=n(1475),h=n(1354),p=n(6833);async function m(){let e=await n.e(1317).then(n.t.bind(n,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"What will this code output?",description:"Test your knowledge of JavaScript's hoisting behavior and execution context. Learn how variables and functions are processed during the creation phase, how the scope chain works, and why temporal dead zone matters in modern JavaScript."}}}let f=(0,h.Z)((0,p.Z)(()=>(0,u.jsxs)(u.Fragment,{children:[u.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Hoisting and Execution Context"}),u.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:u.jsx(d.Y3,{activeQuestionIndex:15,totalQuestions:20,index:15,question:"What will this code output?",options:["1, 2, 3","1, 2, 1","1, 1, 1","undefined, undefined, undefined"],code:"function createCounter() {\n  let count = 0;\n  return function() {\n    count++;\n    console.log(count);\n  };\n}\n\nconst counter1 = createCounter();\nconst counter2 = createCounter();\n\ncounter1();\ncounter1();\ncounter2();",nextQuestionPath:"what-will-be-the-output-of-this-code",correctAnswer:2,explanation:"The output will be `1, 2, 1`. This example demonstrates closures and how separate function instances maintain their own enclosed environments. Here's what happens:\n\n1. `createCounter()` is called twice, creating two separate execution contexts, each with its own `count` variable initialized to 0.\n\n2. Each call to `createCounter()` returns a new function that has access to its own enclosed `count` variable through closure.\n\n3. `counter1` and `counter2` are different functions, each with their own separate closure over different instances of the `count` variable.\n\n4. When `counter1()` is called the first time, it increments its enclosed `count` from 0 to 1 and logs 1.\n\n5. When `counter1()` is called a second time, it increments the same enclosed `count` from 1 to 2 and logs 2.\n\n6. When `counter2()` is called, it increments its own separate enclosed `count` variable from 0 to 1 and logs 1.\n\nThis demonstrates how closures maintain separate state for different function instances, even if they were created from the same function definition. Each closure has its own environment with its own variables. This behavior enables patterns like creating multiple independent counters, each with its own state.",id:257,quizId:11},15)})]}))),g=(0,a.l)(s,"default"),x=(0,a.l)(s,"getStaticProps"),w=(0,a.l)(s,"getStaticPaths"),v=(0,a.l)(s,"getServerSideProps"),b=(0,a.l)(s,"config"),S=(0,a.l)(s,"reportWebVitals"),_=(0,a.l)(s,"unstable_getStaticProps"),P=(0,a.l)(s,"unstable_getStaticPaths"),j=(0,a.l)(s,"unstable_getStaticParams"),q=(0,a.l)(s,"unstable_getServerProps"),y=(0,a.l)(s,"unstable_getServerSideProps"),k=new o.PagesRouteModule({definition:{kind:r.x.PAGES,page:"/quizzes/functions-and-scope/hoisting-and-execution-context/what-will-this-code-output",pathname:"/quizzes/functions-and-scope/hoisting-and-execution-context/what-will-this-code-output",bundlePath:"",filename:""},components:{App:l.default,Document:c()},userland:s})},6833:(e,t,n)=>{n.d(t,{Z:()=>a});var s=n(997),o=n(6689);let r=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:n})=>{let r=(0,o.useRef)(null);(0,o.useRef)(!1);let[a,i]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(i(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{},[a]),a)?s.jsx("ins",{ref:r,className:`adsbygoogle ${n}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function a(e){return class extends o.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return s.jsx(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[s.jsx("div",{children:s.jsx(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),s.jsx("div",{children:s.jsx(e,{...this.props})}),s.jsx("div",{children:s.jsx(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),s=t.X(0,[2899,8559,5675,1163,7830],()=>n(5371));module.exports=s})();