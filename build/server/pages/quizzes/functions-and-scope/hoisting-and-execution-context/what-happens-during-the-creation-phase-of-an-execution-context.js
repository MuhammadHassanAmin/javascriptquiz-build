"use strict";(()=>{var e={};e.id=219,e.ids=[219,660],e.modules={6188:(e,t,a)=>{a.r(t),a.d(t,{config:()=>S,default:()=>m,getServerSideProps:()=>b,getStaticPaths:()=>v,getStaticProps:()=>f,reportWebVitals:()=>_,routeModule:()=>k,unstable_getServerProps:()=>j,unstable_getServerSideProps:()=>q,unstable_getStaticParams:()=>y,unstable_getStaticPaths:()=>P,unstable_getStaticProps:()=>w});var n={};a.r(n),a.d(n,{default:()=>g,getStaticProps:()=>x});var i=a(7093),s=a(5244),r=a(1323),o=a(2899),l=a.n(o),c=a(9413),d=a(997),u=a(4815),h=a(1354),p=a(6833);async function x(){let e=await a.e(1317).then(a.t.bind(a,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"What happens during the creation phase of an execution context?",description:"Test your knowledge of JavaScript's hoisting behavior and execution context. Learn how variables and functions are processed during the creation phase, how the scope chain works, and why temporal dead zone matters in modern JavaScript."}}}let g=(0,h.Z)((0,p.Z)(()=>(0,d.jsxs)(d.Fragment,{children:[d.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Hoisting and Execution Context"}),d.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:d.jsx(u.Y3,{activeQuestionIndex:9,totalQuestions:20,index:9,question:"What happens during the creation phase of an execution context?",options:["JavaScript code is executed line by line","Variables are assigned their values and functions are executed","Memory is allocated for variables and the scope chain is created","External scripts and modules are loaded"],code:void 0,nextQuestionPath:"what-will-this-code-output",correctAnswer:3,explanation:"During the creation phase of an execution context, memory is allocated for variables and the scope chain is created. This phase occurs before code execution and involves several specific steps:\n\n1. Creation of the Variable Environment: JavaScript allocates memory for variables and functions declared in the code. Function declarations are stored in their entirety, while variables declared with `var` are initialized with the value `undefined`. Variables declared with `let` and `const` are hoisted but not initialized (remaining in the temporal dead zone).\n\n2. Creation of the Scope Chain: References to outer environments are established, creating the scope chain that determines variable access.\n\n3. Determining the value of `this`: The value of the `this` keyword is determined based on how the function is called.\n\nOnly after this creation phase is complete does JavaScript move to the execution phase, where code is actually executed line by line, and variables receive their assigned values. This two-phase process explains behaviors like hoisting, where variables and functions can be accessed before their declarations appear in the code.",id:251,quizId:11},9)})]}))),m=(0,r.l)(n,"default"),f=(0,r.l)(n,"getStaticProps"),v=(0,r.l)(n,"getStaticPaths"),b=(0,r.l)(n,"getServerSideProps"),S=(0,r.l)(n,"config"),_=(0,r.l)(n,"reportWebVitals"),w=(0,r.l)(n,"unstable_getStaticProps"),P=(0,r.l)(n,"unstable_getStaticPaths"),y=(0,r.l)(n,"unstable_getStaticParams"),j=(0,r.l)(n,"unstable_getServerProps"),q=(0,r.l)(n,"unstable_getServerSideProps"),k=new i.PagesRouteModule({definition:{kind:s.x.PAGES,page:"/quizzes/functions-and-scope/hoisting-and-execution-context/what-happens-during-the-creation-phase-of-an-execution-context",pathname:"/quizzes/functions-and-scope/hoisting-and-execution-context/what-happens-during-the-creation-phase-of-an-execution-context",bundlePath:"",filename:""},components:{App:c.default,Document:l()},userland:n})},6833:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(997),i=a(6689);let s=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:a})=>{let s=(0,i.useRef)(null);(0,i.useRef)(!1);let[r,o]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(o(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{},[r]),r)?n.jsx("ins",{ref:s,className:`adsbygoogle ${a}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function r(e){return class extends i.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return n.jsx(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[n.jsx("div",{children:n.jsx(s,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),n.jsx("div",{children:n.jsx(e,{...this.props})}),n.jsx("div",{children:n.jsx(s,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),n=t.X(0,[2899,8559,5675,1163,2603],()=>a(6188));module.exports=n})();