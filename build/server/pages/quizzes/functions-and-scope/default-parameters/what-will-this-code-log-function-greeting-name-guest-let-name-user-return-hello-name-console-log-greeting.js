"use strict";(()=>{var e={};e.id=1407,e.ids=[1407,660],e.modules={1494:(e,t,r)=>{r.r(t),r.d(t,{config:()=>w,default:()=>f,getServerSideProps:()=>b,getStaticPaths:()=>v,getStaticProps:()=>x,reportWebVitals:()=>S,routeModule:()=>k,unstable_getServerProps:()=>j,unstable_getServerSideProps:()=>q,unstable_getStaticParams:()=>y,unstable_getStaticPaths:()=>P,unstable_getStaticProps:()=>_});var a={};r.r(a),r.d(a,{default:()=>h,getStaticProps:()=>m});var s=r(7093),n=r(5244),i=r(1323),o=r(2899),l=r.n(o),u=r(9413),d=r(997),c=r(4815),p=r(1354),g=r(6833);async function m(){let e=await r.e(1317).then(r.t.bind(r,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"What will this code log? function greeting(name = 'Guest') { let name = 'User'; return `Hello, ${name}`; } console.log(greeting());",description:"Test your knowledge of JavaScript's default parameters feature introduced in ES6. Learn how to set fallback values for function parameters, understand parameter evaluation, temporal dead zone, and advanced patterns for writing more robust and flexible JavaScript functions."}}}let h=(0,p.Z)((0,g.Z)(()=>(0,d.jsxs)(d.Fragment,{children:[d.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"Default Parameters"}),d.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:d.jsx(c.Y3,{activeQuestionIndex:20,totalQuestions:21,index:20,question:"What will this code log? function greeting(name = 'Guest') { let name = 'User'; return `Hello, ${name}`; } console.log(greeting());",options:["'Hello, Guest'","'Hello, User'","ReferenceError: name is not defined","SyntaxError: Identifier 'name' has already been declared"],code:void 0,nextQuestionPath:"",correctAnswer:4,explanation:"This code will throw a `SyntaxError: Identifier 'name' has already been declared`. In JavaScript, function parameters create variables in the function scope. Attempting to declare a variable with the same name using `let`, `const`, or `var` within the same scope will cause a SyntaxError. The parameter `name` (with its default value 'Guest') is already a variable in the function scope, so declaring another variable with `let name = 'User'` in the same scope is not allowed. This error occurs at parse time, before the function is ever executed. To fix this issue, you would need to use a different variable name inside the function, or simply reassign the parameter value without redeclaring it (e.g., `name = 'User'` without the `let` keyword). This behavior is consistent with how variables work in JavaScriptâ€”identifiers must be unique within a given scope, whether they're introduced as parameters, `let`/`const`/`var` declarations, function declarations, or other binding forms.",id:241,quizId:10},20)})]}))),f=(0,i.l)(a,"default"),x=(0,i.l)(a,"getStaticProps"),v=(0,i.l)(a,"getStaticPaths"),b=(0,i.l)(a,"getServerSideProps"),w=(0,i.l)(a,"config"),S=(0,i.l)(a,"reportWebVitals"),_=(0,i.l)(a,"unstable_getStaticProps"),P=(0,i.l)(a,"unstable_getStaticPaths"),y=(0,i.l)(a,"unstable_getStaticParams"),j=(0,i.l)(a,"unstable_getServerProps"),q=(0,i.l)(a,"unstable_getServerSideProps"),k=new s.PagesRouteModule({definition:{kind:n.x.PAGES,page:"/quizzes/functions-and-scope/default-parameters/what-will-this-code-log-function-greeting-name-guest-let-name-user-return-hello-name-console-log-greeting",pathname:"/quizzes/functions-and-scope/default-parameters/what-will-this-code-log-function-greeting-name-guest-let-name-user-return-hello-name-console-log-greeting",bundlePath:"",filename:""},components:{App:u.default,Document:l()},userland:a})},6833:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(997),s=r(6689);let n=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:r})=>{let n=(0,s.useRef)(null);(0,s.useRef)(!1);let[i,o]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(o(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{},[i]),i)?a.jsx("ins",{ref:n,className:`adsbygoogle ${r}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function i(e){return class extends s.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return a.jsx(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[a.jsx("div",{children:a.jsx(n,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),a.jsx("div",{children:a.jsx(e,{...this.props})}),a.jsx("div",{children:a.jsx(n,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[2899,8559,5675,1163,2603],()=>r(1494));module.exports=a})();