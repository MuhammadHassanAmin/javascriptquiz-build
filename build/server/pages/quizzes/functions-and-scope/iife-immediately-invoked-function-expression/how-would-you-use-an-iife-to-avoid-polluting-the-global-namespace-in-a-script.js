"use strict";(()=>{var e={};e.id=7511,e.ids=[7511,660],e.modules={2324:(e,t,a)=>{a.r(t),a.d(t,{config:()=>y,default:()=>x,getServerSideProps:()=>b,getStaticPaths:()=>v,getStaticProps:()=>f,reportWebVitals:()=>w,routeModule:()=>q,unstable_getServerProps:()=>I,unstable_getServerSideProps:()=>j,unstable_getStaticParams:()=>P,unstable_getStaticPaths:()=>_,unstable_getStaticProps:()=>S});var i={};a.r(i),a.d(i,{default:()=>h,getStaticProps:()=>m});var s=a(7093),n=a(5244),o=a(1323),r=a(2899),l=a.n(r),d=a(9413),u=a(997),c=a(4815),p=a(1354),g=a(6833);async function m(){let e=await a.e(1317).then(a.t.bind(a,1317,19));return{props:{siteName:e.default.name,google_analytics_tracking_id:e.default.google_analytics_tracking_id,google_adsense_publisher_id:e.default.google_adsense_publisher_id,title:"How would you use an IIFE to avoid polluting the global namespace in a script?",description:"Challenge yourself with our comprehensive JavaScript IIFE quiz. Test your understanding of Immediately Invoked Function Expressions, self-executing functions, module patterns, and execution context isolation in JavaScript."}}}let h=(0,p.Z)((0,g.Z)(()=>(0,u.jsxs)(u.Fragment,{children:[u.jsx("h1",{className:"text-2xl dark:text-white text-center",children:"IIFE (Immediately Invoked Function Expression)"}),u.jsx("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:u.jsx(c.Y3,{activeQuestionIndex:10,totalQuestions:25,index:10,question:"How would you use an IIFE to avoid polluting the global namespace in a script?",options:["By declaring all variables with the 'let' keyword","By wrapping all code in an IIFE so variables are scoped to the function","By adding 'use strict' at the top of the script","By using only arrow functions"],code:void 0,nextQuestionPath:"what-pattern-does-this-code-demonstrate",correctAnswer:2,explanation:"You would avoid polluting the global namespace by wrapping all code in an IIFE so variables are scoped to the function. Prior to ES6 modules and block-scoped variables (let/const), this was the primary way to prevent variables from leaking into the global scope. By enclosing all your code in an IIFE, any variables declared inside it remain private to that function scope. This was a common practice in larger JavaScript applications and libraries, where preventing name collisions was crucial. For example, jQuery and many other libraries use this pattern to ensure their internal variables don't conflict with other scripts on the page. Even with modern JavaScript, the pattern remains useful for isolating code execution.",id:292,quizId:13},10)})]}))),x=(0,o.l)(i,"default"),f=(0,o.l)(i,"getStaticProps"),v=(0,o.l)(i,"getStaticPaths"),b=(0,o.l)(i,"getServerSideProps"),y=(0,o.l)(i,"config"),w=(0,o.l)(i,"reportWebVitals"),S=(0,o.l)(i,"unstable_getStaticProps"),_=(0,o.l)(i,"unstable_getStaticPaths"),P=(0,o.l)(i,"unstable_getStaticParams"),I=(0,o.l)(i,"unstable_getServerProps"),j=(0,o.l)(i,"unstable_getServerSideProps"),q=new s.PagesRouteModule({definition:{kind:n.x.PAGES,page:"/quizzes/functions-and-scope/iife-immediately-invoked-function-expression/how-would-you-use-an-iife-to-avoid-polluting-the-global-namespace-in-a-script",pathname:"/quizzes/functions-and-scope/iife-immediately-invoked-function-expression/how-would-you-use-an-iife-to-avoid-polluting-the-global-namespace-in-a-script",bundlePath:"",filename:""},components:{App:d.default,Document:l()},userland:i})},6833:(e,t,a)=>{a.d(t,{Z:()=>o});var i=a(997),s=a(6689);let n=({adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:a})=>{let n=(0,s.useRef)(null);(0,s.useRef)(!1);let[o,r]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(r(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{},[o]),o)?i.jsx("ins",{ref:n,className:`adsbygoogle ${a}`,style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function o(e){return class extends s.Component{constructor(e){super(e)}componentDidMount(){console.log("Wrapped Component")}render(){return i.jsx(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[i.jsx("div",{children:i.jsx(n,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),i.jsx("div",{children:i.jsx(e,{...this.props})}),i.jsx("div",{children:i.jsx(n,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}}}},9003:e=>{e.exports=require("classnames")},2785:e=>{e.exports=require("next/dist/compiled/next-server/pages.runtime.prod.js")},968:e=>{e.exports=require("next/head")},6689:e=>{e.exports=require("react")},6405:e=>{e.exports=require("react-dom")},997:e=>{e.exports=require("react/jsx-runtime")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},2781:e=>{e.exports=require("stream")},9796:e=>{e.exports=require("zlib")}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),i=t.X(0,[2899,8559,5675,1163,2603],()=>a(2324));module.exports=i})();