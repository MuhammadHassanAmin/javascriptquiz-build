(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[80703],{36890:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/dynamic-imports/what-optimization-technique-is-demonstrated-in-this-code",function(){return t(68313)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return s}});var o=t(85893),i=t(67294),a=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:a}=e,s=(0,i.useRef)(null),r=(0,i.useRef)(!1),[l,d]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(d(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))s.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{s.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0)}}}},[l]),l)?(0,o.jsx)("ins",{ref:s,className:"adsbygoogle ".concat(a),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function s(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},68313:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return r}});var o=t(85893),i=t(1475),a=t(41354),s=t(16833),r=!0;n.default=(0,a.Z)((0,s.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Dynamic Imports (import())"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(i.Y3,{activeQuestionIndex:19,totalQuestions:43,index:19,question:"What optimization technique is demonstrated in this code?",options:["Sequential loading","Parallel module loading","Deferred execution","Module concatenation"],code:"// Using Promise.all with dynamic imports\nasync function loadComponents() {\n  const [header, main, footer] = await Promise.all([\n    import('./components/header.js'),\n    import('./components/main.js'),\n    import('./components/footer.js')\n  ]);\n  \n  return {\n    renderHeader: header.render,\n    renderMain: main.render,\n    renderFooter: footer.render\n  };\n}",nextQuestionPath:"how-do-dynamic-imports-interact-with-http-2-multiplexing",correctAnswer:2,explanation:"This code demonstrates parallel module loading with dynamic imports: 1) Promise.all enables loading multiple modules concurrently rather than sequentially, 2) This reduces the total loading time when multiple modules are needed simultaneously, 3) All three components start loading at the same time rather than waiting for each to complete, 4) The await only blocks until all three modules are loaded, 5) This pattern is useful when multiple independent modules are needed for a feature, 6) It maximizes network utilization and minimizes wait time, 7) The technique can significantly improve performance for features requiring multiple modules, 8) Destructuring assignment makes the code clean and readable despite the parallel loading.",id:917,quizId:41},19)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=36890)}),_N_E=e.O()}]);