(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[12438],{59192:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/dynamic-imports/what-feature-is-demonstrated-in-this-code-that-enhances-dynamic-imports",function(){return n(12577)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var s=n(85893),a=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:i="auto",className:o,fullWidthResponsive:r="true",style:d={}}=e,c=(0,a.useRef)(null),l=(0,a.useRef)(!1),[u,p]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(o),style:{display:"block",...d},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":i,"data-full-width-responsive":r}):null};function o(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(e){super(e)}}}},12577:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var s=n(85893),a=n(1475),i=n(25190),o=n(16833),r=!0;t.default=(0,i.Z)((0,o.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Dynamic Imports (import())"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(a.Y3,{activeQuestionIndex:31,totalQuestions:43,index:31,question:"What feature is demonstrated in this code that enhances dynamic imports?",options:["JSON parsing","Import assertions","Error validation","Module metadata"],code:"// Using dynamic import with import assertions\n// Modern browser environment\nasync function loadData() {\n  try {\n    const { default: data } = await import('./data.json', {\n      assert: { type: 'json' }\n    });\n    return data;\n  } catch (err) {\n    console.error('Failed to load JSON:', err);\n    return {};\n  }\n}",nextQuestionPath:"what-best-practice-helps-manage-complexity-when-using-dynamic-imports-extensively-in-an-application",correctAnswer:2,explanation:"This code demonstrates import assertions with dynamic imports: 1) The second parameter to import() specifies assertions about the module type, 2) The 'assert: { type: 'json' }' indicates that the imported module should be treated as JSON, 3) This provides additional security by ensuring the module is of the expected type, 4) It enables importing data files directly without separate loaders in supporting environments, 5) The system can optimize the loading process based on the known type, 6) This feature is particularly useful for importing non-JavaScript resources safely, 7) Import assertions help prevent injection attacks by validating content types, 8) This is part of the evolving JavaScript module system's security enhancements.",id:929,quizId:41},31)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=59192)}),_N_E=e.O()}]);