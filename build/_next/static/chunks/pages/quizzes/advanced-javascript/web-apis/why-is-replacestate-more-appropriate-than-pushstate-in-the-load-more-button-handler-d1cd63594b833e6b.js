(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[76253],{7774:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/web-apis/why-is-replacestate-more-appropriate-than-pushstate-in-the-load-more-button-handler",function(){return a(932)}])},16833:function(e,t,a){"use strict";a.d(t,{Z:function(){return o}});var n=a(85893),r=a(67294),s=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:a="6753219060",adFormat:s="auto",className:o,fullWidthResponsive:i="true",style:c={}}=e,l=(0,r.useRef)(null),d=(0,r.useRef)(!1),[u,p]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(o),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":a,"data-ad-format":s,"data-full-width-responsive":i}):null};function o(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(s,{adSlot:"6208304795",className:"h-[336px]"})}),(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(s,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},932:function(e,t,a){"use strict";a.r(t),a.d(t,{__N_SSG:function(){return i}});var n=a(85893),r=a(1475),s=a(25190),o=a(16833),i=!0;t.default=(0,s.Z)((0,o.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Web APIs (navigator, geolocation, history)"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(r.Y3,{activeQuestionIndex:13,totalQuestions:40,index:13,question:"Why is replaceState() more appropriate than pushState() in the 'Load More' button handler?",options:["replaceState() is faster than pushState()","Pagination changes aren't significant enough to warrant new history entries","pushState() doesn't work with URL search parameters","replaceState() preserves form data while pushState() doesn't"],code:"// Initial load\nlet currentPage = 1;\nloadProducts(currentPage);\n\n// User clicks \"Load More\"\ndocument.getElementById('loadMore').addEventListener('click', function() {\n  currentPage++;\n  loadProducts(currentPage);\n  \n  // Update URL to reflect current page\n  const url = new URL(window.location);\n  url.searchParams.set('page', currentPage);\n  history.replaceState({page: currentPage}, '', url);\n});\n\n// On page load, check for page parameter\ndocument.addEventListener('DOMContentLoaded', function() {\n  const url = new URL(window.location);\n  const pageParam = url.searchParams.get('page');\n  if (pageParam) {\n    currentPage = parseInt(pageParam, 10);\n    loadProducts(currentPage);\n  }\n});",nextQuestionPath:"what-event-is-triggered-when-a-user-navigates-through-history-with-the-browser-s-back-or-forward-buttons",correctAnswer:2,explanation:"replaceState() is more appropriate for pagination because: 1) Pagination changes (loading more items) typically don't represent distinct application states that users would navigate back through individually, 2) Using pushState() would create a new history entry for each 'Load More' click, cluttering the browser history, 3) This would require many back button clicks to navigate to previous pages, creating a poor user experience, 4) replaceState() updates the URL to be shareable and bookmarkable without affecting navigation history, 5) It allows users to refresh the page and maintain their pagination position, 6) It preserves a clean browser history focused on significant navigation points rather than incremental data loading, 7) This approach properly balances URL updateability with sensible history management, 8) It follows the principle that history entries should represent meaningful navigation states, not minor UI interactions.",id:994,quizId:43},13)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=7774)}),_N_E=e.O()}]);