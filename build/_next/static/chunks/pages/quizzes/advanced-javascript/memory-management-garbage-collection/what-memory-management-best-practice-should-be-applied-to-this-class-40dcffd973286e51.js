(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[22057],{28148:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/what-memory-management-best-practice-should-be-applied-to-this-class",function(){return s(65809)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return i}});var a=s(85893),n=s(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:r="auto",className:i,fullWidthResponsive:o="true",style:c={}}=e,l=(0,n.useRef)(null),d=(0,n.useRef)(!1),[u,p]=(0,n.useState)(!1);return((0,n.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,n.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,a.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(i),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":r,"data-full-width-responsive":o}):null};function i(e){return class extends n.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,a.jsx)(r,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,a.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,a.jsx)(r,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},65809:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return o}});var a=s(85893),n=s(1475),r=s(25190),i=s(16833),o=!0;t.default=(0,r.Z)((0,i.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(n.Y3,{activeQuestionIndex:13,totalQuestions:40,index:13,question:"What memory management best practice should be applied to this class?",options:["Use WeakMap instead of Map if resource lifecycle is independent of registration","Use arrays instead of Maps for better performance","Add a method to completely clear all resources","Store only primitive values as resources"],code:"class ResourceManager {\n  constructor() {\n    this.resources = new Map();\n  }\n  register(id, resource) {\n    this.resources.set(id, resource);\n  }\n  unregister(id) {\n    this.resources.delete(id);\n  }\n  getResource(id) {\n    return this.resources.get(id);\n  }\n}",nextQuestionPath:"which-approach-to-object-creation-in-javascript-is-generally-most-memory-efficient",correctAnswer:1,explanation:"The best memory management practice for this class would be using WeakMap: 1) If the resources have lifecycles independent of their registration, a WeakMap prevents memory leaks, 2) A WeakMap would allow resources to be garbage collected when they're no longer referenced elsewhere, 3) With the current Map implementation, resources remain in memory even if they're no longer used outside the ResourceManager, 4) Using WeakMap eliminates the need for explicit unregister calls in many cases, 5) This is particularly valuable if clients might forget to call unregister, 6) The tradeoff is that WeakMap keys must be objects, not primitive values like strings, 7) A hybrid approach might use object wrappers for primitive IDs or maintain both a WeakMap and a traditional Map, 8) This change exemplifies the principle of designing systems that are resilient to memory management oversights.",id:954,quizId:42},13)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=28148)}),_N_E=e.O()}]);