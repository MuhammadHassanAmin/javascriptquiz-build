(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[90076],{14705:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/after-executing-this-code-what-happens-to-the-object-that-was-originally-assigned-to-a",function(){return n(77086)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var a=n(85893),o=n(67294),s=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:s}=e,r=(0,o.useRef)(null),i=(0,o.useRef)(!1),[c,l]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[c]),c)?(0,a.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(s),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function r(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsx)("div",{children:(0,a.jsx)(s,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},77086:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var a=n(85893),o=n(1475),s=n(41354),r=n(16833),i=!0;t.default=(0,s.Z)((0,r.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(o.Y3,{activeQuestionIndex:3,totalQuestions:40,index:3,question:"After executing this code, what happens to the object that was originally assigned to 'a'?",options:["It's immediately garbage collected","It's still accessible through variable 'b'","It causes a memory leak","It's partially garbage collected"],code:"let a = { x: 10, y: 20 };\nlet b = a;\na = null;",nextQuestionPath:"what-is-the-primary-algorithm-used-by-modern-javascript-engines-for-garbage-collection",correctAnswer:2,explanation:"The object originally assigned to 'a' remains accessible through 'b': 1) When the object is created, both 'a' and 'b' reference the same object in memory, 2) Setting 'a' to null only removes one reference to the object, 3) The object still has a live reference through variable 'b', 4) JavaScript's garbage collector only collects objects with zero references, 5) The object will remain in memory as long as 'b' references it, 6) Memory would be reclaimed only if 'b' also loses its reference (e.g., by assigning null or going out of scope), 7) This demonstrates how reference-based garbage collection works in JavaScript, 8) Understanding this reference behavior is crucial for managing memory in JavaScript applications.",id:944,quizId:42},3)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=14705)}),_N_E=e.O()}]);