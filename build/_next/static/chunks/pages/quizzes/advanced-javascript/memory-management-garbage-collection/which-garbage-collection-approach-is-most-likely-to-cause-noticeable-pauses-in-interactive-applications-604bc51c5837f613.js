(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3702],{30795:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/which-garbage-collection-approach-is-most-likely-to-cause-noticeable-pauses-in-interactive-applications",function(){return n(38570)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var o=n(85893),s=n(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:a}=e,r=(0,s.useRef)(null),c=(0,s.useRef)(!1),[i,l]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(i){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[i]),i)?(0,o.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(a),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function r(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},38570:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var o=n(85893),s=n(1475),a=n(41354),r=n(16833),c=!0;t.default=(0,a.Z)((0,r.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:26,totalQuestions:40,index:26,question:"Which garbage collection approach is most likely to cause noticeable pauses in interactive applications?",options:["Incremental garbage collection","Stop-the-world garbage collection","Concurrent garbage collection","Generational garbage collection"],code:void 0,nextQuestionPath:"what-critical-method-is-missing-from-this-eventemitter-to-prevent-memory-leaks",correctAnswer:2,explanation:"Stop-the-world garbage collection is most likely to cause noticeable pauses: 1) It completely halts program execution while the garbage collector runs, 2) This pauses all JavaScript execution, including UI updates and event handling, 3) Users may experience jarring stutters or freezes during these collection cycles, 4) The pause duration grows with heap size and complexity, 5) Modern JavaScript engines have worked to minimize these pauses through other approaches, 6) Incremental GC breaks the collection into smaller steps to reduce pause times, 7) Concurrent GC performs most work alongside program execution, 8) Generational GC focuses collection efforts on newer objects to improve efficiency, but doesn't inherently determine whether collection is stop-the-world or concurrent.",id:967,quizId:42},26)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=30795)}),_N_E=e.O()}]);