(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[32847],{61172:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/which-approach-to-object-creation-in-javascript-is-generally-most-memory-efficient",function(){return s(55172)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return i}});var n=s(85893),o=s(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:a="auto",className:i,fullWidthResponsive:c="true",style:r={}}=e,l=(0,o.useRef)(null),d=(0,o.useRef)(!1),[p,u]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(p){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[p]),p)?(0,n.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(i),style:{display:"block",...r},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":a,"data-full-width-responsive":c}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[336px]"})}),(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},55172:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return c}});var n=s(85893),o=s(1475),a=s(25190),i=s(16833),c=!0;t.default=(0,a.Z)((0,i.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(o.Y3,{activeQuestionIndex:14,totalQuestions:40,index:14,question:"Which approach to object creation in JavaScript is generally most memory-efficient?",options:["Using object literals ({ prop: value })","Using constructor functions with new","Using Object.create() with a null prototype","Using class syntax with proper prototype methods"],code:void 0,nextQuestionPath:"what-is-the-primary-memory-concern-with-this-code",correctAnswer:4,explanation:"Using class syntax with proper prototype methods is generally most memory-efficient: 1) Class methods are defined once on the prototype, shared across all instances, 2) Each instance only stores its own unique property values, not methods, 3) This reduces memory overhead compared to methods created in constructors, 4) Object literals and constructor functions that define methods inside create new function objects for each instance, 5) Object.create(null) creates objects without prototype methods, which can be efficient but lacks built-in object methods, 6) Prototype-based method sharing is particularly important when creating many instances, 7) Modern JavaScript engines optimize class and prototype patterns well, 8) This approach follows the principle of sharing immutable functionality while keeping instance-specific state separate.",id:955,quizId:42},14)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=61172)}),_N_E=e.O()}]);