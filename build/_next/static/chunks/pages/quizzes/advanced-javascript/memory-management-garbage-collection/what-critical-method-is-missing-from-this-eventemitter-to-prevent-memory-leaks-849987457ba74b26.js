(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[70868],{14510:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/what-critical-method-is-missing-from-this-eventemitter-to-prevent-memory-leaks",function(){return n(47922)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var s=n(85893),o=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:r}=e,i=(0,o.useRef)(null),a=(0,o.useRef)(!1),[c,l]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))i.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{i.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0)}}}},[c]),c)?(0,s.jsx)("ins",{ref:i,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},47922:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var s=n(85893),o=n(1475),r=n(41354),i=n(16833),a=!0;t.default=(0,r.Z)((0,i.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:27,totalQuestions:40,index:27,question:"What critical method is missing from this EventEmitter to prevent memory leaks?",options:["A method to remove listeners (off/removeListener)","A method to limit listener count","A method to clear all events","A method to check if an event exists"],code:"class EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n  \n  on(event, listener) {\n    if (!this.events[event]) {\n      this.events[event] = [];\n    }\n    this.events[event].push(listener);\n    return this;\n  }\n  \n  emit(event, ...args) {\n    if (this.events[event]) {\n      this.events[event].forEach(listener => listener(...args));\n    }\n    return this;\n  }\n}",nextQuestionPath:"what-is-memory-thrashing-in-the-context-of-javascript-performance",correctAnswer:1,explanation:"This EventEmitter is missing a method to remove listeners: 1) Without a way to remove event listeners, they accumulate indefinitely, 2) This creates memory leaks as objects referenced by listeners can't be garbage collected, 3) A proper implementation needs an 'off' or 'removeListener' method to detach listeners when they're no longer needed, 4) Event emitter patterns are a common source of memory leaks in JavaScript applications, 5) Listeners often create closures that capture references to other objects, compounding the leak, 6) Node.js's EventEmitter and browser event systems include listener removal methods for this reason, 7) The ability to detach listeners is essential for proper object lifecycle management, 8) This demonstrates how incomplete implementations of common patterns can lead to memory issues.",id:968,quizId:42},27)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=14510)}),_N_E=e.O()}]);