(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[69115],{30837:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/what-potential-memory-issue-does-this-code-demonstrate",function(){return t(3825)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}});var r=t(85893),o=t(67294),s=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:s="auto",className:a,fullWidthResponsive:i="true"}=e,c=(0,o.useRef)(null),d=(0,o.useRef)(!1),[l,u]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[l]),l)?(0,r.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(a),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":s,"data-full-width-responsive":i}):null};function a(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,r.jsx)("div",{children:(0,r.jsx)(e,{...this.props})}),(0,r.jsx)("div",{children:(0,r.jsx)(s,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},3825:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return i}});var r=t(85893),o=t(1475),s=t(25190),a=t(16833),i=!0;n.default=(0,s.Z)((0,a.Z)(()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,r.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,r.jsx)(o.Y3,{activeQuestionIndex:5,totalQuestions:40,index:5,question:"What potential memory issue does this code demonstrate?",options:["Stack overflow","Circular references","Memory fragmentation","Too many DOM elements"],code:"function createNodes() {\n  let div1 = document.createElement('div');\n  let div2 = document.createElement('div');\n  \n  div1.onclick = function() {\n    console.log(div2.innerHTML);\n  };\n  \n  div2.onclick = function() {\n    console.log(div1.innerHTML);\n  };\n  \n  return { div1, div2 };\n}",nextQuestionPath:"what-is-a-memory-leak-in-javascript",correctAnswer:2,explanation:"This code demonstrates circular references: 1) Each div element's event handler references the other div element, creating a circular reference structure, 2) div1 references div2 through its onclick handler, and div2 references div1 the same way, 3) In older JavaScript engines using reference counting, this would have caused a memory leak, 4) Modern mark-and-sweep algorithms can handle this situation correctly, 5) However, if these divs are removed from the DOM but the references aren't properly cleaned up, they may still prevent garbage collection, 6) This pattern can still cause memory issues in certain scenarios, especially when involving DOM elements, 7) Proper cleanup would involve removing the event handlers before deleting the elements, 8) Circular references should be carefully managed to avoid unintended memory retention.",id:946,quizId:42},5)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=30837)}),_N_E=e.O()}]);