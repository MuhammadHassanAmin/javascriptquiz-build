(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[44632],{26187:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/what-happens-to-variables-declared-inside-a-function-after-the-function-has-returned",function(){return n(22448)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var r=n(85893),a=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:o}=e,s=(0,a.useRef)(null),i=(0,a.useRef)(!1),[c,l]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))s.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{s.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[c]),c)?(0,r.jsx)("ins",{ref:s,className:"adsbygoogle ".concat(o),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function s(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,r.jsx)("div",{children:(0,r.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,r.jsx)("div",{children:(0,r.jsx)(e,{...this.props})}),(0,r.jsx)("div",{children:(0,r.jsx)(o,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},22448:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var r=n(85893),a=n(1475),o=n(41354),s=n(16833),i=!0;t.default=(0,o.Z)((0,s.Z)(()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,r.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,r.jsx)(a.Y3,{activeQuestionIndex:22,totalQuestions:40,index:22,question:"What happens to variables declared inside a function after the function has returned?",options:["They remain in memory until the page refreshes","They're immediately garbage collected unless referenced by a closure","They're stored in the browser cache","They're converted to global variables"],code:void 0,nextQuestionPath:"what-memory-problem-does-this-code-likely-create",correctAnswer:2,explanation:"Variables inside a function after it returns: 1) Local variables that aren't referenced by any closure become eligible for garbage collection, 2) The JavaScript engine can reclaim their memory after the function execution context is popped off the stack, 3) If a closure (inner function) references these variables, they're preserved in memory even after the outer function returns, 4) This closure-based memory retention is a fundamental mechanism in JavaScript, 5) The precise timing of garbage collection depends on the JavaScript engine's implementation, 6) Modern engines use sophisticated heuristics to determine when to run garbage collection, 7) Functions with no references to them or their internal variables are typically collected quickly, 8) This behavior is foundational to JavaScript's lexical scoping and closure system.",id:963,quizId:42},22)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=26187)}),_N_E=e.O()}]);