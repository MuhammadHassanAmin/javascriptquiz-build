(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[19804],{60681:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/from-a-memory-efficiency-perspective-which-approach-is-generally-better",function(){return t(64108)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return s}});var i=t(85893),r=t(67294),a=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:a}=e,s=(0,r.useRef)(null),o=(0,r.useRef)(!1),[c,l]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))s.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{s.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0)}}}},[c]),c)?(0,i.jsx)("ins",{ref:s,className:"adsbygoogle ".concat(a),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function s(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,i.jsx)("div",{children:(0,i.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,i.jsx)("div",{children:(0,i.jsx)(e,{...this.props})}),(0,i.jsx)("div",{children:(0,i.jsx)(a,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},64108:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return o}});var i=t(85893),r=t(1475),a=t(41354),s=t(16833),o=!0;n.default=(0,a.Z)((0,s.Z)(()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,i.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,i.jsx)(r.Y3,{activeQuestionIndex:35,totalQuestions:40,index:35,question:"From a memory efficiency perspective, which approach is generally better?",options:["Version 1, as it only uses one string variable","Version 2, as it avoids creating many intermediate strings","Both are equivalent in modern JavaScript engines","It depends entirely on the browser being used"],code:"// Version 1: Using string concatenation\nfunction createHTML(items) {\n  let html = '<ul>';\n  for (let i = 0; i < items.length; i++) {\n    html += '<li>' + items[i] + '</li>';\n  }\n  html += '</ul>';\n  return html;\n}\n\n// Version 2: Using array join\nfunction createHTML2(items) {\n  const parts = ['<ul>'];\n  for (let i = 0; i < items.length; i++) {\n    parts.push('<li>' + items[i] + '</li>');\n  }\n  parts.push('</ul>');\n  return parts.join('');\n}",nextQuestionPath:"what-is-the-most-significant-memory-advantage-of-using-typedarrays-like-uint8array-float64array-compared-to-regular-javascript-arrays",correctAnswer:2,explanation:"Version 2 using array join is generally more memory efficient: 1) String concatenation (+=) creates new string objects with each operation, potentially leading to many intermediate strings, 2) These intermediate strings need to be garbage collected, creating overhead, 3) Array.join() collects all pieces first and then performs a single concatenation operation, 4) This reduces the number of intermediate string allocations and subsequent garbage collection, 5) The difference becomes significant with larger lists or in performance-critical code, 6) Modern JavaScript engines have improved string concatenation performance, but array join is still typically more efficient for many concatenations, 7) For small numbers of items, the difference may be negligible, 8) This pattern demonstrates how data structure choices can impact memory efficiency even for seemingly simple operations.",id:976,quizId:42},35)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=60681)}),_N_E=e.O()}]);