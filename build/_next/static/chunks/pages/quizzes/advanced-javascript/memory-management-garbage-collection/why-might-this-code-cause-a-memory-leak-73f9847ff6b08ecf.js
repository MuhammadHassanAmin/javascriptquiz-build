(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[68420],{76027:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/why-might-this-code-cause-a-memory-leak",function(){return n(11043)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var a=n(85893),s=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:r}=e,o=(0,s.useRef)(null),i=(0,s.useRef)(!1),[c,l]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))o.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{o.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[c]),c)?(0,a.jsx)("ins",{ref:o,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function o(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsx)("div",{children:(0,a.jsx)(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},11043:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var a=n(85893),s=n(1475),r=n(41354),o=n(16833),i=!0;t.default=(0,r.Z)((0,o.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(s.Y3,{activeQuestionIndex:7,totalQuestions:40,index:7,question:"Why might this code cause a memory leak?",options:["Arrays are always memory leaks in JavaScript","The event listener creates a new array on each click","The event listener is never removed, holding references to largeData through closure","The code exceeds the maximum array size in JavaScript"],code:"document.getElementById('button').addEventListener('click', function() {\n  const largeData = new Array(1000000).fill('data');\n  // Use largeData...\n});",nextQuestionPath:"how-do-weakmap-and-weakset-help-with-memory-management",correctAnswer:3,explanation:"This code may cause a memory leak because the event listener is never removed: 1) Each time the button is clicked, a new, large array is created, 2) The event listener function forms a closure that maintains access to this array, 3) Even after the array is no longer needed, it remains in memory due to the closure, 4) If the button remains in the DOM, this listener will continue to exist, 5) Without explicitly removing the event listener, these large arrays accumulate with each click, 6) This pattern is particularly problematic because the array is very large (1,000,000 elements), 7) The proper solution would be to remove the event listener when it's no longer needed or restructure the code to avoid capturing large data, 8) This is a common pattern of memory leaks in web applications, especially single-page applications.",id:948,quizId:42},7)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=76027)}),_N_E=e.O()}]);