(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[37990],{30370:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/from-a-memory-perspective-what-s-the-main-difference-between-these-approaches",function(){return a(1620)}])},16833:function(e,t,a){"use strict";a.d(t,{Z:function(){return s}});var n=a(85893),r=a(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:a="6753219060",adFormat:i="auto",className:s,fullWidthResponsive:o="true",style:c={}}=e,l=(0,r.useRef)(null),d=(0,r.useRef)(!1),[u,p]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(s),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":a,"data-ad-format":i,"data-full-width-responsive":o}):null};function s(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(i,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},1620:function(e,t,a){"use strict";a.r(t),a.d(t,{__N_SSG:function(){return o}});var n=a(85893),r=a(1475),i=a(25190),s=a(16833),o=!0;t.default=(0,i.Z)((0,s.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(r.Y3,{activeQuestionIndex:39,totalQuestions:40,index:39,question:"From a memory perspective, what's the main difference between these approaches?",options:["The imperative approach uses less memory because it creates fewer functions","The functional approach uses less memory because it creates fewer intermediate objects","Both use equivalent memory, but the functional approach is clearer","The functional approach creates additional intermediate arrays that require more memory"],code:"// Imperative approach\nfunction processData1(data) {\n  let result = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].value > 100) {\n      const processed = transform(data[i]);\n      result.push(processed);\n    }\n  }\n  return result;\n}\n\n// Functional approach\nfunction processData2(data) {\n  return data\n    .filter(item => item.value > 100)\n    .map(transform);\n}",nextQuestionPath:"",correctAnswer:4,explanation:"The main memory difference is that the functional approach creates intermediate arrays: 1) The functional approach with filter() creates a complete intermediate array before mapping, 2) This requires additional memory allocation, especially with large data sets, 3) The imperative approach builds a single result array without intermediate collections, 4) For large data sets, this difference can be significant, 5) The functional approach prioritizes code clarity and maintainability over raw memory efficiency, 6) Modern JavaScript engines may optimize some chained operations, but the fundamental memory model remains, 7) The tradeoff between the approaches involves balancing memory efficiency against code readability and maintenance, 8) For memory-critical applications processing large datasets, the imperative approach may be preferred despite being more verbose.",id:980,quizId:42},39)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=30370)}),_N_E=e.O()}]);