(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[49847],{73197:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/advanced-javascript/memory-management-garbage-collection/what-memory-management-issue-might-this-caching-implementation-have",function(){return n(1659)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var o=n(85893),s=n(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:a="auto",className:i,fullWidthResponsive:c="true",style:r={}}=e,l=(0,s.useRef)(null),d=(0,s.useRef)(!1),[u,m]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(m(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,o.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(i),style:{display:"block",...r},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":a,"data-full-width-responsive":c}):null};function i(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(e){super(e)}}}},1659:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var o=n(85893),s=n(1475),a=n(25190),i=n(16833),c=!0;t.default=(0,a.Z)((0,i.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Memory Management & Garbage Collection"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:9,totalQuestions:40,index:9,question:"What memory management issue might this caching implementation have?",options:["The cache might grow unbounded as new objects are processed","Maps in JavaScript have a limited size capacity","The expensive computation might not be properly optimized","The function creates too many local variables"],code:"let cache = new Map();\n\nfunction process(obj) {\n  if (cache.has(obj)) {\n    return cache.get(obj);\n  }\n  \n  const result = expensiveComputation(obj);\n  cache.set(obj, result);\n  return result;\n}",nextQuestionPath:"what-is-the-primary-difference-between-shallow-and-deep-object-copying-in-terms-of-memory-usage",correctAnswer:1,explanation:"This caching implementation might lead to unbounded growth: 1) The cache Map keeps growing as new unique objects are processed, 2) There's no mechanism to remove old or unused entries from the cache, 3) This can lead to memory leaks if many objects are processed over time, 4) Even if the processed objects are no longer used elsewhere, the cache still holds references to them, 5) This prevents the garbage collector from reclaiming the memory of these objects, 6) A better implementation would include a strategy to limit cache size or remove stale entries, 7) Options include using a WeakMap (if appropriate), implementing a least-recently-used (LRU) strategy, or adding explicit cache clearing, 8) Caching is a common source of memory leaks if not carefully managed with clear retention policies.",id:950,quizId:42},9)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=73197)}),_N_E=e.O()}]);