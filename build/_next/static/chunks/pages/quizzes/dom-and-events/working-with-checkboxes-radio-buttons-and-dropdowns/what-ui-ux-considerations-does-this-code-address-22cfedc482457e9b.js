(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[53716],{21332:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/dom-and-events/working-with-checkboxes-radio-buttons-and-dropdowns/what-ui-ux-considerations-does-this-code-address",function(){return n(77931)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var s=n(85893),o=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:i="auto",className:a,fullWidthResponsive:r="true",style:d={}}=e,c=(0,o.useRef)(null),l=(0,o.useRef)(!1),[u,p]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(a),style:{display:"block",...d},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":i,"data-full-width-responsive":r}):null};function a(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(e){super(e)}}}},77931:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var s=n(85893),o=n(1475),i=n(25190),a=n(16833),r=!0;t.default=(0,i.Z)((0,a.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Working with Checkboxes, Radio Buttons, and Dropdowns"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:11,totalQuestions:22,index:11,question:"What UI/UX considerations does this code address?",options:["Only performance optimization","Only error handling","Loading state and performance","Only accessibility"],code:"function updateOptionsFromAPI(select, url) {\n  select.disabled = true;\n  fetch(url)\n    .then(r => r.json())\n    .then(data => {\n      const fragment = document.createDocumentFragment();\n      data.forEach(item => {\n        const option = new Option(item.text, item.value);\n        fragment.appendChild(option);\n      });\n      select.textContent = '';\n      select.appendChild(fragment);\n    })\n    .finally(() => select.disabled = false);\n}",nextQuestionPath:"what-s-the-significance-of-the-name-attribute-in-radio-button-groups",correctAnswer:3,explanation:"This code addresses both loading state feedback and performance optimization. Key features: 1) Disables the select during loading to prevent user interaction, 2) Uses DocumentFragment for efficient DOM updates, 3) Clears existing options safely with textContent, 4) Re-enables select after update regardless of success/failure, 5) Uses the Option constructor for clean option creation, 6) Handles the entire update process atomically. This pattern provides good UX by indicating when the control is being updated while ensuring efficient updates.",id:480,quizId:22},11)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=21332)}),_N_E=e.O()}]);