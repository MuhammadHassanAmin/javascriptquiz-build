(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[91694],{78662:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/dom-and-events/event-delegation/what-architectural-pattern-does-this-implement",function(){return n(7062)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var s=n(85893),o=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:i="auto",className:r,fullWidthResponsive:a="true",style:l={}}=e,c=(0,o.useRef)(null),d=(0,o.useRef)(!1),[u,p]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(r),style:{display:"block",...l},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":i,"data-full-width-responsive":a}):null};function r(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(e){super(e)}}}},7062:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var s=n(85893),o=n(1475),i=n(25190),r=n(16833),a=!0;t.default=(0,i.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Event Delegation"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:11,totalQuestions:20,index:11,question:"What architectural pattern does this implement?",options:["Command pattern","Observer pattern","Factory pattern","Singleton pattern"],code:"const createObservableDelegate = (element, options = {}) => {\n  const subscribers = new Set();\n  element.addEventListener(options.event || 'click', e => {\n    const target = e.target.closest(options.selector);\n    if (!target || !element.contains(target)) return;\n    subscribers.forEach(fn => fn(e, target));\n  });\n  return {\n    subscribe: fn => subscribers.add(fn),\n    unsubscribe: fn => subscribers.delete(fn)\n  };\n};",nextQuestionPath:"what-ui-pattern-does-this-delegation-implement",correctAnswer:2,explanation:"This implements the Observer pattern combined with event delegation. It allows multiple subscribers to observe and react to delegated events without direct coupling. Benefits include: 1) Separation of concerns between event delegation and handling, 2) Dynamic addition/removal of handlers without touching delegation setup, 3) Support for multiple independent observers of the same events, 4) Clean subscription management interface, 5) Maintained delegation efficiency with multiple handlers. This pattern is particularly useful for building modular, loosely-coupled systems.",id:440,quizId:20},11)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=78662)}),_N_E=e.O()}]);