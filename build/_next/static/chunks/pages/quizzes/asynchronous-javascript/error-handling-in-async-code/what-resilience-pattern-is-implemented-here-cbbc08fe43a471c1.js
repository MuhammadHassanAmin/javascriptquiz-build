(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[12549],{51137:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/asynchronous-javascript/error-handling-in-async-code/what-resilience-pattern-is-implemented-here",function(){return s(72759)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return a}});var n=s(85893),r=s(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:i="auto",className:a,fullWidthResponsive:o="true",style:l={}}=e,c=(0,r.useRef)(null),d=(0,r.useRef)(!1),[u,h]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(a),style:{display:"block",...l},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":i,"data-full-width-responsive":o}):null};function a(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(i,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(i,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},72759:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return o}});var n=s(85893),r=s(1475),i=s(25190),a=s(16833),o=!0;t.default=(0,i.Z)((0,a.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Error Handling in Async Code"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(r.Y3,{activeQuestionIndex:18,totalQuestions:20,index:18,question:"What resilience pattern is implemented here?",options:["Simple error handling","Retry mechanism","Circuit breaker pattern","Timeout handling"],code:"class CircuitBreaker {\n  constructor(operation, failureThreshold = 5, resetTimeout = 60000) {\n    this.operation = operation;\n    this.failureThreshold = failureThreshold;\n    this.resetTimeout = resetTimeout;\n    this.failures = 0;\n    this.lastFailureTime = null;\n    this.state = 'CLOSED';\n  }\n\n  async execute(...args) {\n    if (this.state === 'OPEN') {\n      if (Date.now() - this.lastFailureTime >= this.resetTimeout) {\n        this.state = 'HALF_OPEN';\n      } else {\n        throw new Error('Circuit breaker is OPEN');\n      }\n    }\n\n    try {\n      const result = await this.operation(...args);\n      this.reset();\n      return result;\n    } catch (error) {\n      this.failures++;\n      this.lastFailureTime = Date.now();\n      \n      if (this.failures >= this.failureThreshold) {\n        this.state = 'OPEN';\n      }\n      throw error;\n    }\n  }\n\n  reset() {\n    this.failures = 0;\n    this.state = 'CLOSED';\n  }\n}",nextQuestionPath:"when-should-you-use-error-recovery-vs-error-propagation-in-async-code",correctAnswer:3,explanation:"This implements the circuit breaker pattern: 1) Prevents cascade failures in distributed systems, 2) Implements three states: CLOSED, OPEN, and HALF-OPEN, 3) Tracks failure count and timing, 4) Automatically resets after timeout period, 5) Protects systems from repeated failures, 6) Essential pattern for resilient microservice architectures.",id:571,quizId:26},18)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=51137)}),_N_E=e.O()}]);