(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[69601],{25885:function(e,r,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/asynchronous-javascript/error-handling-in-async-code/what-error-handling-threshold-pattern-is-implemented",function(){return n(3245)}])},16833:function(e,r,n){"use strict";n.d(r,{Z:function(){return a}});var t=n(85893),s=n(67294),o=e=>{let{adClient:r="ca-pub-7544108447932228",adSlot:n="6753219060",className:o}=e,a=(0,s.useRef)(null),i=(0,s.useRef)(!1),[l,c]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(c(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[l]),l)?(0,t.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(o),style:{display:"block"},"data-ad-client":r,"data-ad-slot":n}):null};function a(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,t.jsx)("div",{children:(0,t.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,t.jsx)("div",{children:(0,t.jsx)(e,{...this.props})}),(0,t.jsx)("div",{children:(0,t.jsx)(o,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},3245:function(e,r,n){"use strict";n.r(r),n.d(r,{__N_SSG:function(){return i}});var t=n(85893),s=n(1475),o=n(25190),a=n(16833),i=!0;r.default=(0,o.Z)((0,a.Z)(()=>(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Error Handling in Async Code"}),(0,t.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,t.jsx)(s.Y3,{activeQuestionIndex:8,totalQuestions:20,index:8,question:"What error handling threshold pattern is implemented?",options:["Simple error collection","Error transformation","Error threshold with aggregation","Basic error logging"],code:"class AsyncOperationQueue {\n  constructor() {\n    this.errors = [];\n    this.results = [];\n  }\n\n  async addOperation(operation) {\n    try {\n      const result = await operation();\n      this.results.push(result);\n    } catch (error) {\n      this.errors.push(error);\n      if (this.errors.length >= 3) {\n        throw new AggregateError(this.errors, 'Too many operations failed');\n      }\n    }\n  }\n}",nextQuestionPath:"what-node-js-error-handling-pattern-is-shown",correctAnswer:3,explanation:"This implements an error threshold pattern: 1) Collects errors until a threshold is reached, 2) Uses AggregateError to combine multiple errors, 3) Allows some failures before total failure, 4) Maintains error history, 5) Useful for batch operations with tolerance for some failures, 6) Common in resilient systems that can handle partial failures.",id:561,quizId:26},8)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=25885)}),_N_E=e.O()}]);