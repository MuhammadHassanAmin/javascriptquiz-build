(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[41172],{22878:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/asynchronous-javascript/error-handling-in-async-code/what-error-handling-feature-is-demonstrated-here",function(){return r(77155)}])},16833:function(e,n,r){"use strict";r.d(n,{Z:function(){return a}});var s=r(85893),t=r(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:r="6753219060",adFormat:o="auto",className:a,fullWidthResponsive:c="true",style:i={}}=e,l=(0,t.useRef)(null),d=(0,t.useRef)(!1),[u,p]=(0,t.useState)(!1);return((0,t.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,t.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(a),style:{display:"block",...i},"data-ad-client":n,"data-ad-slot":r,"data-ad-format":o,"data-full-width-responsive":c}):null};function a(e){return class extends t.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},77155:function(e,n,r){"use strict";r.r(n),r.d(n,{__N_SSG:function(){return c}});var s=r(85893),t=r(1475),o=r(25190),a=r(16833),c=!0;n.default=(0,o.Z)((0,a.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Error Handling in Async Code"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(t.Y3,{activeQuestionIndex:4,totalQuestions:20,index:4,question:"What error handling feature is demonstrated here?",options:["Basic error catching","Resource cleanup in finally block","Error transformation","Error suppression"],code:"async function* processStream(stream) {\n  try {\n    for await (const chunk of stream) {\n      yield await processChunk(chunk);\n    }\n  } catch (error) {\n    yield* handleStreamError(error);\n  } finally {\n    await stream.close();\n  }\n}",nextQuestionPath:"what-error-handling-best-practice-is-shown-here",correctAnswer:2,explanation:"This demonstrates proper resource cleanup using finally: 1) Ensures resources are released even if errors occur, 2) Handles both successful and error cases, 3) Prevents resource leaks in async iterators, 4) Follows the RAII (Resource Acquisition Is Initialization) pattern, 5) Critical for handling streams and connections properly, 6) Works with both sync and async cleanup operations.",id:557,quizId:26},4)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=22878)}),_N_E=e.O()}]);