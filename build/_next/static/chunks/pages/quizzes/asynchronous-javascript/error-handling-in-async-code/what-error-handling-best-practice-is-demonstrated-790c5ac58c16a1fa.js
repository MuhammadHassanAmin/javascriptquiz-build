(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[29844],{15876:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/asynchronous-javascript/error-handling-in-async-code/what-error-handling-best-practice-is-demonstrated",function(){return s(94645)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return i}});var n=s(85893),r=s(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:o="auto",className:i,fullWidthResponsive:a="true",style:c={}}=e,d=(0,r.useRef)(null),l=(0,r.useRef)(!1),[u,m]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(m(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(i),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":o,"data-full-width-responsive":a}):null};function i(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(o,{adSlot:"6208304795",className:"h-[336px]"})}),(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(o,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},94645:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return a}});var n=s(85893),r=s(1475),o=s(25190),i=s(16833),a=!0;t.default=(0,o.Z)((0,i.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Error Handling in Async Code"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(r.Y3,{activeQuestionIndex:16,totalQuestions:20,index:16,question:"What error handling best practice is demonstrated?",options:["Basic timeout handling","Resource cleanup","Error transformation","Error suppression"],code:"async function withTimeout(promise, ms, errorMessage) {\n  let timeoutId;\n  try {\n    const timeoutPromise = new Promise((_, reject) => {\n      timeoutId = setTimeout(() => {\n        reject(new Error(errorMessage || `Operation timed out after ${ms}ms`));\n      }, ms);\n    });\n    return await Promise.race([promise, timeoutPromise]);\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}",nextQuestionPath:"what-specialized-error-handling-is-implemented",correctAnswer:2,explanation:"This shows proper resource cleanup in error handling: 1) Uses finally block to ensure cleanup, 2) Prevents timeoutId leak in both success and error cases, 3) Provides custom error messages, 4) Implements proper timeout mechanism, 5) Handles both resolution and rejection paths, 6) Critical for preventing memory leaks in error scenarios.",id:569,quizId:26},16)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=15876)}),_N_E=e.O()}]);