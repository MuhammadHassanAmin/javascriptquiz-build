(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2734],{66060:function(e,s,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/asynchronous-javascript/error-handling-in-async-code/what-error-handling-best-practice-is-shown-here",function(){return n(24680)}])},16833:function(e,s,n){"use strict";n.d(s,{Z:function(){return a}});var t=n(85893),r=n(67294),o=e=>{let{adClient:s="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:a,fullWidthResponsive:i="true",style:c={}}=e,d=(0,r.useRef)(null),l=(0,r.useRef)(!1),[u,p]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,t.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(a),style:{display:"block",...c},"data-ad-client":s,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":i}):null};function a(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,t.jsx)("div",{children:(0,t.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,t.jsx)("div",{children:(0,t.jsx)(e,{...this.props})}),(0,t.jsxs)("div",{children:[(0,t.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,t.jsx)(o,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,t.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,t.jsx)(o,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},24680:function(e,s,n){"use strict";n.r(s),n.d(s,{__N_SSG:function(){return i}});var t=n(85893),r=n(1475),o=n(25190),a=n(16833),i=!0;s.default=(0,o.Z)((0,a.Z)(()=>(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Error Handling in Async Code"}),(0,t.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,t.jsx)(r.Y3,{activeQuestionIndex:5,totalQuestions:20,index:5,question:"What error handling best practice is shown here?",options:["Generic error handling","Custom error types","Error suppression","Error logging"],code:"class APIError extends Error {\n  constructor(message, status, code) {\n    super(message);\n    this.name = 'APIError';\n    this.status = status;\n    this.code = code;\n  }\n}\n\nasync function fetchData() {\n  const response = await fetch('/api');\n  if (!response.ok) {\n    throw new APIError('API request failed', response.status, 'ERR_API');\n  }\n  return response.json();\n}",nextQuestionPath:"what-parallel-error-handling-pattern-is-shown",correctAnswer:2,explanation:"This demonstrates custom error types: 1) Creates domain-specific error classes, 2) Adds contextual information to errors, 3) Enables more precise error handling, 4) Maintains proper error inheritance chain, 5) Improves error debugging and logging, 6) Common practice in well-structured async applications.",id:558,quizId:26},5)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=66060)}),_N_E=e.O()}]);