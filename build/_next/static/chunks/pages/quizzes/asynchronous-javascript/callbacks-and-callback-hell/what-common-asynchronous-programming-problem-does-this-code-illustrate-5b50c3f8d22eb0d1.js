(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[15403],{96290:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/asynchronous-javascript/callbacks-and-callback-hell/what-common-asynchronous-programming-problem-does-this-code-illustrate",function(){return n(12084)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return l}});var o=n(85893),a=n(67294),s=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:s="auto",className:l,fullWidthResponsive:c="true"}=e,r=(0,a.useRef)(null),i=(0,a.useRef)(!1),[d,u]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[d]),d)?(0,o.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(l),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":s,"data-full-width-responsive":c}):null};function l(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},12084:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var o=n(85893),a=n(1475),s=n(25190),l=n(16833),c=!0;t.default=(0,s.Z)((0,l.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Callbacks & Callback Hell"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(a.Y3,{activeQuestionIndex:2,totalQuestions:20,index:2,question:"What common asynchronous programming problem does this code illustrate?",options:["Memory leak","Race condition","Callback hell","Stack overflow"],code:"getData(function(a) {\n  getMore(a, function(b) {\n    getMore(b, function(c) {\n      getMore(c, function(d) {\n        // Handle d\n      });\n    });\n  });\n});",nextQuestionPath:"what-are-the-main-problems-with-deeply-nested-callbacks",correctAnswer:3,explanation:"This code illustrates 'callback hell' or 'pyramid of doom' - a situation where multiple nested callbacks make code: 1) Difficult to read and maintain, 2) Hard to reason about the flow of execution, 3) Challenging to handle errors consistently, 4) Complex to modify or extend. This is a common issue in asynchronous JavaScript that led to the development of Promises and async/await as cleaner alternatives.",id:493,quizId:23},2)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=96290)}),_N_E=e.O()}]);