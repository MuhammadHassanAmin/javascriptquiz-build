(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[86836],{89320:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/asynchronous-javascript/event-loop-and-microtasks/how-are-mutationobserver-callbacks-handled-in-the-event-loop",function(){return s(46001)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return a}});var n=s(85893),o=s(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:r="auto",className:a,fullWidthResponsive:c="true",style:i={}}=e,l=(0,o.useRef)(null),d=(0,o.useRef)(!1),[u,p]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(a),style:{display:"block",...i},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":r,"data-full-width-responsive":c}):null};function a(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(r,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(e){super(e)}}}},46001:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return c}});var n=s(85893),o=s(1475),r=s(25190),a=s(16833),c=!0;t.default=(0,r.Z)((0,a.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Event Loop & Microtasks"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(o.Y3,{activeQuestionIndex:14,totalQuestions:20,index:14,question:"How are MutationObserver callbacks handled in the event loop?",options:["As regular synchronous code","As macrotasks","As microtasks","As high-priority interrupts"],code:"console.log('Script start');\n\nMutationObserver = class {\n  constructor(callback) {\n    callback([{type: 'attributes'}], this);\n  }\n};\n\nconst observer = new MutationObserver(() => console.log('Observer'));\nconsole.log('Script end');",nextQuestionPath:"what-is-the-purpose-of-queuemicrotask",correctAnswer:3,explanation:"MutationObserver callbacks are handled as microtasks: 1) Execute after synchronous code but before macrotasks, 2) Similar priority to Promise callbacks, 3) Used for DOM mutation notifications, 4) Part of the microtask queue specification, 5) Ensures consistent ordering with other DOM-related operations, 6) Important for implementing reactive DOM updates.",id:587,quizId:27},14)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=89320)}),_N_E=e.O()}]);