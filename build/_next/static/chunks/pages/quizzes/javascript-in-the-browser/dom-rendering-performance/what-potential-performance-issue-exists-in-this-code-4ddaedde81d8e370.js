(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[89683],{35308:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/dom-rendering-performance/what-potential-performance-issue-exists-in-this-code",function(){return n(3242)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var s=n(85893),o=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:i}=e,r=(0,o.useRef)(null),a=(0,o.useRef)(!1),[l,c]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(c(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0)}}}},[l]),l)?(0,s.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(i),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function r(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},3242:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var s=n(85893),o=n(1475),i=n(41354),r=n(16833),a=!0;t.default=(0,i.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"DOM Rendering Performance"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:6,totalQuestions:20,index:6,question:"What potential performance issue exists in this code?",options:["Incorrect class selection","Memory allocation issues","Layout thrashing in loop","Event listener overhead"],code:"function updateLayout() {\n  const elements = document.getElementsByClassName('dynamic');\n  for (let i = 0; i < elements.length; i++) {\n    const width = elements[i].offsetWidth;\n    elements[i].style.height = width + 'px';\n  }\n}",nextQuestionPath:"which-method-of-updating-multiple-elements-provides-better-rendering-performance",correctAnswer:3,explanation:"This code causes layout thrashing by reading (offsetWidth) and writing (style.height) layout properties in a loop. Each iteration forces the browser to recalculate layout synchronously, creating a performance bottleneck. To optimize: 1) First read all dimensions into an array, 2) Then perform all updates, allowing the browser to batch layout operations. Improved version:\n\nfunction updateLayout() {\n  const elements = document.getElementsByClassName('dynamic');\n  const widths = [];\n  \n  // Read phase\n  for (let i = 0; i < elements.length; i++) {\n    widths[i] = elements[i].offsetWidth;\n  }\n  \n  // Write phase\n  for (let i = 0; i < elements.length; i++) {\n    elements[i].style.height = widths[i] + 'px';\n  }\n}",id:1542,quizId:68},6)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=35308)}),_N_E=e.O()}]);