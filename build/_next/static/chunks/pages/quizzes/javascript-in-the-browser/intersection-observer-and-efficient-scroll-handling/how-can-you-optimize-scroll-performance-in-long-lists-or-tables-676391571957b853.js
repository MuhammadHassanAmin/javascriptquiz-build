(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[38948],{11096:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/intersection-observer-and-efficient-scroll-handling/how-can-you-optimize-scroll-performance-in-long-lists-or-tables",function(){return t(47468)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}});var s=t(85893),i=t(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:o}=e,r=(0,i.useRef)(null),l=(0,i.useRef)(!1),[a,c]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(c(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(a){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[a]),a)?(0,s.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(o),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function r(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},47468:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return l}});var s=t(85893),i=t(1475),o=t(25190),r=t(16833),l=!0;n.default=(0,o.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Intersection Observer & Efficient Scroll Handling"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:18,totalQuestions:20,index:18,question:"How can you optimize scroll performance in long lists or tables?",options:["Render all items at once","Use CSS visibility for off-screen items","Remove off-screen elements from DOM","Use virtual scrolling with Intersection Observer"],code:"const listObserver = new IntersectionObserver((entries) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      const row = entry.target;\n      row.style.visibility = 'visible';\n      if (row.dataset.src) {\n        row.textContent = row.dataset.src;\n        delete row.dataset.src;\n      }\n    } else {\n      entry.target.style.visibility = 'hidden';\n    }\n  });\n}, {\n  rootMargin: '100px 0px'\n});",nextQuestionPath:"what-is-the-most-efficient-way-to-track-element-visibility-for-analytics",correctAnswer:4,explanation:"Optimizing scroll performance in long lists can be achieved by: 1) Using Intersection Observer to manage visibility and content loading, 2) Implementing virtual scrolling by only rendering visible items, 3) Using CSS visibility for off-screen items to maintain layout, 4) Preloading content slightly before it's needed using rootMargin. The code demonstrates this approach by managing visibility and lazy loading content for list items, improving performance with large datasets.",id:1691,quizId:75},18)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=11096)}),_N_E=e.O()}]);