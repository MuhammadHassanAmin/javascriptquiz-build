(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[12513],{52914:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/fetching-and-displaying-data/what-is-the-best-practice-for-handling-real-time-data-updates-in-a-list-or-grid-view",function(){return n(74751)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var s=n(85893),i=n(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:a}=e,r=(0,i.useRef)(null),o=(0,i.useRef)(!1),[d,c]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(c(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0)}}}},[d]),d)?(0,s.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(a),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function r(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},74751:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return o}});var s=n(85893),i=n(1475),a=n(25190),r=n(16833),o=!0;t.default=(0,a.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Fetching & Displaying Data"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:15,totalQuestions:20,index:15,question:"What is the best practice for handling real-time data updates in a list or grid view?",options:["Always refresh the entire list","Ignore real-time updates","Update only changed items efficiently","Remove animation effects"],code:"function RealTimeList({ websocket }) {\n  const [items, setItems] = useState([]);\n  \n  useEffect(() => {\n    websocket.addEventListener('message', (event) => {\n      const update = JSON.parse(event.data);\n      \n      setItems(current => {\n        const index = current.findIndex(item => item.id === update.id);\n        if (index === -1) return [...current, update];\n        \n        const newItems = [...current];\n        newItems[index] = { ...newItems[index], ...update };\n        return newItems;\n      });\n    });\n  }, [websocket]);",nextQuestionPath:"how-should-file-uploads-be-handled-to-provide-the-best-user-experience",correctAnswer:3,explanation:"Efficient real-time updates should: 1) Update only changed items without full re-renders, 2) Implement proper optimistic updates, 3) Handle conflict resolution, 4) Maintain smooth animations and transitions. Additional considerations include:\n- Implementing proper error recovery\n- Handling offline scenarios\n- Managing connection states\n- Implementing proper UI feedback for updates\n- Optimizing for performance with large datasets",id:1611,quizId:71},15)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=52914)}),_N_E=e.O()}]);