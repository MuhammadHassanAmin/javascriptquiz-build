(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[77286],{4460:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/fetching-and-displaying-data/what-potential-issue-does-this-data-fetching-implementation-have",function(){return n(27719)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var a=n(85893),s=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:r,fullWidthResponsive:i="true",style:d={}}=e,c=(0,s.useRef)(null),l=(0,s.useRef)(!1),[u,p]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,a.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(r),style:{display:"block",...d},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":i}):null};function r(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},27719:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var a=n(85893),s=n(1475),o=n(25190),r=n(16833),i=!0;t.default=(0,o.Z)((0,r.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Fetching & Displaying Data"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(s.Y3,{activeQuestionIndex:2,totalQuestions:20,index:2,question:"What potential issue does this data fetching implementation have?",options:["The async function is unnecessary","The fetch request isn't cached","There's no error handling","The display function is too simple"],code:"async function fetchUserData() {\n  const response = await fetch('/api/user');\n  const data = await response.json();\n  displayUserData(data);\n}\n\nfunction displayUserData(data) {\n  document.getElementById('username').textContent = data.name;\n  document.getElementById('email').textContent = data.email;\n}",nextQuestionPath:"what-is-the-purpose-of-the-abortcontroller-when-making-fetch-requests",correctAnswer:3,explanation:"This implementation lacks crucial error handling for both network errors and invalid responses. A more robust implementation should: 1) Check response.ok to handle HTTP error status codes, 2) Implement catch blocks for network errors and JSON parsing errors, 3) Handle loading and error states in the UI, 4) Validate the received data before display. Example improvement:\n\nasync function fetchUserData() {\n  try {\n    const response = await fetch('/api/user');\n    if (!response.ok) throw new Error('Network response was not ok');\n    const data = await response.json();\n    if (!data.name || !data.email) throw new Error('Invalid data format');\n    displayUserData(data);\n  } catch (error) {\n    handleError(error);\n  }\n}",id:1598,quizId:71},2)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=4460)}),_N_E=e.O()}]);