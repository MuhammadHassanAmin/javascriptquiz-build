(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[22396],{5276:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/fetching-and-displaying-data/what-is-the-best-practice-for-handling-race-conditions-when-fetching-data",function(){return s(53690)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return r}});var n=s(85893),i=s(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:a="auto",className:r,fullWidthResponsive:o="true",style:c={}}=e,d=(0,i.useRef)(null),u=(0,i.useRef)(!1),[l,h]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[l]),l)?(0,n.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(r),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":a,"data-full-width-responsive":o}):null};function r(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},53690:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return o}});var n=s(85893),i=s(1475),a=s(25190),r=s(16833),o=!0;t.default=(0,a.Z)((0,r.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Fetching & Displaying Data"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(i.Y3,{activeQuestionIndex:4,totalQuestions:20,index:4,question:"What is the best practice for handling race conditions when fetching data?",options:["Using setTimeout to delay requests","Implementing request queuing","Tracking and comparing request order","Disabling the UI during requests"],code:"let currentRequestId = 0;\n\nasync function fetchData(query) {\n  const requestId = ++currentRequestId;\n  \n  const response = await fetch(`/api/search?q=${query}`);\n  const data = await response.json();\n  \n  if (requestId === currentRequestId) {\n    displayResults(data);\n  }\n}",nextQuestionPath:"what-technique-should-be-used-to-optimize-multiple-concurrent-api-requests",correctAnswer:3,explanation:"Race conditions in data fetching can occur when multiple requests are made in quick succession, and responses arrive in a different order than the requests. Best practices include: 1) Tracking request order using identifiers or timestamps, 2) Only processing responses that correspond to the most recent request, 3) Canceling outdated requests using AbortController when possible, 4) Implementing debouncing or throttling for user input-triggered requests. This ensures that only the most relevant data is displayed in the UI.",id:1600,quizId:71},4)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=5276)}),_N_E=e.O()}]);