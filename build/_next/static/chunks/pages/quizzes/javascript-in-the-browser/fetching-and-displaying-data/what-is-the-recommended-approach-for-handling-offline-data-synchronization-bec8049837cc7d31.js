(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[88230],{94382:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/fetching-and-displaying-data/what-is-the-recommended-approach-for-handling-offline-data-synchronization",function(){return t(9188)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}});var o=t(85893),a=t(67294),i=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:i="auto",className:r,fullWidthResponsive:s="true",style:c={}}=e,d=(0,a.useRef)(null),l=(0,a.useRef)(!1),[u,p]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,o.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(r),style:{display:"block",...c},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":i,"data-full-width-responsive":s}):null};function r(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},9188:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return s}});var o=t(85893),a=t(1475),i=t(25190),r=t(16833),s=!0;n.default=(0,i.Z)((0,r.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Fetching & Displaying Data"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(a.Y3,{activeQuestionIndex:18,totalQuestions:20,index:18,question:"What is the recommended approach for handling offline data synchronization?",options:["Ignore offline changes","Always require online connection","Implement queue-based synchronization","Clear local data regularly"],code:"class OfflineSync {\n  constructor() {\n    this.queue = new Queue();\n    this.db = new IndexedDB('offlineStore');\n  }\n\n  async enqueue(operation) {\n    await this.db.add(operation);\n    if (navigator.onLine) {\n      this.processQueue();\n    }\n  }\n\n  async processQueue() {\n    while (await this.queue.hasItems()) {\n      const operation = await this.queue.dequeue();\n      try {\n        await this.syncOperation(operation);\n        await this.db.remove(operation.id);\n      } catch (error) {\n        if (!isRetryableError(error)) {\n          await this.handleSyncError(operation, error);\n        }\n      }\n    }\n  }",nextQuestionPath:"how-should-state-management-be-handled-for-complex-data-driven-uis",correctAnswer:3,explanation:"Proper offline synchronization should: 1) Queue operations when offline, 2) Implement proper conflict resolution, 3) Handle retry logic for failed operations, 4) Maintain data consistency. Additional best practices include:\n- Using Service Workers for offline support\n- Implementing proper queue management\n- Handling data conflicts\n- Providing sync status indicators\n- Implementing proper error recovery",id:1614,quizId:71},18)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=94382)}),_N_E=e.O()}]);