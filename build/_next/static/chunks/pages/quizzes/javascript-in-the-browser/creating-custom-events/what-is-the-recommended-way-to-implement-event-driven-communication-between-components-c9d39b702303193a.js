(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[34791],{75578:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/creating-custom-events/what-is-the-recommended-way-to-implement-event-driven-communication-between-components",function(){return t(29817)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return o}});var s=t(85893),a=t(67294),i=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:i}=e,o=(0,a.useRef)(null),c=(0,a.useRef)(!1),[r,l]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(r){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))o.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{o.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[r]),r)?(0,s.jsx)("ins",{ref:o,className:"adsbygoogle ".concat(i),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function o(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},29817:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var s=t(85893),a=t(1475),i=t(25190),o=t(16833),c=!0;n.default=(0,i.Z)((0,o.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Creating Custom Events"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(a.Y3,{activeQuestionIndex:11,totalQuestions:20,index:11,question:"What is the recommended way to implement event-driven communication between components?",options:["Use global variables","Direct function calls","Use a centralized event bus","Pass callbacks as props"],code:"class EventBus {\n  static #instance;\n  #listeners = new Map();\n\n  static getInstance() {\n    if (!EventBus.#instance) {\n      EventBus.#instance = new EventBus();\n    }\n    return EventBus.#instance;\n  }\n\n  emit(eventName, detail) {\n    const event = new CustomEvent(eventName, { detail });\n    document.dispatchEvent(event);\n  }\n\n  on(eventName, callback) {\n    if (!this.#listeners.has(eventName)) {\n      this.#listeners.set(eventName, new Set());\n    }\n    const handlers = this.#listeners.get(eventName);\n    handlers.add(callback);\n    document.addEventListener(eventName, callback);\n  }\n\n  off(eventName, callback) {\n    const handlers = this.#listeners.get(eventName);\n    if (handlers) {\n      handlers.delete(callback);\n      document.removeEventListener(eventName, callback);\n    }\n  }\n}",nextQuestionPath:"when-should-you-use-event-delegation-with-custom-events",correctAnswer:3,explanation:"A centralized event bus using custom events is recommended for component communication because:\n1. It provides loose coupling:\n   - Components don't need direct references to each other\n   - Easier to maintain and modify components independently\n   - Simpler testing and mocking\n2. Implements the publish-subscribe pattern:\n   - One-to-many communication\n   - Dynamic subscriber management\n   - Flexible event handling\n3. Centralizes event management:\n   - Single source of truth for events\n   - Easier debugging and monitoring\n   - Consistent event handling patterns\n4. Supports scalability:\n   - Easy to add new subscribers\n   - Minimal impact when adding new events\n   - Better code organization",id:1627,quizId:72},11)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=75578)}),_N_E=e.O()}]);