(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[90225],{56666:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/creating-custom-events/how-do-you-properly-clean-up-custom-event-listeners-to-prevent-memory-leaks",function(){return t(89770)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var s=t(85893),o=t(67294),r=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:r}=e,i=(0,o.useRef)(null),c=(0,o.useRef)(!1),[l,a]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(a(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))i.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{i.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[l]),l)?(0,s.jsx)("ins",{ref:i,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},89770:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var s=t(85893),o=t(1475),r=t(25190),i=t(16833),c=!0;n.default=(0,r.Z)((0,i.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Creating Custom Events"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:10,totalQuestions:20,index:10,question:"How do you properly clean up custom event listeners to prevent memory leaks?",options:["Let the garbage collector handle it","Remove listeners when component is destroyed","Use weak references only","Never remove event listeners"],code:"class ComponentWithEvents {\n  constructor() {\n    this.handleEvent = this.handleEvent.bind(this);\n    document.addEventListener('customEvent', this.handleEvent);\n  }\n\n  destroy() {\n    document.removeEventListener('customEvent', this.handleEvent);\n  }\n\n  handleEvent(e) {\n    console.log('Event handled:', e.detail);\n  }\n}",nextQuestionPath:"what-is-the-recommended-way-to-implement-event-driven-communication-between-components",correctAnswer:2,explanation:"Proper cleanup of custom event listeners is crucial to prevent memory leaks:\n1. Always remove event listeners when they're no longer needed:\n   - When components are destroyed/unmounted\n   - When temporary listeners are no longer required\n   - When switching event targets\n2. Keep track of all attached listeners:\n   - Store references to handler functions\n   - Document listener lifecycle\n   - Consider using a central registry\n3. Bind event handlers properly:\n   - Use class methods or bound functions\n   - Maintain correct this context\n4. Follow component lifecycle:\n   - Add listeners during initialization\n   - Remove listeners during cleanup\n   - Handle dynamic target changes",id:1626,quizId:72},10)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=56666)}),_N_E=e.O()}]);