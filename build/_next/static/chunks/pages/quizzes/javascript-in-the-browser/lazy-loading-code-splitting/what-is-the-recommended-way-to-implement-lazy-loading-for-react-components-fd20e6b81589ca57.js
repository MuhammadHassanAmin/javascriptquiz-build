(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[53403],{88828:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/lazy-loading-code-splitting/what-is-the-recommended-way-to-implement-lazy-loading-for-react-components",function(){return n(484)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var s=n(85893),a=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:i,fullWidthResponsive:l="true",style:d={}}=e,c=(0,a.useRef)(null),r=(0,a.useRef)(!1),[p,u]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(p){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0)}}}},[p]),p)?(0,s.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(i),style:{display:"block",...d},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":l}):null};function i(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,s.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},484:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return l}});var s=n(85893),a=n(1475),o=n(25190),i=n(16833),l=!0;t.default=(0,o.Z)((0,i.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Lazy Loading & Code Splitting"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(a.Y3,{activeQuestionIndex:4,totalQuestions:20,index:4,question:"What is the recommended way to implement lazy loading for React components?",options:["Using regular import statements","Using require() function","Using React.lazy with Suspense","Using setTimeout for delayed loading"],code:"const LazyComponent = React.lazy(() => import('./MyComponent'));\n\nfunction App() {\n  return (\n    <Suspense fallback={<LoadingSpinner />}>\n      <LazyComponent />\n    </Suspense>\n  );\n}",nextQuestionPath:"what-strategy-should-be-used-for-lazy-loading-images-in-modern-browsers",correctAnswer:3,explanation:"React.lazy with Suspense is the recommended way to implement component lazy loading in React applications because: 1) It integrates seamlessly with React's component model, 2) Provides a declarative way to specify loading states with fallback content, 3) Handles loading states and errors automatically, 4) Works well with code splitting tools like webpack. The Suspense component wraps lazy-loaded components and shows fallback content (like a loading spinner) while the component is being loaded. This pattern provides a clean, maintainable way to implement lazy loading while ensuring good user experience during loading states.",id:1560,quizId:69},4)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=88828)}),_N_E=e.O()}]);