(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[24196],{14677:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/lazy-loading-code-splitting/how-can-you-optimize-the-caching-strategy-for-lazy-loaded-modules",function(){return t(98099)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var s=t(85893),o=t(67294),a=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:a="auto",className:i,fullWidthResponsive:c="true",style:r={}}=e,l=(0,o.useRef)(null),d=(0,o.useRef)(!1),[u,h]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(i),style:{display:"block",...r},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":a,"data-full-width-responsive":c}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},98099:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var s=t(85893),o=t(1475),a=t(25190),i=t(16833),c=!0;n.default=(0,a.Z)((0,i.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Lazy Loading & Code Splitting"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:17,totalQuestions:20,index:17,question:"How can you optimize the caching strategy for lazy-loaded modules?",options:["Disable caching completely","Cache all modules together","Use content hashing and proper cache groups","Reload all modules on each visit"],code:"// webpack.config.js\nmodule.exports = {\n  output: {\n    filename: '[name].[contenthash].js',\n    chunkFilename: '[name].[contenthash].chunk.js'\n  },\n  optimization: {\n    moduleIds: 'deterministic',\n    runtimeChunk: 'single',\n    splitChunks: {\n      cacheGroups: {\n        vendor: {\n          test: /[\\\\/]node_modules[\\\\/]/,\n          name: 'vendors',\n          chunks: 'all'\n        }\n      }\n    }\n  }\n};",nextQuestionPath:"what-approach-should-be-used-for-loading-polyfills-in-a-code-split-application",correctAnswer:3,explanation:"Using content hashing and proper cache groups is the optimal caching strategy because: 1) Content hashing ensures cache busting only when content changes, 2) Separate cache groups for vendor and application code optimize cache hit rates, 3) Deterministic module IDs prevent unnecessary cache invalidation, 4) Runtime chunk separation improves caching efficiency. The configuration shown implements these best practices by using content hashes in filenames, separating vendor chunks, and optimizing for long-term caching while ensuring proper cache invalidation when needed.",id:1573,quizId:69},17)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=14677)}),_N_E=e.O()}]);