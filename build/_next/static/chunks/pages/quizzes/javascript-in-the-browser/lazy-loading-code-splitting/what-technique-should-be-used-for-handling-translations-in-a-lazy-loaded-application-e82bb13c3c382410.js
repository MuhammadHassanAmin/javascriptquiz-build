(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[74066],{69250:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/lazy-loading-code-splitting/what-technique-should-be-used-for-handling-translations-in-a-lazy-loaded-application",function(){return t(64656)}])},16833:function(n,e,t){"use strict";t.d(e,{Z:function(){return i}});var a=t(85893),s=t(67294),o=n=>{let{adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:o="auto",className:i,fullWidthResponsive:l="true",style:r={}}=n,c=(0,s.useRef)(null),d=(0,s.useRef)(!1),[u,p]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(p(!0),()=>{let n=document.getElementById("__next");n&&n.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let n=document.createElement("script");n.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",n.async=!0,n.crossOrigin="anonymous",document.body.appendChild(n),n.onload=()=>{c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,a.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(i),style:{display:"block",...r},"data-ad-client":e,"data-ad-slot":t,"data-ad-format":o,"data-full-width-responsive":l}):null};function i(n){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,a.jsx)("div",{children:(0,a.jsx)(n,{...this.props})}),(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(n){super(n)}}}},64656:function(n,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return l}});var a=t(85893),s=t(1475),o=t(25190),i=t(16833),l=!0;e.default=(0,o.Z)((0,i.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Lazy Loading & Code Splitting"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(s.Y3,{activeQuestionIndex:19,totalQuestions:20,index:19,question:"What technique should be used for handling translations in a lazy-loaded application?",options:["Load all translations at startup","Use only English translations","Load translations on demand by locale","Avoid translations entirely"],code:"const loadTranslations = async (locale) => {\n  const translations = await import(\n    /* webpackChunkName: \"translations-[request]\" */\n    `./translations/${locale}.json`\n  );\n  return translations.default;\n};\n\nconst setLanguage = async (locale) => {\n  const translations = await loadTranslations(locale);\n  i18n.addResourceBundle(locale, 'translation', translations);\n  i18n.changeLanguage(locale);\n};",nextQuestionPath:"",correctAnswer:3,explanation:"Loading translations on demand by locale is the optimal approach because: 1) It reduces the initial bundle size by not loading unused translations, 2) Allows for efficient caching of translation files by locale, 3) Provides better performance for users who only use one language, 4) Can be combined with preloading for anticipated language switches. The example shows proper implementation with dynamic imports and webpack chunk naming for better organization and caching, while maintaining a clean interface for language switching.",id:1575,quizId:69},19)})]})))}},function(n){n.O(0,[41966,25675,82893,92888,49774,40179],function(){return n(n.s=69250)}),_N_E=n.O()}]);