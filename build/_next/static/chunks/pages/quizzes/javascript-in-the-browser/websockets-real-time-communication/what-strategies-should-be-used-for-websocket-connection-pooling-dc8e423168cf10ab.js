(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[61299],{42636:function(n,e,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/websockets-real-time-communication/what-strategies-should-be-used-for-websocket-connection-pooling",function(){return o(10656)}])},16833:function(n,e,o){"use strict";o.d(e,{Z:function(){return c}});var t=o(85893),s=o(67294),i=n=>{let{adClient:e="ca-pub-7544108447932228",adSlot:o="6753219060",adFormat:i="auto",className:c,fullWidthResponsive:a="true",style:r={}}=n,l=(0,s.useRef)(null),d=(0,s.useRef)(!1),[u,p]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(p(!0),()=>{let n=document.getElementById("__next");n&&n.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let n=document.createElement("script");n.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",n.async=!0,n.crossOrigin="anonymous",document.body.appendChild(n),n.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,t.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(c),style:{display:"block",...r},"data-ad-client":e,"data-ad-slot":o,"data-ad-format":i,"data-full-width-responsive":a}):null};function c(n){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,t.jsx)("div",{children:(0,t.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,t.jsx)("div",{children:(0,t.jsx)(n,{...this.props})}),(0,t.jsx)("div",{children:(0,t.jsx)(i,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(n){super(n)}}}},10656:function(n,e,o){"use strict";o.r(e),o.d(e,{__N_SSG:function(){return a}});var t=o(85893),s=o(1475),i=o(25190),c=o(16833),a=!0;e.default=(0,i.Z)((0,c.Z)(()=>(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"WebSockets & Real-Time Communication"}),(0,t.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,t.jsx)(s.Y3,{activeQuestionIndex:13,totalQuestions:17,index:13,question:"What strategies should be used for WebSocket connection pooling?",options:["Create new connections always","Use single connection only","Implement connection limits and reuse","Ignore connection management"],code:"class WebSocketPool {\n    constructor(maxConnections = 5) {\n        this.pool = new Map();\n        this.maxConnections = maxConnections;\n    }\n\n    async getConnection(userId) {\n        if (this.pool.has(userId)) {\n            return this.pool.get(userId);\n        }\n\n        if (this.pool.size >= this.maxConnections) {\n            const oldestUserId = this.findOldestConnection();\n            await this.removeConnection(oldestUserId);\n        }\n\n        const connection = await this.createConnection(userId);\n        this.pool.set(userId, connection);\n        return connection;\n    }\n\n    async removeConnection(userId) {\n        const connection = this.pool.get(userId);\n        if (connection) {\n            await connection.close();\n            this.pool.delete(userId);\n        }\n    }\n}",nextQuestionPath:"how-should-websocket-compression-be-implemented",correctAnswer:3,explanation:"WebSocket connection pooling strategies should include: 1) Maximum connection limits, 2) Connection reuse policies, 3) Connection health monitoring, 4) Load balancing across pools, 5) Connection cleanup and resource management, 6) Idle connection handling, 7) Connection creation throttling, 8) Error handling and recovery, 9) Pool metrics and monitoring, 10) Graceful degradation mechanisms. The code demonstrates a basic connection pool implementation with connection limits and reuse.",id:1649,quizId:73},13)})]})))}},function(n){n.O(0,[41966,25675,82893,92888,49774,40179],function(){return n(n.s=42636)}),_N_E=n.O()}]);