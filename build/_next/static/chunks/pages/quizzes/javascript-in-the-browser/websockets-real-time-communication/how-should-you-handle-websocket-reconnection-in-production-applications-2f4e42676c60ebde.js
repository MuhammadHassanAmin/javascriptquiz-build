(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[28010],{35339:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/websockets-real-time-communication/how-should-you-handle-websocket-reconnection-in-production-applications",function(){return t(26975)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return c}});var o=t(85893),s=t(67294),i=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:i="auto",className:c,fullWidthResponsive:r="true"}=e,a=(0,s.useRef)(null),l=(0,s.useRef)(!1),[d,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[d]),d)?(0,o.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(c),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":i,"data-full-width-responsive":r}):null};function c(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6208304795",className:"h-[300px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},26975:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return r}});var o=t(85893),s=t(1475),i=t(25190),c=t(16833),r=!0;n.default=(0,i.Z)((0,c.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"WebSockets & Real-Time Communication"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:4,totalQuestions:17,index:4,question:"How should you handle WebSocket reconnection in production applications?",options:["Manually refresh the page","Always create new connection immediately","Use exponential backoff and retry limits","Ignore disconnections"],code:"class WebSocketClient {\n    constructor(url, options = {}) {\n        this.url = url;\n        this.options = {\n            reconnectInterval: 1000,\n            maxRetries: 5,\n            ...options\n        };\n        this.retries = 0;\n        this.connect();\n    }\n\n    connect() {\n        this.ws = new WebSocket(this.url);\n        this.ws.onclose = this.handleClose.bind(this);\n    }\n\n    handleClose() {\n        if (this.retries < this.options.maxRetries) {\n            this.retries++;\n            setTimeout(() => {\n                this.connect();\n            }, this.options.reconnectInterval * Math.pow(2, this.retries - 1));\n        }\n    }\n}",nextQuestionPath:"what-is-the-significance-of-the-websocket-close-codes",correctAnswer:3,explanation:"Production WebSocket reconnection should implement several best practices: 1) Use exponential backoff to prevent server flooding, 2) Set maximum retry attempts, 3) Implement connection state tracking, 4) Handle cleanup and resource management, 5) Consider connection quality before reconnecting. The code demonstrates a robust implementation using exponential backoff (2^n * base interval) and retry limits, wrapped in a reusable class.",id:1640,quizId:73},4)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=35339)}),_N_E=e.O()}]);