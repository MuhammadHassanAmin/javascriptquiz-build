(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[32861],{455:function(e,o,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-in-the-browser/websockets-real-time-communication/what-are-the-best-practices-for-implementing-websocket-subprotocols",function(){return n(31985)}])},16833:function(e,o,n){"use strict";n.d(o,{Z:function(){return i}});var t=n(85893),s=n(67294),c=e=>{let{adClient:o="ca-pub-7544108447932228",adSlot:n="6753219060",className:c}=e,i=(0,s.useRef)(null),r=(0,s.useRef)(!1),[l,a]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(a(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))i.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{i.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0)}}}},[l]),l)?(0,t.jsx)("ins",{ref:i,className:"adsbygoogle ".concat(c),style:{display:"block"},"data-ad-client":o,"data-ad-slot":n}):null};function i(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,t.jsx)("div",{children:(0,t.jsx)(c,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,t.jsx)("div",{children:(0,t.jsx)(e,{...this.props})}),(0,t.jsx)("div",{children:(0,t.jsx)(c,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},31985:function(e,o,n){"use strict";n.r(o),n.d(o,{__N_SSG:function(){return r}});var t=n(85893),s=n(1475),c=n(25190),i=n(16833),r=!0;o.default=(0,c.Z)((0,i.Z)(()=>(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"WebSockets & Real-Time Communication"}),(0,t.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,t.jsx)(s.Y3,{activeQuestionIndex:8,totalQuestions:17,index:8,question:"What are the best practices for implementing WebSocket subprotocols?",options:["Always use default protocol","Mix multiple protocols freely","Define and negotiate protocols during connection","Ignore protocol selection"],code:"const protocols = ['json', 'xml'];\nconst ws = new WebSocket('ws://example.com', protocols);\n\nws.onopen = (event) => {\n    console.log('Connected using:', ws.protocol);\n};\n\n// Using the agreed protocol\nif (ws.protocol === 'json') {\n    ws.send(JSON.stringify({ type: 'message', content: 'Hello' }));\n} else if (ws.protocol === 'xml') {\n    ws.send('<message><content>Hello</content></message>');\n}",nextQuestionPath:"how-should-websocket-error-handling-be-implemented-in-production-applications",correctAnswer:3,explanation:"Best practices for WebSocket subprotocols include: 1) Define clear protocol specifications, 2) Implement protocol negotiation during connection establishment, 3) Handle protocol-specific message formatting and parsing, 4) Provide fallback mechanisms, 5) Document protocol requirements and capabilities, 6) Consider versioning for protocol evolution. The code shows proper protocol negotiation and protocol-specific message handling.",id:1644,quizId:73},8)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=455)}),_N_E=e.O()}]);