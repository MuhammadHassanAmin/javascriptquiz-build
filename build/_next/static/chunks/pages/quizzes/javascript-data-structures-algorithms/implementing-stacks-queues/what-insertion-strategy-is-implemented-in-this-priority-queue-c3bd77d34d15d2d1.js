(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[53509],{82940:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-data-structures-algorithms/implementing-stacks-queues/what-insertion-strategy-is-implemented-in-this-priority-queue",function(){return n(52840)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var s=n(85893),i=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:r}=e,o=(0,i.useRef)(null),a=(0,i.useRef)(!1),[d,u]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))o.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{o.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0)}}}},[d]),d)?(0,s.jsx)("ins",{ref:o,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function o(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},52840:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var s=n(85893),i=n(1475),r=n(41354),o=n(16833),a=!0;t.default=(0,r.Z)((0,o.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Implementing Stacks & Queues"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:7,totalQuestions:20,index:7,question:"What insertion strategy is implemented in this Priority Queue?",options:["Random insertion","FIFO ordering","Sorted insertion by priority","Stack-based insertion"],code:"class PriorityQueue {\n  constructor() {\n    this.items = [];\n  }\n  \n  enqueue(element, priority) {\n    const qElement = { element, priority };\n    let added = false;\n    \n    for (let i = 0; i < this.items.length; i++) {\n      if (this.items[i].priority > priority) {\n        this.items.splice(i, 0, qElement);\n        added = true;\n        break;\n      }\n    }\n    \n    if (!added) this.items.push(qElement);\n  }\n}",nextQuestionPath:"what-data-structure-is-being-simulated-using-two-stacks",correctAnswer:3,explanation:"This implements sorted priority insertion by: 1) Maintains elements in priority order, 2) Inserts new elements at correct position based on priority, 3) Uses linear search to find insertion point, 4) Ensures higher priority elements are dequeued first, 5) Implements basic priority queue behavior, 6) Could be optimized with heap structure, 7) Suitable for small to medium queues, 8) Common pattern in task scheduling systems.",id:1348,quizId:59},7)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=82940)}),_N_E=e.O()}]);