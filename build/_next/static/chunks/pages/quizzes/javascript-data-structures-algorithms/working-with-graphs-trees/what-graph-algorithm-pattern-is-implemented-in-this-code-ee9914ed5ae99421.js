(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[93086],{56818:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-data-structures-algorithms/working-with-graphs-trees/what-graph-algorithm-pattern-is-implemented-in-this-code",function(){return n(86013)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var s=n(85893),i=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:r}=e,a=(0,i.useRef)(null),o=(0,i.useRef)(!1),[c,d]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(d(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0)}}}},[c]),c)?(0,s.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function a(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},86013:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return o}});var s=n(85893),i=n(1475),r=n(25190),a=n(16833),o=!0;t.default=(0,r.Z)((0,a.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Working with Graphs & Trees"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:7,totalQuestions:21,index:7,question:"What graph algorithm pattern is implemented in this code?",options:["Shortest path finding","Cycle detection","Path existence checking with backtracking","Topological sorting"],code:"function findPath(graph, start, end) {\n  const visited = new Set();\n  const path = [];\n  \n  function dfs(vertex) {\n    if (vertex === end) return true;\n    visited.add(vertex);\n    path.push(vertex);\n    \n    for (let neighbor of graph[vertex]) {\n      if (!visited.has(neighbor)) {\n        if (dfs(neighbor)) return true;\n      }\n    }\n    \n    path.pop();\n    return false;\n  }\n  \n  dfs(start);\n  return path;\n}",nextQuestionPath:"what-type-of-tree-structure-is-specialized-for-string-operations",correctAnswer:3,explanation:"This implements path finding with backtracking because: 1) Uses DFS with path tracking, 2) Maintains current path during traversal, 3) Removes vertices when path is unsuccessful (backtracking), 4) Returns first valid path found to destination, 5) Uses recursion for implicit stack management, 6) Handles both successful and unsuccessful paths, 7) Common pattern in maze solving algorithms, 8) Efficient for finding any valid path in a graph.",id:1367,quizId:60},7)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=56818)}),_N_E=e.O()}]);