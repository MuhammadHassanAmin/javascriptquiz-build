(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[52855],{8783:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-data-structures-algorithms/working-with-graphs-trees/what-could-improve-the-efficiency-of-this-shortest-path-implementation",function(){return n(90172)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var s=n(85893),i=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:r,fullWidthResponsive:a="true",style:c={}}=e,d=(0,i.useRef)(null),l=(0,i.useRef)(!1),[u,p]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(r),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":a}):null};function r(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},90172:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var s=n(85893),i=n(1475),o=n(25190),r=n(16833),a=!0;t.default=(0,o.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Working with Graphs & Trees"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:15,totalQuestions:21,index:15,question:"What could improve the efficiency of this shortest path implementation?",options:["Using recursive approach","Using priority queue for vertex selection","Using DFS instead","Using adjacency matrix"],code:"function dijkstra(graph, start) {\n  const distances = {};\n  const previous = {};\n  const nodes = new Set();\n  \n  for (let vertex in graph) {\n    distances[vertex] = vertex === start ? 0 : Infinity;\n    nodes.add(vertex);\n  }\n  \n  while (nodes.size) {\n    const closest = Array.from(nodes).reduce((min, node) => \n      distances[node] < distances[min] ? node : min\n    );\n    \n    nodes.delete(closest);\n    \n    for (let neighbor in graph[closest]) {\n      const newDistance = distances[closest] + graph[closest][neighbor];\n      if (newDistance < distances[neighbor]) {\n        distances[neighbor] = newDistance;\n        previous[neighbor] = closest;\n      }\n    }\n  }\n  \n  return { distances, previous };\n}",nextQuestionPath:"what-is-the-primary-advantage-of-using-a-red-black-tree-over-a-regular-binary-search-tree",correctAnswer:2,explanation:"A priority queue would improve efficiency because: 1) Current implementation uses O(V\xb2) time to find minimum distance vertex, 2) Priority queue would reduce this to O(log V) per extraction, 3) Overall complexity would improve from O(V\xb2) to O((V+E)log V), 4) Particularly important for sparse graphs, 5) Would maintain vertices sorted by current distance, 6) Common optimization in Dijkstra's implementation, 7) Essential for handling large graphs efficiently, 8) Standard approach in production implementations.",id:1375,quizId:60},15)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=8783)}),_N_E=e.O()}]);