(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[85106],{95318:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-data-structures-algorithms/working-with-graphs-trees/what-tree-traversal-order-is-used-in-this-serialization-format",function(){return n(48764)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var r=n(85893),s=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:i="auto",className:o,fullWidthResponsive:a="true"}=e,l=(0,s.useRef)(null),d=(0,s.useRef)(!1),[u,c]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(c(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,r.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(o),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":i,"data-full-width-responsive":a}):null};function o(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,r.jsx)("div",{children:(0,r.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,r.jsx)("div",{children:(0,r.jsx)(e,{...this.props})}),(0,r.jsx)("div",{children:(0,r.jsx)(i,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},48764:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var r=n(85893),s=n(1475),i=n(25190),o=n(16833),a=!0;t.default=(0,i.Z)((0,o.Z)(()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Working with Graphs & Trees"}),(0,r.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,r.jsx)(s.Y3,{activeQuestionIndex:14,totalQuestions:21,index:14,question:"What tree traversal order is used in this serialization format?",options:["Inorder","Preorder","Postorder","Level-order"],code:"function serialize(root) {\n  if (!root) return 'null';\n  return `${root.value},${serialize(root.left)},${serialize(root.right)}`;\n}\n\nfunction deserialize(data) {\n  const values = data.split(',');\n  let index = 0;\n  \n  function dfs() {\n    if (values[index] === 'null') {\n      index++;\n      return null;\n    }\n    const node = { value: parseInt(values[index++]), left: null, right: null };\n    node.left = dfs();\n    node.right = dfs();\n    return node;\n  }\n  \n  return dfs();\n}",nextQuestionPath:"what-could-improve-the-efficiency-of-this-shortest-path-implementation",correctAnswer:2,explanation:"This uses preorder traversal for serialization because: 1) Processes root before children (root, left, right), 2) Enables straightforward recursive deserialization, 3) Maintains tree structure information implicitly, 4) Uses null markers to indicate missing children, 5) Preserves enough information to reconstruct tree, 6) Requires only single pass through data for deserialization, 7) Common in binary tree serialization formats, 8) Efficient for both serialization and deserialization operations.",id:1374,quizId:60},14)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=95318)}),_N_E=e.O()}]);