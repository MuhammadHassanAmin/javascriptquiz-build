(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[53332],{91185:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-data-structures-algorithms/working-with-graphs-trees/what-type-of-tree-is-being-constructed-for-data-compression",function(){return t(34695)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var r=t(85893),s=t(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:o}=e,i=(0,s.useRef)(null),c=(0,s.useRef)(!1),[a,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(a){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))i.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{i.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[a]),a)?(0,r.jsx)("ins",{ref:i,className:"adsbygoogle ".concat(o),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function i(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,r.jsx)("div",{children:(0,r.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,r.jsx)("div",{children:(0,r.jsx)(e,{...this.props})}),(0,r.jsx)("div",{children:(0,r.jsx)(o,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},34695:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var r=t(85893),s=t(1475),o=t(25190),i=t(16833),c=!0;n.default=(0,o.Z)((0,i.Z)(()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Working with Graphs & Trees"}),(0,r.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,r.jsx)(s.Y3,{activeQuestionIndex:20,totalQuestions:21,index:20,question:"What type of tree is being constructed for data compression?",options:["Binary Search Tree","Prefix Tree","Huffman Tree","Expression Tree"],code:"function buildHuffmanTree(frequencies) {\n  const pq = new PriorityQueue();\n  \n  for (let [char, freq] of Object.entries(frequencies)) {\n    pq.enqueue({ char, freq }, freq);\n  }\n  \n  while (pq.size() > 1) {\n    const left = pq.dequeue();\n    const right = pq.dequeue();\n    const parent = {\n      freq: left.freq + right.freq,\n      left,\n      right\n    };\n    pq.enqueue(parent, parent.freq);\n  }\n  \n  return pq.dequeue();\n}",nextQuestionPath:"",correctAnswer:3,explanation:"This constructs a Huffman Tree because: 1) Uses character frequencies to build optimal prefix codes, 2) Combines lowest frequency nodes first, 3) Creates variable-length encoding based on frequency, 4) Uses priority queue for efficient construction, 5) Results in minimum-weighted path lengths, 6) Common in data compression algorithms, 7) O(n log n) construction time where n is number of characters, 8) Optimal for variable-length prefix coding.",id:1380,quizId:60},20)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=91185)}),_N_E=e.O()}]);