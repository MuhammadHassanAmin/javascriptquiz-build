(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[72180],{5865:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-basics/type-conversion-and-coercion/what-does-evaluate-to-in-most-javascript-environments",function(){return s(43344)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return i}});var n=s(85893),o=s(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:a="auto",className:i,fullWidthResponsive:c="true",style:r={}}=e,d=(0,o.useRef)(null),l=(0,o.useRef)(!1),[u,p]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(i),style:{display:"block",...r},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":a,"data-full-width-responsive":c}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},43344:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return c}});var n=s(85893),o=s(1475),a=s(25190),i=s(16833),c=!0;t.default=(0,a.Z)((0,i.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Type Conversion & Coercion"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(o.Y3,{activeQuestionIndex:19,totalQuestions:20,index:19,question:"What does `{} + []` evaluate to in most JavaScript environments?",options:["0","[object Object]","[]","NaN"],code:void 0,nextQuestionPath:"",correctAnswer:1,explanation:"In most JavaScript environments, {} + [] evaluates to 0. This is a tricky case because the {} is interpreted as an empty code block (not an empty object) when it appears at the beginning of a statement. The expression is thus evaluated as +[], which converts the empty array to an empty string '', and then to the number 0. This behavior varies depending on context and environment. If you force the {} to be interpreted as an object by wrapping it in parentheses, ({} + []) would evaluate to '[object Object]', similar to [] + {}. This is one of the many quirks of JavaScript's type coercion system.",id:100,quizId:4},19)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=5865)}),_N_E=e.O()}]);