(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[63333],{85212:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-basics/operators-and-expressions/what-does-the-expression-3-8-evaluate-to-in-javascript",function(){return s(82750)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return o}});var a=s(85893),n=s(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:i="auto",className:o,fullWidthResponsive:r="true",style:c={}}=e,l=(0,n.useRef)(null),d=(0,n.useRef)(!1),[u,p]=(0,n.useState)(!1);return((0,n.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,n.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,a.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(o),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":i,"data-full-width-responsive":r}):null};function o(e){return class extends n.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,a.jsx)(i,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,a.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,a.jsx)(i,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},82750:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return r}});var a=s(85893),n=s(1475),i=s(25190),o=s(16833),r=!0;t.default=(0,i.Z)((0,o.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Operators & Expressions"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(n.Y3,{activeQuestionIndex:22,totalQuestions:25,index:22,question:"What does the expression ~~3.8 evaluate to in JavaScript?",options:["3","4","3.8","-3"],code:void 0,nextQuestionPath:"what-is-the-result-of-b-a-a-a-in-javascript",correctAnswer:1,explanation:"The expression ~~3.8 evaluates to 3. The ~ operator (bitwise NOT) first converts its operand to a 32-bit integer, then inverts all the bits, effectively calculating -(x+1) for a number x. When applied twice (~~x), it's equivalent to Math.floor(x) for positive numbers, but without the decimal part for negative numbers (actually equivalent to Math.trunc(x)). This bitwise trick is sometimes used as a faster alternative to Math.floor() or parseInt() when dealing with positive numbers.",id:48,quizId:2},22)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=85212)}),_N_E=e.O()}]);