(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[43382],{87507:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-basics/destructuring-and-spread/how-can-you-use-destructuring-with-renaming-in-objects",function(){return n(99048)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var s=n(85893),o=n(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:a="auto",className:i,fullWidthResponsive:r="true",style:c={}}=e,u=(0,o.useRef)(null),l=(0,o.useRef)(!1),[d,h]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))u.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{u.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[d]),d)?(0,s.jsx)("ins",{ref:u,className:"adsbygoogle ".concat(i),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":a,"data-full-width-responsive":r}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(e){super(e)}}}},99048:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var s=n(85893),o=n(1475),a=n(25190),i=n(16833),r=!0;t.default=(0,a.Z)((0,i.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Destructuring & Spread Operator"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:15,totalQuestions:20,index:15,question:"How can you use destructuring with renaming in objects?",options:["const { old as new } = obj;","const { old: new } = obj;","const { old -> new } = obj;","const { old | new } = obj;"],code:void 0,nextQuestionPath:"what-will-this-code-output-function-sum-numbers-return-numbers-reduce-total-n-total-n-0-console-log-sum-1-2-3",correctAnswer:2,explanation:"You can use destructuring with renaming in objects using the syntax `const { old: new } = obj;`. This syntax extracts the property named 'old' from the object and assigns its value to a new variable named 'new'. This is useful when you want to extract a property but the property name isn't a suitable variable name, when it conflicts with existing variables, or when you want a more descriptive variable name. For example, `const { userId: id } = user;` would take the userId property from the user object and create a variable named id with its value. Note that this syntax can be a bit confusing because the colon looks similar to object literal syntax, but the meaning is reversed: in object literals, `{ key: value }` assigns a value to a key, while in destructuring, `{ key: newName }` assigns the value of the key to a variable named newName. You can also combine renaming with default values: `const { old: new = defaultValue } = obj;`.",id:176,quizId:7},15)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=87507)}),_N_E=e.O()}]);