(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[73219],{93067:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-basics/destructuring-and-spread/what-happens-when-you-try-to-destructure-a-null-or-undefined-value",function(){return n(95189)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var r=n(85893),s=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:a,fullWidthResponsive:i="true",style:u={}}=e,d=(0,s.useRef)(null),l=(0,s.useRef)(!1),[c,p]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[c]),c)?(0,r.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(a),style:{display:"block",...u},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":i}):null};function a(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,r.jsx)("div",{children:(0,r.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,r.jsx)("div",{children:(0,r.jsx)(e,{...this.props})}),(0,r.jsx)("div",{children:(0,r.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(e){super(e)}}}},95189:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var r=n(85893),s=n(1475),o=n(25190),a=n(16833),i=!0;t.default=(0,o.Z)((0,a.Z)(()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Destructuring & Spread Operator"}),(0,r.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,r.jsx)(s.Y3,{activeQuestionIndex:17,totalQuestions:20,index:17,question:"What happens when you try to destructure a null or undefined value?",options:["It assigns null or undefined to all destructured variables","It assigns default values if provided, otherwise undefined","It silently fails and does nothing","It throws a TypeError"],code:void 0,nextQuestionPath:"which-of-the-following-correctly-uses-destructuring-to-extract-values-from-a-nested-array",correctAnswer:4,explanation:"When you try to destructure a null or undefined value, JavaScript throws a TypeError. This happens because destructuring attempts to access properties on the value being destructured, and accessing properties on null or undefined results in an error. For example, `const { prop } = null;` would throw \"TypeError: Cannot destructure property 'prop' of 'null' as it is null\". To guard against this error, you can provide a default empty object or array in the destructuring assignment: `const { prop } = obj || {};` or `const [item] = arr || [];`. Alternatively, you can use optional chaining in newer JavaScript versions: `const { prop } = obj?.someObj || {};`. This behavior makes sense from a safety perspectiveâ€”it's typically better to fail fast with an error than to silently create variables with undefined values, which could lead to harder-to-detect bugs later in your code.",id:178,quizId:7},17)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=93067)}),_N_E=e.O()}]);