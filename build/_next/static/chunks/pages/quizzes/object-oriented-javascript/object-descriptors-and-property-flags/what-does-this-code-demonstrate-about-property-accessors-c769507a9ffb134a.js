(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[95120],{48500:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/object-descriptors-and-property-flags/what-does-this-code-demonstrate-about-property-accessors",function(){return s(46023)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return o}});var r=s(85893),n=s(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:a="auto",className:o,fullWidthResponsive:i="true",style:c={}}=e,d=(0,n.useRef)(null),l=(0,n.useRef)(!1),[u,p]=(0,n.useState)(!1);return((0,n.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,n.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,r.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(o),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":a,"data-full-width-responsive":i}):null};function o(e){return class extends n.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,r.jsx)("div",{children:(0,r.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,r.jsx)("div",{children:(0,r.jsx)(e,{...this.props})}),(0,r.jsx)("div",{children:(0,r.jsx)(a,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(e){super(e)}}}},46023:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return i}});var r=s(85893),n=s(1475),a=s(25190),o=s(16833),i=!0;t.default=(0,a.Z)((0,o.Z)(()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Object Descriptors & Property Flags"}),(0,r.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,r.jsx)(n.Y3,{activeQuestionIndex:12,totalQuestions:40,index:12,question:"What does this code demonstrate about property accessors?",options:["Property accessors are always private","Accessors can control how values are processed when getting/setting","Getters and setters work only with Object.defineProperty","Accessors always require writable: true"],code:"const user = {};\n\nObject.defineProperty(user, 'fullName', {\n  get() {\n    return this._firstName + ' ' + this._lastName;\n  },\n  set(value) {\n    [this._firstName, this._lastName] = value.split(' ');\n  },\n  enumerable: true,\n  configurable: true\n});\n\nuser.fullName = 'John Doe';\nconsole.log(user._firstName);",nextQuestionPath:"when-using-object-defineproperty-what-is-the-difference-between-a-data-property-and-an-accessor-property",correctAnswer:2,explanation:"This code demonstrates that property accessors (getters/setters) can control how values are processed: 1) The setter parses the full name into first and last names, 2) It stores these components in separate internal properties (_firstName, _lastName), 3) The getter reconstructs the full name from these components, 4) This provides a clean interface while maintaining internal data structure, 5) Accessors enable computed properties that transform or validate data on access, 6) They can maintain internal state that's updated when the property is modified, 7) This pattern is powerful for creating properties that have derived or processed values.",id:829,quizId:38},12)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=48500)}),_N_E=e.O()}]);