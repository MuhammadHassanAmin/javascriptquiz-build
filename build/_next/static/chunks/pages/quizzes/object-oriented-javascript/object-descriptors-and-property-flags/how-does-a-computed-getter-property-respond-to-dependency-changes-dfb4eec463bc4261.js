(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9498],{25333:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/object-descriptors-and-property-flags/how-does-a-computed-getter-property-respond-to-dependency-changes",function(){return s(76258)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return a}});var n=s(85893),r=s(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",className:o}=e,a=(0,r.useRef)(null),d=(0,r.useRef)(!1),[i,c]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(c(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(i){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[i]),i)?(0,n.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(o),style:{display:"block"},"data-ad-client":t,"data-ad-slot":s}):null};function a(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},76258:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return d}});var n=s(85893),r=s(1475),o=s(41354),a=s(16833),d=!0;t.default=(0,o.Z)((0,a.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Object Descriptors & Property Flags"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(r.Y3,{activeQuestionIndex:28,totalQuestions:40,index:28,question:"How does a computed getter property respond to dependency changes?",options:["'light', 'light'","'light', 'dark'","'dark', 'light'","'dark', 'dark'"],code:"const settings = { darkMode: false };\n\nObject.defineProperty(settings, 'theme', {\n  get() {\n    return this.darkMode ? 'dark' : 'light';\n  },\n  enumerable: true\n});\n\nconsole.log(settings.theme);\nsettings.darkMode = true;\nconsole.log(settings.theme);",nextQuestionPath:"what-is-a-symbol-property-and-how-does-it-relate-to-property-descriptors",correctAnswer:2,explanation:"The console will log 'light' then 'dark' because: 1) The 'theme' property is a getter that computes its value based on the darkMode property, 2) Initially darkMode is false, so the first call returns 'light', 3) After changing darkMode to true, the getter recalculates and returns 'dark', 4) This demonstrates how accessor properties can create computed/derived values, 5) The property dynamically reflects the current state without needing explicit updates, 6) This pattern is useful for values that depend on other properties, 7) It maintains the DRY principle by computing values rather than duplicating state.",id:845,quizId:38},28)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=25333)}),_N_E=e.O()}]);