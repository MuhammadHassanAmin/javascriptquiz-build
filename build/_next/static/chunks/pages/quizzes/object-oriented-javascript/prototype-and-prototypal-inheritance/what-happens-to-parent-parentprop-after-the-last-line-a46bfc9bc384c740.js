(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[30417],{16880:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/prototype-and-prototypal-inheritance/what-happens-to-parent-parentprop-after-the-last-line",function(){return n(45458)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var r=n(85893),o=n(67294),s=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:s}=e,a=(0,o.useRef)(null),i=(0,o.useRef)(!1),[c,d]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(d(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[c]),c)?(0,r.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(s),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function a(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,r.jsx)("div",{children:(0,r.jsx)(e,{...this.props})}),(0,r.jsx)("div",{children:(0,r.jsx)(s,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},45458:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var r=n(85893),o=n(1475),s=n(41354),a=n(16833),i=!0;t.default=(0,s.Z)((0,a.Z)(()=>(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Prototype & Prototypal Inheritance"}),(0,r.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,r.jsx)(o.Y3,{activeQuestionIndex:18,totalQuestions:22,index:18,question:"What happens to parent.parentProp after the last line?",options:["It becomes 'overridden value'","It remains 'parent value'","It becomes undefined","It is deleted"],code:"const parent = { parentProp: 'parent value' };\nconst child = Object.create(parent);\nchild.childProp = 'child value';\nchild.parentProp = 'overridden value';",nextQuestionPath:"what-will-be-logged-for-eagle-legs",correctAnswer:2,explanation:"parent.parentProp remains 'parent value' because: 1) Assigning child.parentProp creates a new property on the child object, 2) This new property shadows (masks) the parent's property of the same name, 3) The parent object's property is completely unaffected by the assignment, 4) This demonstrates property shadowing in the prototype chain, 5) When accessing child.parentProp, the child's own property is found first, 6) This behavior allows objects to override inherited properties without modifying the original. This is a key aspect of prototypal inheritance - prototype properties are never changed through instance assignments.",id:711,quizId:33},18)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=16880)}),_N_E=e.O()}]);