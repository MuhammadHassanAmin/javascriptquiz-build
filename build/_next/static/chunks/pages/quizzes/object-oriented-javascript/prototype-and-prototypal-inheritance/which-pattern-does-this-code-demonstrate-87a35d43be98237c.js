(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[99867],{1971:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/prototype-and-prototypal-inheritance/which-pattern-does-this-code-demonstrate",function(){return n(82689)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var o=n(85893),s=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:r}=e,c=(0,s.useRef)(null),i=(0,s.useRef)(!1),[a,d]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(d(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(a){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[a]),a)?(0,o.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function c(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},82689:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var o=n(85893),s=n(1475),r=n(25190),c=n(16833),i=!0;t.default=(0,r.Z)((0,c.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Prototype & Prototypal Inheritance"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:6,totalQuestions:22,index:6,question:"Which pattern does this code demonstrate?",options:["Constructor pattern","Factory pattern","OLOO (Objects Linking to Other Objects)","Module pattern"],code:"const proto = {\n  greet() {\n    return `Hello, I'm ${this.name}`;\n  }\n};\n\nconst john = Object.create(proto);\njohn.name = 'John';",nextQuestionPath:"what-pattern-is-used-to-set-up-the-inheritance-in-this-code",correctAnswer:3,explanation:"This code demonstrates the OLOO (Objects Linking to Other Objects) pattern: 1) It creates objects directly without constructor functions, 2) Uses Object.create() for explicit prototype linking, 3) Behavior is defined on a prototype object, not a function's prototype property, 4) Properties are added directly to the new object, 5) Maintains clean, direct prototypal inheritance without constructor/class abstractions, 6) Considered by many to be more aligned with JavaScript's prototype-based nature. This pattern focuses on object relationships rather than simulating classical inheritance.",id:699,quizId:33},6)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=1971)}),_N_E=e.O()}]);