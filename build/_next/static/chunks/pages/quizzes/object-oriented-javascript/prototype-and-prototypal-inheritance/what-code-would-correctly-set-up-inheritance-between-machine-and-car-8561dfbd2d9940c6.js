(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54155],{97901:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/prototype-and-prototypal-inheritance/what-code-would-correctly-set-up-inheritance-between-machine-and-car",function(){return n(62946)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var o=n(85893),r=n(67294),s=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:s="auto",className:a,fullWidthResponsive:c="true",style:i={}}=e,p=(0,r.useRef)(null),d=(0,r.useRef)(!1),[u,l]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))p.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{p.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,o.jsx)("ins",{ref:p,className:"adsbygoogle ".concat(a),style:{display:"block",...i},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":s,"data-full-width-responsive":c}):null};function a(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(s,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(e){super(e)}}}},62946:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var o=n(85893),r=n(1475),s=n(25190),a=n(16833),c=!0;t.default=(0,s.Z)((0,a.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Prototype & Prototypal Inheritance"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(r.Y3,{activeQuestionIndex:20,totalQuestions:22,index:20,question:"What code would correctly set up inheritance between Machine and Car?",options:["Car.prototype = Machine.prototype;","Car.prototype = new Machine();","Car.prototype = Object.create(Machine.prototype); Car.prototype.constructor = Car;","Car.__proto__ = Machine;"],code:"function Machine() {}\nMachine.prototype.start = function() { return 'Starting...'; };\n\nfunction Car() {}\n\n// Missing inheritance setup\n\nCar.prototype.drive = function() { return 'Driving...'; };",nextQuestionPath:"what-will-be-logged-to-the-console",correctAnswer:3,explanation:"The correct inheritance setup is: Car.prototype = Object.create(Machine.prototype); Car.prototype.constructor = Car; because: 1) Object.create(Machine.prototype) creates a new object with Machine.prototype as its prototype, 2) This establishes the proper prototype chain without executing the Machine constructor, 3) Setting Car.prototype.constructor = Car fixes the constructor reference that was lost during prototype assignment, 4) This approach avoids potential issues with constructor side effects, 5) It maintains proper instanceof behavior, 6) This is the standard pre-ES6 pattern for establishing inheritance between constructor functions.",id:713,quizId:33},20)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=97901)}),_N_E=e.O()}]);