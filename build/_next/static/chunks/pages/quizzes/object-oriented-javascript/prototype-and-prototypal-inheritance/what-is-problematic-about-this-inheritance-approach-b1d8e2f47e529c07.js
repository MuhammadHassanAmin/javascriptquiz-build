(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[35356],{17314:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/prototype-and-prototypal-inheritance/what-is-problematic-about-this-inheritance-approach",function(){return n(64496)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var o=n(85893),s=n(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:a="auto",className:i,fullWidthResponsive:r="true",style:c={}}=e,p=(0,s.useRef)(null),l=(0,s.useRef)(!1),[d,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))p.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{p.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[d]),d)?(0,o.jsx)("ins",{ref:p,className:"adsbygoogle ".concat(i),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":a,"data-full-width-responsive":r}):null};function i(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(e){super(e)}}}},64496:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var o=n(85893),s=n(1475),a=n(25190),i=n(16833),r=!0;t.default=(0,a.Z)((0,i.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Prototype & Prototypal Inheritance"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:8,totalQuestions:22,index:8,question:"What is problematic about this inheritance approach?",options:["It won't work at all","Cat instances inherit properties from a specific Animal instance","It performs poorly","It can't access Animal's methods"],code:"function Animal() {}\nAnimal.prototype.speak = function() { return this.sound || 'Default sound'; };\n\nfunction Cat() {}\nCat.prototype = new Animal();\nCat.prototype.sound = 'Meow';",nextQuestionPath:"what-concept-does-this-code-demonstrate",correctAnswer:2,explanation:"Using new Animal() to set up inheritance is problematic because: 1) Cat.prototype becomes a specific Animal instance, not just linked to Animal.prototype, 2) Any properties set on the Animal instance (not its prototype) become shared among all Cat instances, 3) If Animal constructor expects parameters, they're undefined in this approach, 4) It executes the Animal constructor unnecessarily, 5) This pattern can cause unexpected behavior with instance properties, 6) Using Object.create(Animal.prototype) is preferred as it only inherits from the prototype without creating an instance. This approach is considered an anti-pattern in modern JavaScript.",id:701,quizId:33},8)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=17314)}),_N_E=e.O()}]);