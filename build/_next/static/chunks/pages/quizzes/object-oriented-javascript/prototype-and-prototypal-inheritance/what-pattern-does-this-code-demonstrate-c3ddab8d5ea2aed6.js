(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[95585],{80994:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/prototype-and-prototypal-inheritance/what-pattern-does-this-code-demonstrate",function(){return n(97388)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var o=n(85893),s=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:r="auto",className:a,fullWidthResponsive:i="true",style:c={}}=e,d=(0,s.useRef)(null),l=(0,s.useRef)(!1),[p,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(p){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[p]),p)?(0,o.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(a),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":r,"data-full-width-responsive":i}):null};function a(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsxs)("div",{children:[(0,o.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,o.jsx)(r,{adSlot:"6208304795",className:"h-[336px]"})}),(0,o.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,o.jsx)(r,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},97388:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var o=n(85893),s=n(1475),r=n(25190),a=n(16833),i=!0;t.default=(0,r.Z)((0,a.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Prototype & Prototypal Inheritance"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:13,totalQuestions:22,index:13,question:"What pattern does this code demonstrate?",options:["Constructor pattern","Factory pattern with prototype","OLOO pattern","Revealing module pattern"],code:"function createPerson(name) {\n  const person = Object.create(createPerson.prototype);\n  person.name = name;\n  return person;\n}\n\ncreatePerson.prototype.greet = function() {\n  return `Hello, I'm ${this.name}`;\n};\n\nconst john = createPerson('John');",nextQuestionPath:"what-issue-could-arise-from-changing-an-object-s-prototype-after-creation",correctAnswer:2,explanation:"This code demonstrates the Factory pattern with prototype: 1) It creates objects without using the 'new' keyword (unlike constructor pattern), 2) It explicitly links the new object to a prototype object, 3) It initializes the object with properties, 4) It returns the newly created object, 5) Methods are shared via the prototype for memory efficiency, 6) It combines the benefits of factory functions (no 'new' required) with prototype-based method sharing. This pattern provides flexibility while maintaining the performance benefits of prototype-based method sharing.",id:706,quizId:33},13)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=80994)}),_N_E=e.O()}]);