(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[37258],{27824:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/prototype-and-prototypal-inheritance/how-does-this-es6-class-syntax-relate-to-prototypal-inheritance",function(){return n(57596)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var s=n(85893),o=n(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:a="auto",className:r,fullWidthResponsive:c="true"}=e,i=(0,o.useRef)(null),l=(0,o.useRef)(!1),[d,p]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))i.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{i.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[d]),d)?(0,s.jsx)("ins",{ref:i,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":a,"data-full-width-responsive":c}):null};function r(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},57596:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var s=n(85893),o=n(1475),a=n(25190),r=n(16833),c=!0;t.default=(0,a.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Prototype & Prototypal Inheritance"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:12,totalQuestions:22,index:12,question:"How does this ES6 class syntax relate to prototypal inheritance?",options:["It replaces prototypal inheritance with classical inheritance","It's syntactic sugar over prototypal inheritance","It has no relation to prototypal inheritance","It uses a completely different inheritance model"],code:"class Animal {\n  constructor(name) {\n    this.name = name;\n  }\n  \n  speak() {\n    return `${this.name} makes a noise`;\n  }\n}\n\nclass Dog extends Animal {\n  constructor(name) {\n    super(name);\n  }\n  \n  speak() {\n    return `${this.name} barks`;\n  }\n}",nextQuestionPath:"what-pattern-does-this-code-demonstrate",correctAnswer:2,explanation:"ES6 classes are syntactic sugar over JavaScript's prototypal inheritance: 1) Under the hood, class syntax still creates constructor functions and prototype chains, 2) Animal.prototype remains the prototype for Dog instances, 3) The extends keyword sets up the prototype chain using Object.create(), 4) super() calls the parent constructor (equivalent to Animal.call(this, name)), 5) Method definitions in the class body are added to the prototype object, 6) instanceof and property lookup still work through the prototype chain. Classes provide a cleaner syntax but don't change JavaScript's core inheritance mechanism.",id:705,quizId:33},12)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=27824)}),_N_E=e.O()}]);