(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[81655],{60720:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/es6-classes-and-constructors/how-would-you-access-the-fullname-property-of-a-person-instance",function(){return s(2398)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return r}});var n=s(85893),a=s(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:o="auto",className:r,fullWidthResponsive:i="true",style:l={}}=e,c=(0,a.useRef)(null),u=(0,a.useRef)(!1),[d,p]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[d]),d)?(0,n.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(r),style:{display:"block",...l},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":o,"data-full-width-responsive":i}):null};function r(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(e){super(e)}}}},2398:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return i}});var n=s(85893),a=s(1475),o=s(25190),r=s(16833),i=!0;t.default=(0,o.Z)((0,r.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"ES6 Classes & Constructors"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(a.Y3,{activeQuestionIndex:5,totalQuestions:28,index:5,question:"How would you access the fullName property of a Person instance?",options:["person.fullName()","person.getFullName()","person.fullName","person.get('fullName')"],code:"class Person {\n  constructor(firstName, lastName) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n  \n  get fullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  \n  set fullName(name) {\n    const parts = name.split(' ');\n    this.firstName = parts[0];\n    this.lastName = parts[1];\n  }\n}",nextQuestionPath:"what-es6-feature-is-demonstrated-in-this-code",correctAnswer:3,explanation:"With getters and setters in ES6 classes: 1) You access a getter method as if it were a property (person.fullName), not as a function call, 2) The getter is automatically called when you access the property, 3) Similarly, you assign to the property to invoke the setter (person.fullName = 'John Doe'), 4) This creates a more intuitive interface by hiding method calls, 5) Getters and setters can implement validation, computation, or side effects when properties are accessed, 6) This provides a clean way to maintain the public interface while allowing the internal implementation to change.",id:720,quizId:34},5)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=60720)}),_N_E=e.O()}]);