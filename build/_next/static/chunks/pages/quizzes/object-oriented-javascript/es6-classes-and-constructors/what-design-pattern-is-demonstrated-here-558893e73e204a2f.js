(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[24121],{66387:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/es6-classes-and-constructors/what-design-pattern-is-demonstrated-here",function(){return s(88847)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return r}});var n=s(85893),a=s(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:o="auto",className:r,fullWidthResponsive:c="true",style:i={}}=e,l=(0,a.useRef)(null),d=(0,a.useRef)(!1),[u,h]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(r),style:{display:"block",...i},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":o,"data-full-width-responsive":c}):null};function r(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(e){super(e)}}}},88847:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return c}});var n=s(85893),a=s(1475),o=s(25190),r=s(16833),c=!0;t.default=(0,o.Z)((0,r.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"ES6 Classes & Constructors"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(a.Y3,{activeQuestionIndex:19,totalQuestions:28,index:19,question:"What design pattern is demonstrated here?",options:["Decorator pattern","Proxy pattern","Adapter pattern","Bridge pattern"],code:"class Database {\n  async query(sql) {\n    console.log(`Executing: ${sql}`);\n    // Database logic here\n    return [];\n  }\n}\n\nclass DatabaseProxy {\n  constructor(database) {\n    this.database = database;\n    this.cache = new Map();\n  }\n  \n  async query(sql) {\n    if (this.cache.has(sql)) {\n      console.log('Cache hit');\n      return this.cache.get(sql);\n    }\n    const result = await this.database.query(sql);\n    this.cache.set(sql, result);\n    return result;\n  }\n}",nextQuestionPath:"what-oop-principle-is-demonstrated-here",correctAnswer:2,explanation:"This demonstrates the Proxy pattern: 1) It provides a surrogate or placeholder for another object, 2) It controls access to the original object, 3) It adds functionality (caching) without modifying the original, 4) It has the same interface as the original, 5) It's useful for adding cross-cutting concerns like caching, logging, or access control, 6) The proxy intercepts calls to the original object to add its own behavior.",id:734,quizId:34},19)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=66387)}),_N_E=e.O()}]);