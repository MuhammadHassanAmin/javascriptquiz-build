(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[74445],{49132:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/object-oriented-javascript/factory-functions-and-singleton-pattern/what-testing-difficulty-might-this-singleton-pattern-create",function(){return n(49057)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var s=n(85893),o=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:r}=e,a=(0,o.useRef)(null),i=(0,o.useRef)(!1),[c,l]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[c]),c)?(0,s.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function a(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},49057:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var s=n(85893),o=n(1475),r=n(41354),a=n(16833),i=!0;t.default=(0,r.Z)((0,a.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Factory Functions & Singleton Pattern"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:29,totalQuestions:32,index:29,question:"What testing difficulty might this singleton pattern create?",options:["Memory leaks","Performance issues","Shared state between tests","Compilation errors"],code:"const LoggerSingleton = (() => {\n  let instance;\n  \n  function createLogger() {\n    const logs = [];\n    \n    function log(message) {\n      const timestamp = new Date().toISOString();\n      logs.push({ message, timestamp });\n      console.log(`${timestamp}: ${message}`);\n    }\n    \n    function getLogs() {\n      return [...logs];\n    }\n    \n    return { log, getLogs };\n  }\n  \n  return {\n    getInstance() {\n      if (!instance) {\n        instance = createLogger();\n      }\n      return instance;\n    }\n  };\n})();",nextQuestionPath:"what-architecture-pattern-could-this-factory-help-implement",correctAnswer:3,explanation:"This singleton pattern creates testing difficulties due to shared state between tests: 1) Tests that use the logger will affect each other as the logs array persists, 2) Test ordering becomes important as later tests see state changes from earlier tests, 3) It's difficult to isolate tests that depend on the logger, 4) Clearing logs between tests requires explicit cleanup code, 5) Mocking becomes more complex due to the global shared instance, 6) A better approach for testing would include a reset method or dependency injection.",id:814,quizId:37},29)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=49132)}),_N_E=e.O()}]);