(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[39307],{66418:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-debugging-testing/writing-integration-tests/what-testing-pattern-is-demonstrated-in-this-integration-test",function(){return n(60045)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var s=n(85893),a=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:i}=e,o=(0,a.useRef)(null),r=(0,a.useRef)(!1),[c,d]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(d(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))o.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{o.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0)}}}},[c]),c)?(0,s.jsx)("ins",{ref:o,className:"adsbygoogle ".concat(i),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function o(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},60045:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var s=n(85893),a=n(1475),i=n(25190),o=n(16833),r=!0;t.default=(0,i.Z)((0,o.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Writing Integration Tests"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(a.Y3,{activeQuestionIndex:1,totalQuestions:20,index:1,question:"What testing pattern is demonstrated in this integration test?",options:["Unit testing with mocks","End-to-end testing of the full stack","Component isolation testing","Integration testing with external dependencies"],code:"describe('User Registration', () => {\n  beforeAll(async () => {\n    await database.connect();\n    await clearTestData();\n  });\n\n  afterAll(async () => {\n    await database.disconnect();\n  });\n\n  test('should create user and send welcome email', async () => {\n    const user = await registerUser({\n      email: 'test@example.com',\n      password: 'password123'\n    });\n    \n    const dbUser = await database.users.findOne({ email: user.email });\n    expect(dbUser).toBeDefined();\n    expect(emailService.sentEmails).toContainEqual(\n      expect.objectContaining({ to: user.email })\n    );\n  });\n});",nextQuestionPath:"what-aspect-of-api-testing-does-this-code-demonstrate",correctAnswer:4,explanation:"This demonstrates integration testing with external dependencies: 1) Sets up and tears down a test database connection, 2) Tests multiple system components together (user registration, database, email service), 3) Verifies the complete workflow of user registration, 4) Checks both data persistence and side effects (email sending), 5) Uses beforeAll/afterAll for proper test environment setup and cleanup, 6) Tests actual interactions between components rather than mocks, 7) Ensures different parts of the system work together correctly, 8) Represents a real-world usage scenario.",id:1182,quizId:51},1)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=66418)}),_N_E=e.O()}]);