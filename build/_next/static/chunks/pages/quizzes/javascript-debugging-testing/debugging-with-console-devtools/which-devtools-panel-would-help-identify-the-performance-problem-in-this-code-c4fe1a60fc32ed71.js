(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[56603],{45939:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-debugging-testing/debugging-with-console-devtools/which-devtools-panel-would-help-identify-the-performance-problem-in-this-code",function(){return n(11584)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var o=n(85893),s=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:i="auto",className:a,fullWidthResponsive:r="true",style:l={}}=e,d=(0,s.useRef)(null),c=(0,s.useRef)(!1),[u,p]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[u]),u)?(0,o.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(a),style:{display:"block",...l},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":i,"data-full-width-responsive":r}):null};function a(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(e){super(e)}}}},11584:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var o=n(85893),s=n(1475),i=n(25190),a=n(16833),r=!0;t.default=(0,i.Z)((0,a.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Debugging with Console & DevTools"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:26,totalQuestions:40,index:26,question:"Which DevTools panel would help identify the performance problem in this code?",options:["Elements panel","Console panel","Performance panel","Application panel"],code:"for (let i = 0; i < 1000; i++) {\n  document.getElementById('result').innerHTML += `<div>Item ${i}</div>`;\n}",nextQuestionPath:"what-does-console-count-do-in-javascript",correctAnswer:3,explanation:"The Performance panel would reveal critical issues in this code: 1) It would show repeated layout thrashing caused by alternating reads and writes to the DOM, 2) Each innerHTML += operation forces a complete reparse and rerender of the element's contents, 3) The flame chart would display numerous layout recalculations and rendering operations, 4) The timeline would show excessive CPU usage during this loop, 5) Performance recordings would quantify exactly how much time is spent in layout and rendering, 6) It would highlight the forced synchronous layouts triggered by each iteration, 7) The panel would provide metrics showing the impact on frame rate and responsiveness, 8) This information would guide optimization by revealing the need to batch DOM updates or use more efficient approaches like DocumentFragment.",id:1107,quizId:47},26)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=45939)}),_N_E=e.O()}]);