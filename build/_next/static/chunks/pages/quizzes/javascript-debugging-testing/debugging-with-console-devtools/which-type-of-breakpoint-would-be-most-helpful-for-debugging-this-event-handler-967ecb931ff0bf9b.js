(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[99751],{49219:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-debugging-testing/debugging-with-console-devtools/which-type-of-breakpoint-would-be-most-helpful-for-debugging-this-event-handler",function(){return n(165)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var s=n(85893),i=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:r,fullWidthResponsive:a="true",style:d={}}=e,l=(0,i.useRef)(null),c=(0,i.useRef)(!1),[u,p]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(r),style:{display:"block",...d},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":a}):null};function r(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(e){super(e)}}}},165:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var s=n(85893),i=n(1475),o=n(25190),r=n(16833),a=!0;t.default=(0,o.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Debugging with Console & DevTools"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:32,totalQuestions:40,index:32,question:"Which type of breakpoint would be most helpful for debugging this event handler?",options:["Line breakpoint","XHR breakpoint","Event listener breakpoint","DOM breakpoint"],code:"document.getElementById('login-form').addEventListener('submit', function(event) {\n  event.preventDefault();\n  const username = document.getElementById('username').value;\n  const password = document.getElementById('password').value;\n  // Login logic here\n});",nextQuestionPath:"what-does-the-chrome-devtools-blackbox-script-feature-do",correctAnswer:3,explanation:"Event listener breakpoints provide specialized event debugging: 1) They pause execution when specific types of events are triggered, 2) In DevTools, you can select specific event categories like 'Mouse', 'Keyboard', or even specific events like 'submit', 3) This would pause execution right at the beginning of the submit event handler, 4) No need to find the specific line in the code where the handler is defined, 5) This works even for events added dynamically or in external libraries, 6) It captures all handlers for the selected event type, helping discover hidden listeners, 7) This is much more reliable than searching for addEventListener calls in the code, 8) Event listener breakpoints are particularly valuable when debugging complex event-driven applications with many event handlers.",id:1113,quizId:47},32)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=49219)}),_N_E=e.O()}]);