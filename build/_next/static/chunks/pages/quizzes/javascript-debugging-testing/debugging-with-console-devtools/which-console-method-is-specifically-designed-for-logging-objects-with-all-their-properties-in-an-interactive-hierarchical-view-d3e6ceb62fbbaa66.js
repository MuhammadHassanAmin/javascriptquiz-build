(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[30234],{70104:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-debugging-testing/debugging-with-console-devtools/which-console-method-is-specifically-designed-for-logging-objects-with-all-their-properties-in-an-interactive-hierarchical-view",function(){return s(95273)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return a}});var o=s(85893),i=s(67294),n=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:n="auto",className:a,fullWidthResponsive:c="true",style:l={}}=e,r=(0,i.useRef)(null),d=(0,i.useRef)(!1),[u,p]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,o.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(a),style:{display:"block",...l},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":n,"data-full-width-responsive":c}):null};function a(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(n,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsxs)("div",{children:[(0,o.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,o.jsx)(n,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,o.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,o.jsx)(n,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},95273:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return c}});var o=s(85893),i=s(1475),n=s(25190),a=s(16833),c=!0;t.default=(0,n.Z)((0,a.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Debugging with Console & DevTools"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(i.Y3,{activeQuestionIndex:21,totalQuestions:40,index:21,question:"Which console method is specifically designed for logging objects with all their properties in an interactive hierarchical view?",options:["console.log()","console.dir()","console.table()","console.object()"],code:void 0,nextQuestionPath:"how-could-you-track-when-and-where-the-counter-variable-changes-using-devtools",correctAnswer:2,explanation:"console.dir() is specialized for object inspection: 1) It displays JavaScript objects as an interactive hierarchical listing, 2) Unlike console.log(), which may show DOM elements as HTML, console.dir() always shows the JavaScript object representation, 3) It exposes all properties of an object, including non-enumerable ones in some browsers, 4) The interactive tree view allows expanding and collapsing nested objects, 5) This makes it much easier to explore complex object structures, 6) It's particularly useful for examining DOM elements as JavaScript objects rather than HTML, 7) The output can be expanded to arbitrary depth to examine deeply nested properties, 8) This specialized object visualization makes it much easier to debug complex objects compared to the default console.log() presentation.",id:1102,quizId:47},21)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=70104)}),_N_E=e.O()}]);