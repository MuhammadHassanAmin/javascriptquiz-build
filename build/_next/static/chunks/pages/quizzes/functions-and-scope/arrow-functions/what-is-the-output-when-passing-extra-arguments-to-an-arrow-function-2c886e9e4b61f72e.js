(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3825],{37166:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/arrow-functions/what-is-the-output-when-passing-extra-arguments-to-an-arrow-function",function(){return n(24282)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var s=n(85893),a=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:r,fullWidthResponsive:i="true",style:u={}}=e,d=(0,a.useRef)(null),c=(0,a.useRef)(!1),[l,h]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[l]),l)?(0,s.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(r),style:{display:"block",...u},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":i}):null};function r(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},24282:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var s=n(85893),a=n(1475),o=n(25190),r=n(16833),i=!0;t.default=(0,o.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Arrow Functions"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(a.Y3,{activeQuestionIndex:19,totalQuestions:20,index:19,question:"What is the output when passing extra arguments to an arrow function?",options:["14","5","TypeError: too many arguments","undefined"],code:"const add = (a, b) => a + b;\nconsole.log(add(2, 3, 4, 5));",nextQuestionPath:"",correctAnswer:2,explanation:"The output is `5`. This demonstrates how JavaScript handles extra arguments passed to a function. When more arguments are provided than parameters defined, the extra arguments are simply ignored. The arrow function `add` is defined with two parameters, `a` and `b`, which receive the values `2` and `3` respectively. The additional arguments `4` and `5` are passed to the function but not assigned to any named parameters, so they have no effect on the function's execution. The function calculates `2 + 3` and returns `5`. This behavior is the same for arrow functions, function expressions, and function declarations. If you need to work with a variable number of arguments, you can use rest parameters (`...numbers`) to collect all arguments into an array. For example, `const sum = (...numbers) => numbers.reduce((total, n) => total + n, 0);` would sum all provided arguments. Understanding how JavaScript handles function arguments is important for writing robust code, especially when working with functions that might be called with varying numbers of arguments.",id:220,quizId:9},19)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=37166)}),_N_E=e.O()}]);