(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[98697],{73904:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/arrow-functions/what-will-this-code-log-to-the-console",function(){return n(83251)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var o=n(85893),s=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:r}=e,c=(0,s.useRef)(null),i=(0,s.useRef)(!1),[a,l]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(a){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!i.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),i.current=!0)}}}},[a]),a)?(0,o.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function c(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(r,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},83251:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var o=n(85893),s=n(1475),r=n(25190),c=n(16833),i=!0;t.default=(0,r.Z)((0,c.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Arrow Functions"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:10,totalQuestions:20,index:10,question:"What will this code log to the console?",options:["NaN, NaN, NaN... (repeatedly)","1, 2, 3... (incrementing each second)","TypeError: Cannot read property 'count' of undefined","0, 0, 0... (repeatedly)"],code:"const counter = {\n  count: 0,\n  increment: function() {\n    setInterval(() => {\n      console.log(++this.count);\n    }, 1000);\n  }\n};\n\ncounter.increment();",nextQuestionPath:"which-of-the-following-statements-about-arrow-functions-is-false",correctAnswer:2,explanation:"This code will log `1, 2, 3...` incrementing each second. It demonstrates a practical use case for arrow functionsâ€”maintaining the correct `this` context in callbacks. In the `increment` method (a regular function), `this` refers to the `counter` object. The arrow function inside `setInterval` inherits this same `this` value because arrow functions don't have their own `this` binding. Each second, the callback executes, incrementing and logging the counter's `count` property. If a regular function were used instead (`setInterval(function() { console.log(++this.count); }, 1000)`), `this` inside that function would refer to the global object (or be `undefined` in strict mode), not the counter object. This would cause `this.count` to be `NaN` or throw an error. Before arrow functions, developers had to use workarounds like `var self = this` or `.bind(this)` to solve this problem. This example shows why arrow functions are particularly valuable for callbacks, event handlers, and other scenarios where preserving the lexical `this` is important.",id:211,quizId:9},10)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=73904)}),_N_E=e.O()}]);