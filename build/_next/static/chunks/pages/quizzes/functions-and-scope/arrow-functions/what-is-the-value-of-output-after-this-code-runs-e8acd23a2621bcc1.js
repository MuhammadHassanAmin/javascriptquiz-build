(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[83526],{30333:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/arrow-functions/what-is-the-value-of-output-after-this-code-runs",function(){return n(25660)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var s=n(85893),o=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:i}=e,a=(0,o.useRef)(null),r=(0,o.useRef)(!1),[c,u]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0)}}}},[c]),c)?(0,s.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(i),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function a(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},25660:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var s=n(85893),o=n(1475),i=n(25190),a=n(16833),r=!0;t.default=(0,i.Z)((0,a.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Arrow Functions"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:7,totalQuestions:20,index:7,question:"What is the value of `output` after this code runs?",options:["15","undefined","null","TypeError"],code:"const calculate = (a, b) => a + b;\nconst output = calculate?.(5, 10);",nextQuestionPath:"which-of-the-following-is-true-about-the-arguments-object-in-arrow-functions",correctAnswer:1,explanation:"The value of `output` will be `15`. This code demonstrates two concepts: arrow functions and optional chaining (`?.`). The arrow function `calculate` takes two parameters and returns their sum. The optional chaining operator (`?.`) is used to call a function that might be null or undefinedâ€”if the value before the operator is null or undefined, the expression short-circuits and returns undefined without throwing an error. In this case, `calculate` is a valid function, so it's called with arguments 5 and 10, resulting in 15. Optional chaining was introduced in ES2020 and is useful for safely accessing and calling properties or methods that might not exist. This example is somewhat contrived since we can see that `calculate` is defined, but in real-world scenarios, this pattern is valuable when dealing with potentially undefined functions, especially when working with external data or APIs where the structure might be uncertain.",id:208,quizId:9},7)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=30333)}),_N_E=e.O()}]);