(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[45209],{27696:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/function-currying/what-is-the-result-of-executing-this-code",function(){return n(65862)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var s=n(85893),r=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:i="auto",className:o,fullWidthResponsive:c="true",style:a={}}=e,d=(0,r.useRef)(null),l=(0,r.useRef)(!1),[u,h]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(o),style:{display:"block",...a},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":i,"data-full-width-responsive":c}):null};function o(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,s.jsx)(i,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,s.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,s.jsx)(i,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},65862:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var s=n(85893),r=n(1475),i=n(25190),o=n(16833),c=!0;t.default=(0,i.Z)((0,o.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Function Currying"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(r.Y3,{activeQuestionIndex:14,totalQuestions:20,index:14,question:"What is the result of executing this code?",options:["6","3","undefined","Error"],code:"const curry = (fn) => {\n  return function curried(...args) {\n    if (args.length >= fn.length) {\n      return fn(...args);\n    }\n    return function(...moreArgs) {\n      return curried(...args, ...moreArgs);\n    };\n  };\n};\n\nconst add = (a, b, c) => a + b + c;\nconst curriedAdd = curry(add);\n\nconst result = curriedAdd(1, 2)(3);\nconsole.log(result);",nextQuestionPath:"what-concept-is-being-demonstrated-in-this-code",correctAnswer:1,explanation:"The result is 6. This code demonstrates a flexible curry implementation that allows multiple arguments to be provided in each call, not just one at a time. The `curry` function transforms the `add` function so it can be called with arguments in various groupings. In this case, we first call `curriedAdd(1, 2)` which returns a function waiting for the third argument, then we call that function with `(3)`. The curry implementation uses the function's `length` property to determine how many arguments it expects, and it keeps collecting arguments until it has enough to call the original function. This flexible currying style is often more practical in real-world JavaScript than the strict one-argument-at-a-time approach.",id:321,quizId:14},14)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=27696)}),_N_E=e.O()}]);