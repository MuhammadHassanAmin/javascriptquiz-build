(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[77641],{18714:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/function-currying/what-is-auto-currying-in-the-context-of-functional-programming-libraries",function(){return n(7182)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var i=n(85893),a=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:s,fullWidthResponsive:r="true",style:c={}}=e,l=(0,a.useRef)(null),u=(0,a.useRef)(!1),[d,p]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[d]),d)?(0,i.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(s),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":r}):null};function s(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,i.jsx)("div",{children:(0,i.jsx)(e,{...this.props})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,i.jsx)(o,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,i.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,i.jsx)(o,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},7182:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var i=n(85893),a=n(1475),o=n(25190),s=n(16833),r=!0;t.default=(0,o.Z)((0,s.Z)(()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Function Currying"}),(0,i.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,i.jsx)(a.Y3,{activeQuestionIndex:19,totalQuestions:20,index:19,question:"What is auto-currying in the context of functional programming libraries?",options:["A feature that automatically detects when currying should be applied","A technique where functions are automatically curried without explicitly calling a curry utility","A method that combines currying and memoization automatically","A way to automatically uncurry curried functions when needed"],code:void 0,nextQuestionPath:"",correctAnswer:2,explanation:"Auto-currying is a technique where functions are automatically curried without explicitly calling a curry utility. In libraries like Ramda or Lodash/fp, most functions are auto-curried by default. This means they're designed to work both with all arguments at once or with partial application. For example, a function like `add(a, b)` would automatically become `add(a)(b)` when only one argument is provided. This design makes the entire API more consistent and composable, as any function can be easily used in function composition or partial application scenarios without additional transformation. It simplifies functional programming patterns and encourages their use throughout an application.",id:326,quizId:14},19)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=18714)}),_N_E=e.O()}]);