(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[89473],{39017:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/function-currying/what-would-this-code-output",function(){return t(49535)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return s}});var o=t(85893),r=t(67294),i=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:i}=e,s=(0,r.useRef)(null),c=(0,r.useRef)(!1),[l,u]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))s.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{s.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[l]),l)?(0,o.jsx)("ins",{ref:s,className:"adsbygoogle ".concat(i),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function s(e){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},49535:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var o=t(85893),r=t(1475),i=t(41354),s=t(16833),c=!0;n.default=(0,i.Z)((0,s.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Function Currying"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(r.Y3,{activeQuestionIndex:16,totalQuestions:20,index:16,question:"What would this code output?",options:["24, 12","14, 7","9, 6","Error: double is not a function"],code:"const curry = (fn) => {\n  return function curried(...args) {\n    if (args.length >= fn.length) {\n      return fn.apply(this, args);\n    }\n    return function(...moreArgs) {\n      return curried.apply(this, args.concat(moreArgs));\n    };\n  };\n};\n\nfunction multiply(a, b, c) {\n  return a * b * c;\n}\n\nconst curriedMultiply = curry(multiply);\nconst double = curriedMultiply(2);\nconst triple = curriedMultiply(3);\n\nconsole.log(double(3)(4));\nconsole.log(triple(2)(2));",nextQuestionPath:"what-will-be-the-output-of-this-code-using-placeholder-currying",correctAnswer:1,explanation:"The code will output 24, 12. This demonstrates how currying can create specialized multiplier functions. First, we curry the `multiply` function to get `curriedMultiply`. Then we create two specialized functions: `double` (which has a=2) and `triple` (which has a=3). When we call `double(3)(4)`, we're effectively calling `multiply(2, 3, 4)` which gives 2 * 3 * 4 = 24. Similarly, `triple(2)(2)` is equivalent to `multiply(3, 2, 2)` giving 3 * 2 * 2 = 12. This example shows how currying enables the creation of a family of related functions from a single more general function, a powerful pattern for code reuse and specialization.",id:323,quizId:14},16)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=39017)}),_N_E=e.O()}]);