(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[91],{51003:function(t,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/function-currying/what-s-the-difference-between-the-bind-method-and-currying-in-javascript",function(){return n(97814)}])},16833:function(t,e,n){"use strict";n.d(e,{Z:function(){return s}});var i=n(85893),r=n(67294),o=t=>{let{adClient:e="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:s,fullWidthResponsive:a="true",style:c={}}=t,u=(0,r.useRef)(null),l=(0,r.useRef)(!1),[d,h]=(0,r.useState)(!1);return((0,r.useEffect)(()=>(h(!0),()=>{let t=document.getElementById("__next");t&&t.removeAttribute("style")}),[]),(0,r.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))u.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let t=document.createElement("script");t.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",t.async=!0,t.crossOrigin="anonymous",document.body.appendChild(t),t.onload=()=>{u.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[d]),d)?(0,i.jsx)("ins",{ref:u,className:"adsbygoogle ".concat(s),style:{display:"block",...c},"data-ad-client":e,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":a}):null};function s(t){return class extends r.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,i.jsx)("div",{children:(0,i.jsx)(t,{...this.props})}),(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(t){super(t)}}}},97814:function(t,e,n){"use strict";n.r(e),n.d(e,{__N_SSG:function(){return a}});var i=n(85893),r=n(1475),o=n(25190),s=n(16833),a=!0;e.default=(0,o.Z)((0,s.Z)(()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Function Currying"}),(0,i.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,i.jsx)(r.Y3,{activeQuestionIndex:18,totalQuestions:20,index:18,question:"What's the difference between the 'bind' method and currying in JavaScript?",options:["There is no difference; bind is just JavaScript's built-in implementation of currying","bind permanently sets the 'this' context while currying doesn't affect context at all","bind allows partial application with fixed 'this' context but doesn't transform the function's structure, while currying transforms a function's structure regardless of context","bind can only be used with object methods, while currying works with any function"],code:void 0,nextQuestionPath:"what-is-auto-currying-in-the-context-of-functional-programming-libraries",correctAnswer:3,explanation:"The main difference is that bind allows partial application with a fixed 'this' context but doesn't transform the function's structure, while currying transforms a function's structure regardless of context. Function.prototype.bind() creates a new function with its 'this' keyword set to a specific value and can optionally pre-fill arguments, but it always returns a function with the same arity as the original minus the bound arguments. Currying, on the other hand, completely restructures a function to take one argument at a time, returning nested functions regardless of the original arity. While both enable partial application, they serve different primary purposes: bind for controlling execution context, currying for functional composition and flexible argument application.",id:325,quizId:14},18)})]})))}},function(t){t.O(0,[41966,25675,82893,92888,49774,40179],function(){return t(t.s=51003)}),_N_E=t.O()}]);