(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[48132],{94193:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/hoisting-and-execution-context/how-does-the-temporal-dead-zone-affect-accessing-let-variables",function(){return n(10487)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return s}});var a=n(85893),i=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:s,fullWidthResponsive:r="true",style:c={}}=e,d=(0,i.useRef)(null),l=(0,i.useRef)(!1),[u,h]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[u]),u)?(0,a.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(s),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":r}):null};function s(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},10487:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return r}});var a=n(85893),i=n(1475),o=n(25190),s=n(16833),r=!0;t.default=(0,o.Z)((0,s.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Hoisting and Execution Context"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(i.Y3,{activeQuestionIndex:2,totalQuestions:20,index:2,question:"How does the temporal dead zone affect accessing let variables?",options:["10","undefined","null","ReferenceError: Cannot access 'x' before initialization"],code:"console.log(x);\nlet x = 10;",nextQuestionPath:"how-does-function-hoisting-differ-from-variable-hoisting-in-javascript",correctAnswer:4,explanation:"This code will throw a `ReferenceError: Cannot access 'x' before initialization`. Unlike variables declared with `var`, variables declared with `let` and `const` are hoisted but they are not initialized with a default value. Instead, they remain in a 'temporal dead zone' (TDZ) from the start of the block until the declaration is processed. During this TDZ, any attempt to access the variable will result in a ReferenceError. This behavior was introduced in ES6 (ES2015) with `let` and `const` to help catch potential bugs caused by accessing variables before they're declared. It enforces better coding practices by making the error explicit rather than returning the often-confusing `undefined` value that occurs with `var` declarations. This stricter behavior helps developers create more predictable code and avoid subtle bugs related to variable initialization.",id:244,quizId:11},2)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=94193)}),_N_E=e.O()}]);