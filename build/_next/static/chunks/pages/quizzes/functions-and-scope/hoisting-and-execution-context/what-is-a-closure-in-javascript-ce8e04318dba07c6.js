(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[46912],{89120:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/hoisting-and-execution-context/what-is-a-closure-in-javascript",function(){return t(74465)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return s}});var o=t(85893),i=t(67294),a=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:a="auto",className:s,fullWidthResponsive:c="true"}=e,r=(0,i.useRef)(null),u=(0,i.useRef)(!1),[l,d]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(d(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[l]),l)?(0,o.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(s),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":a,"data-full-width-responsive":c}):null};function s(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(a,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},74465:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var o=t(85893),i=t(1475),a=t(25190),s=t(16833),c=!0;n.default=(0,a.Z)((0,s.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Hoisting and Execution Context"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(i.Y3,{activeQuestionIndex:13,totalQuestions:20,index:13,question:"What is a closure in JavaScript?",options:["A way to close or terminate a function execution","A function that has completed execution and been removed from the call stack","A function bundled with references to its surrounding lexical environment","A technique for hiding global variables from other scripts"],code:void 0,nextQuestionPath:"what-is-the-difference-between-the-global-execution-context-and-a-function-execution-context",correctAnswer:3,explanation:"A closure in JavaScript is a function bundled with references to its surrounding lexical environment (the variables available at the location where the function was declared). In simpler terms, a closure gives you access to an outer function's scope from an inner function, even after the outer function has finished executing.\n\nClosures are created every time a function is created in JavaScript. The inner function maintains references to the variables from its outer function's scope, allowing it to access those variables even after the outer function has returned.\n\nFor example:\n```javascript\nfunction createCounter() {\n  let count = 0; // This variable is enclosed in the returned function's closure\n  return function() {\n    count++; // This function can access and modify the count variable\n    return count;\n  };\n}\n\nconst counter = createCounter();\nconsole.log(counter()); // 1\nconsole.log(counter()); // 2\n```\n\nIn this example, the inner function maintains access to the `count` variable even after `createCounter` has finished executing. The `count` variable is private to the returned function - it can't be accessed directly from outside, only through the function calls. This enables powerful patterns like data encapsulation, private variables, function factories, and maintaining state between function calls. Closures are one of the most powerful features in JavaScript.",id:255,quizId:11},13)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=89120)}),_N_E=e.O()}]);