(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[88041],{1054:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/hoisting-and-execution-context/how-does-variable-shadowing-affect-hoisting-in-nested-scopes",function(){return t(42049)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}});var o=t(85893),s=t(67294),i=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:i="auto",className:a,fullWidthResponsive:c="true",style:r={}}=e,l=(0,s.useRef)(null),d=(0,s.useRef)(!1),[u,h]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(h(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,o.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(a),style:{display:"block",...r},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":i,"data-full-width-responsive":c}):null};function a(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(i,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},42049:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var o=t(85893),s=t(1475),i=t(25190),a=t(16833),c=!0;n.default=(0,i.Z)((0,a.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Hoisting and Execution Context"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:10,totalQuestions:20,index:10,question:"How does variable shadowing affect hoisting in nested scopes?",options:["1","2","undefined","ReferenceError"],code:"var x = 1;\nfunction foo() {\n  console.log(x);\n  var x = 2;\n}\nfoo();",nextQuestionPath:"what-is-the-scope-chain-in-javascript",correctAnswer:3,explanation:"The output will be `undefined`. This example demonstrates variable shadowing and hoisting within function scopes. When the function `foo()` is called, it creates its own execution context. During the creation phase of this context, the variable declaration `var x;` is hoisted to the top of the function, creating a new variable `x` local to the function that shadows the global `x`. However, only the declaration is hoisted, not the initialization `x = 2`. So when `console.log(x)` executes, it refers to the local `x` which exists but is `undefined` at that point. The code effectively runs as:\n```javascript\nvar x = 1; // global x\nfunction foo() {\n  var x; // local x is hoisted, initialized as undefined\n  console.log(x); // logs undefined (local x, not global x)\n  x = 2; // local x is assigned 2\n}\nfoo();\n```\nThis behavior shows how function scopes create their own variable environments and how variable declarations within a function shadow variables with the same name from outer scopes.",id:252,quizId:11},10)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=1054)}),_N_E=e.O()}]);