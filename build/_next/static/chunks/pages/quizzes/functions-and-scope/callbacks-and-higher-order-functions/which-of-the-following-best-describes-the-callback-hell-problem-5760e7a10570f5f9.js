(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[64017],{20115:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/functions-and-scope/callbacks-and-higher-order-functions/which-of-the-following-best-describes-the-callback-hell-problem",function(){return s(95725)}])},16833:function(e,n,s){"use strict";s.d(n,{Z:function(){return i}});var a=s(85893),t=s(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:o="auto",className:i,fullWidthResponsive:l="true",style:r={}}=e,c=(0,t.useRef)(null),d=(0,t.useRef)(!1),[u,p]=(0,t.useState)(!1);return((0,t.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,t.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,a.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(i),style:{display:"block",...r},"data-ad-client":n,"data-ad-slot":s,"data-ad-format":o,"data-full-width-responsive":l}):null};function i(e){return class extends t.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,a.jsx)(o,{adSlot:"6208304795",className:"h-[336px]"})}),(0,a.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,a.jsx)(o,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},95725:function(e,n,s){"use strict";s.r(n),s.d(n,{__N_SSG:function(){return l}});var a=s(85893),t=s(1475),o=s(25190),i=s(16833),l=!0;n.default=(0,o.Z)((0,i.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Callbacks and Higher-Order Functions"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(t.Y3,{activeQuestionIndex:8,totalQuestions:21,index:8,question:"Which of the following best describes the callback hell problem?",options:["When a higher-order function doesn't properly call its callback","When callbacks are passed incorrect arguments","When callbacks are deeply nested inside each other, making code hard to read and maintain","When too many callbacks are defined in a single JavaScript file"],code:void 0,nextQuestionPath:"what-happens-in-this-code-snippet",correctAnswer:3,explanation:'"Callback hell" (also known as "pyramid of doom") refers to deeply nested callbacks that make code difficult to read, understand, and maintain. This typically occurs in asynchronous programming when multiple sequential operations depend on the results of previous operations. Each level of nesting creates more indentation, eventually resembling a pyramid shape. Modern JavaScript features like Promises, async/await, and libraries like async.js were developed specifically to address this problem by providing more linear and readable ways to handle asynchronous code.',id:270,quizId:12},8)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=20115)}),_N_E=e.O()}]);