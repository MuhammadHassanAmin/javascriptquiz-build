(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[912],{5804:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/performance-optimization-techniques/what-performance-benefit-does-using-a-set-provide-over-an-array-when-checking-for-the-existence-of-values",function(){return n(55704)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var s=n(85893),a=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:r,fullWidthResponsive:i="true",style:c={}}=e,l=(0,a.useRef)(null),u=(0,a.useRef)(!1),[d,p]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[d]),d)?(0,s.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(r),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":i}):null};function r(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(e){super(e)}}}},55704:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return i}});var s=n(85893),a=n(1475),o=n(25190),r=n(16833),i=!0;t.default=(0,o.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Performance Optimization Techniques"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(a.Y3,{activeQuestionIndex:3,totalQuestions:40,index:3,question:"What performance benefit does using a Set provide over an Array when checking for the existence of values?",options:["Sets use less memory than arrays","Sets have O(1) lookup time compared to O(n) for arrays","Sets automatically remove duplicate values","Sets can store more elements than arrays"],code:void 0,nextQuestionPath:"which-of-the-following-is-a-micro-optimization-that-modern-javascript-engines-can-typically-handle-better-without-manual-intervention",correctAnswer:2,explanation:"Sets provide O(1) (constant time) lookup operations compared to O(n) (linear time) for arrays. When checking if a value exists in an array using methods like Array.prototype.includes() or Array.prototype.indexOf(), JavaScript must scan through the entire array in the worst case. In contrast, a Set is implemented using a hash table structure, allowing for much faster lookups regardless of size. This makes Sets particularly useful for applications that require frequent membership testing in large collections. Additionally, Sets automatically ensure uniqueness of values, which can be another benefit in certain use cases.",id:1499,quizId:67},3)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=5804)}),_N_E=e.O()}]);