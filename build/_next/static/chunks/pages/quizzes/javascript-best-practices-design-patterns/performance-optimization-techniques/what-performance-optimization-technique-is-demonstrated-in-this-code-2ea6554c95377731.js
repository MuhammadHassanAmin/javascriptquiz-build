(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[10761],{33309:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/performance-optimization-techniques/what-performance-optimization-technique-is-demonstrated-in-this-code",function(){return i(36241)}])},16833:function(e,t,i){"use strict";i.d(t,{Z:function(){return r}});var n=i(85893),a=i(67294),s=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:i="6753219060",adFormat:s="auto",className:r,fullWidthResponsive:o="true",style:c={}}=e,l=(0,a.useRef)(null),d=(0,a.useRef)(!1),[u,p]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(r),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":i,"data-ad-format":s,"data-full-width-responsive":o}):null};function r(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(s,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsxs)("div",{children:[(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(s,{adSlot:"6208304795",className:"h-[336px]"})}),(0,n.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,n.jsx)(s,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},36241:function(e,t,i){"use strict";i.r(t),i.d(t,{__N_SSG:function(){return o}});var n=i(85893),a=i(1475),s=i(25190),r=i(16833),o=!0;t.default=(0,s.Z)((0,r.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Performance Optimization Techniques"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(a.Y3,{activeQuestionIndex:19,totalQuestions:40,index:19,question:"What performance optimization technique is demonstrated in this code?",options:["Lookup table optimization","Loop unrolling","Avoiding intermediate arrays","Memoization"],code:"// Before optimization\nfunction calculateTotal(items) {\n  return items.map(item => item.price * item.quantity)\n             .filter(price => price > 0)\n             .reduce((sum, price) => sum + price, 0);\n}\n\n// After optimization\nfunction calculateTotal(items) {\n  let total = 0;\n  for (let i = 0; i < items.length; i++) {\n    const price = items[i].price * items[i].quantity;\n    if (price > 0) {\n      total += price;\n    }\n  }\n  return total;\n}",nextQuestionPath:"which-of-the-following-string-operations-tends-to-be-the-least-efficient-for-large-scale-string-manipulations",correctAnswer:3,explanation:"The code demonstrates avoiding intermediate arrays (or array chaining optimization). The original version creates multiple intermediate arrays through chained array methods: map() creates a new array of calculated prices, filter() creates another array with filtered prices, and then reduce() processes that array into a total. Each of these steps creates a new array in memory, which is inefficient when we only need the final sum. The optimized version uses a simple loop that calculates the running total directly, avoiding the creation of any intermediate arrays. This reduces memory usage and eliminates the overhead of multiple array iterations, making it more efficient, especially for large arrays. This technique is particularly valuable when processing large datasets where the intermediate results aren't needed separately.",id:1515,quizId:67},19)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=33309)}),_N_E=e.O()}]);