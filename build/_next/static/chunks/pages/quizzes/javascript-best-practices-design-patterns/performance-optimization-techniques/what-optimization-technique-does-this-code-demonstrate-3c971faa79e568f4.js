(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[13750],{58423:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/performance-optimization-techniques/what-optimization-technique-does-this-code-demonstrate",function(){return t(51414)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}});var s=t(85893),i=t(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:o="auto",className:a,fullWidthResponsive:r="true",style:c={}}=e,u=(0,i.useRef)(null),l=(0,i.useRef)(!1),[d,p]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))u.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{u.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[d]),d)?(0,s.jsx)("ins",{ref:u,className:"adsbygoogle ".concat(a),style:{display:"block",...c},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":o,"data-full-width-responsive":r}):null};function a(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(e){super(e)}}}},51414:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return r}});var s=t(85893),i=t(1475),o=t(25190),a=t(16833),r=!0;n.default=(0,o.Z)((0,a.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Performance Optimization Techniques"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:37,totalQuestions:40,index:37,question:"What optimization technique does this code demonstrate?",options:["Recursive memoization","Task scheduling and batching","Web Worker offloading","Just-in-time compilation"],code:"function expensiveOperation(data) {\n  // Complex data processing\n  return processedResult;\n}\n\nconst results = {};\nlet processingQueue = [];\nlet isProcessing = false;\n\nfunction scheduleProcessing(key, data) {\n  return new Promise((resolve) => {\n    processingQueue.push({ key, data, resolve });\n    \n    if (!isProcessing) {\n      isProcessing = true;\n      setTimeout(processQueue, 0);\n    }\n  });\n}\n\nfunction processQueue() {\n  const item = processingQueue.shift();\n  \n  if (item) {\n    const result = expensiveOperation(item.data);\n    results[item.key] = result;\n    item.resolve(result);\n    \n    setTimeout(processQueue, 0);\n  } else {\n    isProcessing = false;\n  }\n}",nextQuestionPath:"what-technique-can-significantly-improve-performance-when-working-with-large-datasets-in-tables-or-lists",correctAnswer:2,explanation:"This code demonstrates task scheduling and batching, a performance optimization technique for handling expensive operations without blocking the main thread for extended periods. The implementation uses a queue to collect operations and processes them one at a time, yielding back to the event loop between operations using setTimeout(fn, 0). This approach provides several benefits: 1) It prevents UI freezing by breaking long-running operations into smaller chunks, 2) It allows the application to remain responsive to user input, 3) It can prioritize certain operations by manipulating the queue, and 4) It maintains a single processing pipeline for operations that might be requested multiple times. Similar patterns are used in UI virtualization libraries, rendering engines, and data processing systems where maintaining responsiveness while handling computationally intensive tasks is crucial.",id:1533,quizId:67},37)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=58423)}),_N_E=e.O()}]);