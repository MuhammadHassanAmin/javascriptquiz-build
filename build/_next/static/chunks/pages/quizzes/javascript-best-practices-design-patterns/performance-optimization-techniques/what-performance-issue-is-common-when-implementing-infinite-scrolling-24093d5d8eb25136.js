(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[95796],{47810:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/performance-optimization-techniques/what-performance-issue-is-common-when-implementing-infinite-scrolling",function(){return n(33992)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var s=n(85893),o=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:r="auto",className:i,fullWidthResponsive:a="true",style:c={}}=e,l=(0,o.useRef)(null),d=(0,o.useRef)(!1),[u,m]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(m(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,s.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(i),style:{display:"block",...c},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":r,"data-full-width-responsive":a}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(r,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(e){super(e)}}}},33992:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return a}});var s=n(85893),o=n(1475),r=n(25190),i=n(16833),a=!0;t.default=(0,r.Z)((0,i.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Performance Optimization Techniques"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:25,totalQuestions:40,index:25,question:"What performance issue is common when implementing infinite scrolling?",options:["Network latency from too many API requests","DOM size growing unbounded, causing memory and performance problems","Worker thread congestion","WebGL context overflow"],code:void 0,nextQuestionPath:"what-performance-technique-does-this-code-implement",correctAnswer:2,explanation:"The most common performance issue with infinite scrolling implementations is DOM size growing unbounded, causing memory and performance problems. As users scroll and more content is added to the page, the DOM tree continues to grow, leading to several problems: 1) Increased memory usage, 2) Slower DOM operations as browsers must manage larger trees, 3) Degraded scrolling performance and responsiveness, and 4) Potential browser crashes with very large DOMs. To address this issue, implement a virtualized or windowed list approach: only render elements that are visible or near the viewport, and remove (or recycle) elements that are far outside the viewport. Libraries like react-window, react-virtualized, vue-virtual-scroller, or techniques like the Intersection Observer API can help implement efficient infinite scrolling that maintains good performance regardless of the total number of items.",id:1521,quizId:67},25)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=47810)}),_N_E=e.O()}]);