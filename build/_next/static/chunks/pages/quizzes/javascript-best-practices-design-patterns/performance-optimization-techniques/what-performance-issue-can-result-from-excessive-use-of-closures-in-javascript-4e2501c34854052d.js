(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[72585],{26781:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/performance-optimization-techniques/what-performance-issue-can-result-from-excessive-use-of-closures-in-javascript",function(){return t(56837)}])},16833:function(e,s,t){"use strict";t.d(s,{Z:function(){return i}});var n=t(85893),o=t(67294),r=e=>{let{adClient:s="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:r="auto",className:i,fullWidthResponsive:a="true",style:c={}}=e,l=(0,o.useRef)(null),u=(0,o.useRef)(!1),[d,m]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(m(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[d]),d)?(0,n.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(i),style:{display:"block",...c},"data-ad-client":s,"data-ad-slot":t,"data-ad-format":r,"data-full-width-responsive":a}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(r,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"336px",height:"280px"}})})]})})}constructor(e){super(e)}}}},56837:function(e,s,t){"use strict";t.r(s),t.d(s,{__N_SSG:function(){return a}});var n=t(85893),o=t(1475),r=t(25190),i=t(16833),a=!0;s.default=(0,r.Z)((0,i.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Performance Optimization Techniques"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(o.Y3,{activeQuestionIndex:9,totalQuestions:40,index:9,question:"What performance issue can result from excessive use of closures in JavaScript?",options:["Increased network requests","DOM rendering slowdowns","Memory leaks or increased memory consumption","CPU throttling"],code:void 0,nextQuestionPath:"which-of-the-following-scenarios-would-benefit-most-from-using-requestanimationframe-instead-of-settimeout",correctAnswer:3,explanation:"Excessive use of closures can lead to memory leaks or increased memory consumption. When a function forms a closure, it maintains references to variables from its outer scope, preventing those variables from being garbage collected as long as the closure exists. This can be particularly problematic in scenarios like creating many closures in loops or attaching closures to long-lived objects like DOM elements. Memory issues are most common when closures unintentionally reference large objects or when they're used to create event handlers that aren't properly removed. To mitigate these issues, be mindful of what variables are captured in closures and explicitly nullify references when they're no longer needed.",id:1505,quizId:67},9)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=26781)}),_N_E=e.O()}]);