(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[84413],{89828:function(e,t,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/performance-optimization-techniques/which-of-the-following-is-not-a-valid-technique-for-avoiding-layout-thrashing",function(){return o(14021)}])},16833:function(e,t,o){"use strict";o.d(t,{Z:function(){return s}});var n=o(85893),i=o(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:o="6753219060",adFormat:a="auto",className:s,fullWidthResponsive:r="true"}=e,d=(0,i.useRef)(null),l=(0,i.useRef)(!1),[c,u]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[c]),c)?(0,n.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(s),style:{display:"block"},"data-ad-client":t,"data-ad-slot":o,"data-ad-format":a,"data-full-width-responsive":r}):null};function s(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},14021:function(e,t,o){"use strict";o.r(t),o.d(t,{__N_SSG:function(){return r}});var n=o(85893),i=o(1475),a=o(25190),s=o(16833),r=!0;t.default=(0,a.Z)((0,s.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Performance Optimization Techniques"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(i.Y3,{activeQuestionIndex:17,totalQuestions:40,index:17,question:"Which of the following is NOT a valid technique for avoiding layout thrashing?",options:["Batching DOM reads before DOM writes","Using requestAnimationFrame for visual updates","Reading layout properties immediately after modifying the DOM","Using CSS transforms instead of properties that trigger layout"],code:void 0,nextQuestionPath:"what-performance-advantage-does-a-switch-statement-typically-have-over-multiple-if-else-statements-in-javascript",correctAnswer:3,explanation:"Reading layout properties immediately after modifying the DOM is NOT a valid technique for avoiding layout thrashing. In fact, this pattern is what causes layout thrashing. When you modify the DOM and then immediately read layout properties (like offsetWidth, clientHeight, getBoundingClientRect()), you force the browser to perform a synchronous layout calculation, or 'reflow.' The correct approach is to batch your reads before your writes: first read all the necessary layout information, then perform all DOM modifications based on those readings. This prevents forced reflows by allowing the browser to optimize the rendering process. The other listed techniques are all valid ways to improve rendering performance and avoid layout thrashing.",id:1513,quizId:67},17)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=89828)}),_N_E=e.O()}]);