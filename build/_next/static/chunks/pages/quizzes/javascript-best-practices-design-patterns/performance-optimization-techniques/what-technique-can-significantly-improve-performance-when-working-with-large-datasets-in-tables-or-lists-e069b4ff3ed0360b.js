(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[63899],{655:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/performance-optimization-techniques/what-technique-can-significantly-improve-performance-when-working-with-large-datasets-in-tables-or-lists",function(){return n(62613)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var i=n(85893),s=n(67294),r=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:r}=e,a=(0,s.useRef)(null),o=(0,s.useRef)(!1),[l,c]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(c(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0)}}}},[l]),l)?(0,i.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function a(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,i.jsx)("div",{children:(0,i.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,i.jsx)("div",{children:(0,i.jsx)(e,{...this.props})}),(0,i.jsx)("div",{children:(0,i.jsx)(r,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},62613:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return o}});var i=n(85893),s=n(1475),r=n(25190),a=n(16833),o=!0;t.default=(0,r.Z)((0,a.Z)(()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Performance Optimization Techniques"}),(0,i.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,i.jsx)(s.Y3,{activeQuestionIndex:38,totalQuestions:40,index:38,question:"What technique can significantly improve performance when working with large datasets in tables or lists?",options:["Preloading all data before rendering","Using CSS animations for row transitions","Virtual scrolling/windowing","Implementing server-side sorting only"],code:void 0,nextQuestionPath:"what-performance-optimization-does-the-content-visibility-auto-css-property-provide",correctAnswer:3,explanation:"Virtual scrolling (also called windowing) can significantly improve performance when working with large datasets in tables or lists. This technique renders only the items currently visible in the viewport plus a small buffer, rather than rendering the entire dataset at once. The benefits are substantial: 1) Dramatically reduced DOM size, as only 20-30 rows might be rendered instead of thousands, 2) Minimized memory usage, 3) Improved rendering and scrolling performance, 4) Reduced initial load time, and 5) Better overall responsiveness. Libraries like react-window, react-virtualized, vue-virtual-scroller, or angular-cdk's virtual scroll implement this pattern efficiently. Virtual scrolling is essential for smooth performance with large datasets (hundreds or thousands of items) and is considered a best practice for data-heavy applications, especially on lower-powered devices or mobile browsers.",id:1534,quizId:67},38)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=655)}),_N_E=e.O()}]);