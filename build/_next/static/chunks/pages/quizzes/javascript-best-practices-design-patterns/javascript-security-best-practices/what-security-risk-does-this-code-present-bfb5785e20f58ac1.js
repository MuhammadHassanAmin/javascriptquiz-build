(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[81539],{43786:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/javascript-security-best-practices/what-security-risk-does-this-code-present",function(){return s(31372)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return i}});var n=s(85893),o=s(67294),a=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",adFormat:a="auto",className:i,fullWidthResponsive:r="true"}=e,c=(0,o.useRef)(null),d=(0,o.useRef)(!1),[l,u]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[l]),l)?(0,n.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(i),style:{display:"block"},"data-ad-client":t,"data-ad-slot":s,"data-ad-format":a,"data-full-width-responsive":r}):null};function i(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[300px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},31372:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return r}});var n=s(85893),o=s(1475),a=s(25190),i=s(16833),r=!0;t.default=(0,a.Z)((0,i.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"JavaScript Security Best Practices"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(o.Y3,{activeQuestionIndex:11,totalQuestions:20,index:11,question:"What security risk does this code present?",options:["Data exposure","Client-side authorization bypass","Memory leak","SQL injection"],code:"const data = JSON.parse(localStorage.getItem('userData'));\nif (data.isAdmin) {\n  showAdminPanel();\n}",nextQuestionPath:"which-practice-best-prevents-cross-site-request-forgery-csrf-attacks",correctAnswer:2,explanation:"This code demonstrates insecure client-side authorization by relying on locally stored data to make authorization decisions. An attacker could simply modify the localStorage data to set isAdmin=true. Authorization checks should always be performed on the server side, and client-side checks should only be used for UI purposes, never for security decisions.",id:1487,quizId:66},11)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=43786)}),_N_E=e.O()}]);