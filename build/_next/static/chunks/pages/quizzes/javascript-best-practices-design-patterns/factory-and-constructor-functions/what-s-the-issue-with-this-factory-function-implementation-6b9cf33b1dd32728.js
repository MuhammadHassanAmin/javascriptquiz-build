(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[94671],{68916:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/factory-and-constructor-functions/what-s-the-issue-with-this-factory-function-implementation",function(){return n(70037)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var s=n(85893),o=n(67294),i=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",className:i}=e,a=(0,o.useRef)(null),c=(0,o.useRef)(!1),[r,d]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(d(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(r){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[r]),r)?(0,s.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(i),style:{display:"block"},"data-ad-client":t,"data-ad-slot":n}):null};function a(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},70037:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var s=n(85893),o=n(1475),i=n(25190),a=n(16833),c=!0;t.default=(0,i.Z)((0,a.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Factory & Constructor Functions"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:10,totalQuestions:20,index:10,question:"What's the issue with this factory function implementation?",options:["It uses arrow functions which is bad practice","The capitalize function is recreated for each person","The greet method should use an arrow function","There is no input validation"],code:"const createPerson = (name, age) => {\n  const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);\n  return {\n    name: capitalize(name),\n    age,\n    greet() {\n      console.log(`Hello, I'm ${this.name}`);\n    }\n  };\n};",nextQuestionPath:"how-does-this-implementation-combine-factory-and-constructor-patterns",correctAnswer:2,explanation:"The capitalize helper function is recreated every time createPerson is called, which is inefficient. It should be defined outside the factory function since it doesn't depend on any instance-specific data. This would improve memory usage as all instances would share the same helper function: const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1); const createPerson = (name, age) => ({ ... });",id:1466,quizId:65},10)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=68916)}),_N_E=e.O()}]);