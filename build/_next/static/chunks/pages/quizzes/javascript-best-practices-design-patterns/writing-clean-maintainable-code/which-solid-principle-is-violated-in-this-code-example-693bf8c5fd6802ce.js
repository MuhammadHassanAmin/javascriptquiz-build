(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3217],{76075:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/writing-clean-maintainable-code/which-solid-principle-is-violated-in-this-code-example",function(){return s(73730)}])},16833:function(e,n,s){"use strict";s.d(n,{Z:function(){return o}});var t=s(85893),i=s(67294),a=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:s="6753219060",className:a}=e,o=(0,i.useRef)(null),r=(0,i.useRef)(!1),[c,l]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))o.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{o.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0)}}}},[c]),c)?(0,t.jsx)("ins",{ref:o,className:"adsbygoogle ".concat(a),style:{display:"block"},"data-ad-client":n,"data-ad-slot":s}):null};function o(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,t.jsx)("div",{children:(0,t.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,t.jsx)("div",{children:(0,t.jsx)(e,{...this.props})}),(0,t.jsx)("div",{children:(0,t.jsx)(a,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},73730:function(e,n,s){"use strict";s.r(n),s.d(n,{__N_SSG:function(){return r}});var t=s(85893),i=s(1475),a=s(41354),o=s(16833),r=!0;n.default=(0,a.Z)((0,o.Z)(()=>(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Writing Clean & Maintainable Code"}),(0,t.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,t.jsx)(i.Y3,{activeQuestionIndex:1,totalQuestions:20,index:1,question:"Which SOLID principle is violated in this code example?",options:["Dependency Inversion Principle","Single Responsibility Principle","Open/Closed Principle","Liskov Substitution Principle"],code:"class UserManager {\n  constructor() {\n    this.users = [];\n  }\n  addUser(user) {\n    this.users.push(user);\n  }\n  sendEmail(user, content) {\n    // Email sending logic here\n  }\n  saveToDatabase(user) {\n    // Database operations here\n  }\n}",nextQuestionPath:"what-is-the-recommended-approach-for-handling-configuration-in-a-maintainable-javascript-application",correctAnswer:2,explanation:"This code violates the Single Responsibility Principle (SRP). The UserManager class has multiple responsibilities: managing users, handling email communications, and database operations. According to SRP, a class should have only one reason to change. The code should be refactored to separate these concerns into different classes.",id:1382,quizId:61},1)})]})))}},function(e){e.O(0,[41966,25675,61793,92888,49774,40179],function(){return e(e.s=76075)}),_N_E=e.O()}]);