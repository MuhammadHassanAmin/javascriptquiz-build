(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[11940],{28581:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/writing-clean-maintainable-code/which-code-structure-demonstrates-better-function-composition-and-maintainability",function(){return t(53952)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return s}});var a=t(85893),i=t(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:o="auto",className:s,fullWidthResponsive:r="true",style:c={}}=e,l=(0,i.useRef)(null),u=(0,i.useRef)(!1),[d,m]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(m(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[d]),d)?(0,a.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(s),style:{display:"block",...c},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":o,"data-full-width-responsive":r}):null};function s(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsx)("div",{children:(0,a.jsx)(o,{adSlot:"6208304795",className:"h-[100px] md:h-full top-0 sticky"})})]})})}constructor(e){super(e)}}}},53952:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return r}});var a=t(85893),i=t(1475),o=t(25190),s=t(16833),r=!0;n.default=(0,o.Z)((0,s.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Writing Clean & Maintainable Code"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(i.Y3,{activeQuestionIndex:3,totalQuestions:20,index:3,question:"Which code structure demonstrates better function composition and maintainability?",options:["Option A because it's more concise","Option B because it follows function composition principles","Both are equally maintainable","Neither is maintainable"],code:"// Option A:\nfunction processUserData(userData) {\n  const name = userData.name.toLowerCase();\n  const age = parseInt(userData.age);\n  const email = userData.email.trim();\n  return { name, age, email };\n}\n\n// Option B:\nfunction processUserData(userData) {\n  return {\n    name: normalizeName(userData.name),\n    age: normalizeAge(userData.age),\n    email: normalizeEmail(userData.email)\n  };\n}\n\nfunction normalizeName(name) { return name.toLowerCase(); }\nfunction normalizeAge(age) { return parseInt(age); }\nfunction normalizeEmail(email) { return email.trim(); }",nextQuestionPath:"what-is-the-primary-benefit-of-implementing-the-strategy-pattern-in-javascript-applications",correctAnswer:2,explanation:"Option B demonstrates better maintainability through function composition. It breaks down the logic into small, single-purpose functions that are easier to test, reuse, and modify. Each function has a clear responsibility and can be maintained independently. This approach also makes it easier to add validation, error handling, or modify the normalization logic for each field separately.",id:1384,quizId:61},3)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=28581)}),_N_E=e.O()}]);