(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6537],{3887:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/dry-and-kiss-principles/how-does-this-react-component-implementation-violate-both-dry-and-kiss-principles",function(){return t(15257)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return l}});var a=t(85893),s=t(67294),i=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:i="auto",className:l,fullWidthResponsive:o="true",style:c={}}=e,d=(0,s.useRef)(null),r=(0,s.useRef)(!1),[m,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(m){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!r.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),r.current=!0)}}}},[m]),m)?(0,a.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(l),style:{display:"block",...c},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":i,"data-full-width-responsive":o}):null};function l(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,a.jsx)("div",{children:(0,a.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,a.jsx)("div",{children:(0,a.jsx)(e,{...this.props})}),(0,a.jsxs)("div",{children:[(0,a.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,a.jsx)(i,{adSlot:"6208304795",className:"h-[336px]"})}),(0,a.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,a.jsx)(i,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},15257:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return o}});var a=t(85893),s=t(1475),i=t(25190),l=t(16833),o=!0;n.default=(0,i.Z)((0,l.Z)(()=>(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"DRY & KISS Principles"}),(0,a.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,a.jsx)(s.Y3,{activeQuestionIndex:15,totalQuestions:20,index:15,question:"How does this React component implementation violate both DRY and KISS principles?",options:["The component name is too generic","The props should be more specific","The table structure and cell styling are repeated","The icons should be combined"],code:'function DataTable({ data, onEdit, onDelete }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Role</th>\n          <th>Status</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(item => (\n          <tr key={item.id}>\n            <td>\n              <div className="flex items-center space-x-2">\n                <img\n                  src={item.avatar}\n                  alt={item.name}\n                  className="w-8 h-8 rounded-full"\n                />\n                <span className="font-medium">{item.name}</span>\n              </div>\n            </td>\n            <td>\n              <div className="flex items-center space-x-2">\n                <MailIcon className="w-4 h-4 text-gray-400" />\n                <span>{item.email}</span>\n              </div>\n            </td>\n            <td>\n              <div className="flex items-center space-x-2">\n                <UserIcon className="w-4 h-4 text-gray-400" />\n                <span>{item.role}</span>\n              </div>\n            </td>\n            <td>\n              <div className="flex items-center space-x-2">\n                <StatusIcon className="w-4 h-4 text-gray-400" />\n                <span>{item.status}</span>\n              </div>\n            </td>\n            <td>\n              <div className="flex items-center space-x-2">\n                <button\n                  onClick={() => onEdit(item)}\n                  className="p-2 text-blue-600 hover:bg-blue-50 rounded-full"\n                >\n                  <EditIcon className="w-4 h-4" />\n                </button>\n                <button\n                  onClick={() => onDelete(item)}\n                  className="p-2 text-red-600 hover:bg-red-50 rounded-full"\n                >\n                  <DeleteIcon className="w-4 h-4" />\n                </button>\n              </div>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}',nextQuestionPath:"what-aspect-of-this-form-validation-implementation-violates-the-dry-principle",correctAnswer:3,explanation:'This code violates both DRY and KISS principles by:\n1. Repeating cell structure and styling\n2. Making the component too complex with inline styling\n\nA better approach would be:\n\nconst TableCell = ({ icon: Icon, children }) => (\n  <td>\n    <div className="flex items-center space-x-2">\n      {Icon && <Icon className="w-4 h-4 text-gray-400" />}\n      {children}\n    </div>\n  </td>\n);\n\nconst ActionButton = ({ icon: Icon, onClick, variant }) => (\n  <button\n    onClick={onClick}\n    className={`p-2 text-${variant}-600 hover:bg-${variant}-50 rounded-full`}\n  >\n    <Icon className="w-4 h-4" />\n  </button>\n);\n\nfunction DataTable({ data, onEdit, onDelete }) {\n  return (\n    <table>\n      {/* ... header ... */}\n      <tbody>\n        {data.map(item => (\n          <tr key={item.id}>\n            <TableCell>\n              <img src={item.avatar} alt={item.name} className="w-8 h-8 rounded-full" />\n              <span className="font-medium">{item.name}</span>\n            </TableCell>\n            <TableCell icon={MailIcon}>{item.email}</TableCell>\n            <TableCell icon={UserIcon}>{item.role}</TableCell>\n            <TableCell icon={StatusIcon}>{item.status}</TableCell>\n            <TableCell>\n              <div className="flex items-center space-x-2">\n                <ActionButton icon={EditIcon} onClick={() => onEdit(item)} variant="blue" />\n                <ActionButton icon={DeleteIcon} onClick={() => onDelete(item)} variant="red" />\n              </div>\n            </TableCell>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}',id:1436,quizId:63},15)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=3887)}),_N_E=e.O()}]);