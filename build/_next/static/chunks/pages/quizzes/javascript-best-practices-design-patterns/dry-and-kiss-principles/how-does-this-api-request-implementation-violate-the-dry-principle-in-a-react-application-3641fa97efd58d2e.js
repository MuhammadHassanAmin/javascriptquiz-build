(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[21777],{87016:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/dry-and-kiss-principles/how-does-this-api-request-implementation-violate-the-dry-principle-in-a-react-application",function(){return t(46137)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return i}});var o=t(85893),s=t(67294),r=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:r="auto",className:i,fullWidthResponsive:c="true",style:a={}}=e,d=(0,s.useRef)(null),l=(0,s.useRef)(!1),[p,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(p){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[p]),p)?(0,o.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(i),style:{display:"block",...a},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":r,"data-full-width-responsive":c}):null};function i(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,o.jsx)("div",{children:(0,o.jsx)(e,{...this.props})}),(0,o.jsxs)("div",{children:[(0,o.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,o.jsx)(r,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})}),(0,o.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,o.jsx)(r,{adSlot:"6208304795",className:"h-[336px]",style:{display:"block",width:"100%",height:"336px"}})})]})]})})}constructor(e){super(e)}}}},46137:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return c}});var o=t(85893),s=t(1475),r=t(25190),i=t(16833),c=!0;n.default=(0,r.Z)((0,i.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"DRY & KISS Principles"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:6,totalQuestions:20,index:6,question:"How does this API request implementation violate the DRY principle in a React application?",options:["The components should be combined","The function names are too similar","The fetch logic is duplicated","The error messages are not detailed enough"],code:"function UserComponent() {\n  const fetchUser = async (id) => {\n    try {\n      const response = await fetch(`/api/users/${id}`);\n      if (!response.ok) throw new Error('Failed to fetch user');\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      throw error;\n    }\n  };\n}\n\nfunction ProductComponent() {\n  const fetchProduct = async (id) => {\n    try {\n      const response = await fetch(`/api/products/${id}`);\n      if (!response.ok) throw new Error('Failed to fetch product');\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      throw error;\n    }\n  };\n}",nextQuestionPath:"what-s-the-main-issue-with-this-form-validation-implementation-according-to-the-kiss-principle",correctAnswer:3,explanation:"This code violates DRY by duplicating the fetch logic, error handling, and response processing across components. A better approach would be to create a reusable API client:\n\nconst apiClient = {\n  async fetch(endpoint, options = {}) {\n    try {\n      const response = await fetch(`/api/${endpoint}`, options);\n      if (!response.ok) throw new Error(`Failed to fetch ${endpoint}`);\n      return await response.json();\n    } catch (error) {\n      console.error(`Error fetching ${endpoint}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Usage in components:\nconst user = await apiClient.fetch(`users/${id}`);\nconst product = await apiClient.fetch(`products/${id}`);",id:1427,quizId:63},6)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=87016)}),_N_E=e.O()}]);