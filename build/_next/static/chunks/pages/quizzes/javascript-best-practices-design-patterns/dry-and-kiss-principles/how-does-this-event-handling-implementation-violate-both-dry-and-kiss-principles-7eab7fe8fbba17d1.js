(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[57946],{71244:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/dry-and-kiss-principles/how-does-this-event-handling-implementation-violate-both-dry-and-kiss-principles",function(){return t(31837)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return l}});var s=t(85893),a=t(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:o="auto",className:l,fullWidthResponsive:i="true"}=e,r=(0,a.useRef)(null),c=(0,a.useRef)(!1),[d,u]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(d){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[d]),d)?(0,s.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(l),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":o,"data-full-width-responsive":i}):null};function l(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(o,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},31837:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return i}});var s=t(85893),a=t(1475),o=t(25190),l=t(16833),i=!0;n.default=(0,o.Z)((0,l.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"DRY & KISS Principles"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(a.Y3,{activeQuestionIndex:9,totalQuestions:20,index:9,question:"How does this event handling implementation violate both DRY and KISS principles?",options:["The event handlers should be combined","The style values should be constants","The transitions should be different","The style manipulation is repeated and complex"],code:"const handleMouseEnter = (event) => {\n  event.target.style.backgroundColor = '#e5e5e5';\n  event.target.style.transform = 'scale(1.05)';\n  event.target.style.transition = 'all 0.3s ease';\n};\n\nconst handleMouseLeave = (event) => {\n  event.target.style.backgroundColor = '';\n  event.target.style.transform = 'scale(1)';\n  event.target.style.transition = 'all 0.3s ease';\n};\n\nconst handleFocus = (event) => {\n  event.target.style.backgroundColor = '#e5e5e5';\n  event.target.style.transform = 'scale(1.05)';\n  event.target.style.transition = 'all 0.3s ease';\n};\n\nconst handleBlur = (event) => {\n  event.target.style.backgroundColor = '';\n  event.target.style.transform = 'scale(1)';\n  event.target.style.transition = 'all 0.3s ease';\n};",nextQuestionPath:"what-aspect-of-state-management-in-this-react-component-violates-the-kiss-principle",correctAnswer:4,explanation:"This code violates both DRY and KISS principles by:\n1. Duplicating style manipulation code across handlers\n2. Using complex inline style manipulation instead of CSS classes\n\nA better approach would be:\n\nconst HOVER_CLASS = 'hover-active';\n\nconst applyStyles = (element, isActive) => {\n  element.classList.toggle(HOVER_CLASS, isActive);\n};\n\nconst handleMouseEnter = (event) => applyStyles(event.target, true);\nconst handleMouseLeave = (event) => applyStyles(event.target, false);\nconst handleFocus = (event) => applyStyles(event.target, true);\nconst handleBlur = (event) => applyStyles(event.target, false);\n\n// CSS\n.hover-active {\n  background-color: #e5e5e5;\n  transform: scale(1.05);\n  transition: all 0.3s ease;\n}\n\nThis solution:\n1. Eliminates code duplication\n2. Simplifies style management\n3. Improves performance by using CSS classes\n4. Makes the code easier to maintain and modify",id:1430,quizId:63},9)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=71244)}),_N_E=e.O()}]);