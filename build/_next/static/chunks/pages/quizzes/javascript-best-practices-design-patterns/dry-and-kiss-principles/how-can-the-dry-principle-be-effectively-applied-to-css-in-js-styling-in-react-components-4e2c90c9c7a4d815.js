(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[41597],{36389:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/dry-and-kiss-principles/how-can-the-dry-principle-be-effectively-applied-to-css-in-js-styling-in-react-components",function(){return t(2233)}])},16833:function(n,e,t){"use strict";t.d(e,{Z:function(){return i}});var o=t(85893),s=t(67294),r=n=>{let{adClient:e="ca-pub-7544108447932228",adSlot:t="6753219060",className:r}=n,i=(0,s.useRef)(null),c=(0,s.useRef)(!1),[a,d]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(d(!0),()=>{let n=document.getElementById("__next");n&&n.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(a){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))i.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let n=document.createElement("script");n.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",n.async=!0,n.crossOrigin="anonymous",document.body.appendChild(n),n.onload=()=>{i.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[a]),a)?(0,o.jsx)("ins",{ref:i,className:"adsbygoogle ".concat(r),style:{display:"block"},"data-ad-client":e,"data-ad-slot":t}):null};function i(n){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,o.jsx)("div",{children:(0,o.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,o.jsx)("div",{children:(0,o.jsx)(n,{...this.props})}),(0,o.jsx)("div",{children:(0,o.jsx)(r,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(n){super(n)}}}},2233:function(n,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return c}});var o=t(85893),s=t(1475),r=t(25190),i=t(16833),c=!0;e.default=(0,r.Z)((0,i.Z)(()=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"DRY & KISS Principles"}),(0,o.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,o.jsx)(s.Y3,{activeQuestionIndex:4,totalQuestions:20,index:4,question:"How can the DRY principle be effectively applied to CSS-in-JS styling in React components?",options:["Create more button components","Use inline styles instead","Extract common styles into a base component or theme","Duplicate the styles for better specificity"],code:"const Button = styled.button`\n  padding: 10px 20px;\n  border-radius: 4px;\n  font-size: 16px;\n  background-color: blue;\n  color: white;\n`\n\nconst SubmitButton = styled.button`\n  padding: 10px 20px;\n  border-radius: 4px;\n  font-size: 16px;\n  background-color: green;\n  color: white;\n`\n\nconst CancelButton = styled.button`\n  padding: 10px 20px;\n  border-radius: 4px;\n  font-size: 16px;\n  background-color: red;\n  color: white;\n`",nextQuestionPath:"which-principle-does-this-error-handling-implementation-violate-and-how-can-it-be-improved-using-dry",correctAnswer:3,explanation:"This code violates DRY by repeating common button styles across multiple components. A better approach would be to:\n1. Extract common styles into a base button component\n2. Use theme variables for consistent values\n3. Extend the base component for variations\n\nImproved version:\nconst BaseButton = styled.button`\n  padding: 10px 20px;\n  border-radius: 4px;\n  font-size: 16px;\n  color: white;\n`\n\nconst Button = styled(BaseButton)`\n  background-color: blue;\n`\n\nconst SubmitButton = styled(BaseButton)`\n  background-color: green;\n`\n\nconst CancelButton = styled(BaseButton)`\n  background-color: red;\n`",id:1425,quizId:63},4)})]})))}},function(n){n.O(0,[41966,25675,82893,92888,49774,40179],function(){return n(n.s=36389)}),_N_E=n.O()}]);