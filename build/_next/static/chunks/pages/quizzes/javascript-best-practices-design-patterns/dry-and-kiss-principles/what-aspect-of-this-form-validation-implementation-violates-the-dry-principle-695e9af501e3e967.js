(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[70095],{58902:function(e,s,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/dry-and-kiss-principles/what-aspect-of-this-form-validation-implementation-violates-the-dry-principle",function(){return r(65280)}])},16833:function(e,s,r){"use strict";r.d(s,{Z:function(){return i}});var n=r(85893),a=r(67294),t=e=>{let{adClient:s="ca-pub-7544108447932228",adSlot:r="6753219060",adFormat:t="auto",className:i,fullWidthResponsive:o="true",style:l={}}=e,d=(0,a.useRef)(null),u=(0,a.useRef)(!1),[c,m]=(0,a.useState)(!1);return((0,a.useEffect)(()=>(m(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,a.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!u.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),u.current=!0)}}}},[c]),c)?(0,n.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(i),style:{display:"block",...l},"data-ad-client":s,"data-ad-slot":r,"data-ad-format":t,"data-full-width-responsive":o}):null};function i(e){return class extends a.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(t,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(t,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(e){super(e)}}}},65280:function(e,s,r){"use strict";r.r(s),r.d(s,{__N_SSG:function(){return o}});var n=r(85893),a=r(1475),t=r(25190),i=r(16833),o=!0;s.default=(0,t.Z)((0,i.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"DRY & KISS Principles"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(a.Y3,{activeQuestionIndex:16,totalQuestions:20,index:16,question:"What aspect of this form validation implementation violates the DRY principle?",options:["The validation messages are hardcoded","The function names are too similar","The validation rules are duplicated","The error object structure is repeated"],code:"const validateLoginForm = (values) => {\n  const errors = {};\n  \n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n  \n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Must be at least 8 characters';\n  }\n  \n  return errors;\n};\n\nconst validateRegistrationForm = (values) => {\n  const errors = {};\n  \n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n  \n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Must be at least 8 characters';\n  }\n  \n  if (!values.confirmPassword) {\n    errors.confirmPassword = 'Required';\n  } else if (values.confirmPassword !== values.password) {\n    errors.confirmPassword = 'Passwords must match';\n  }\n  \n  return errors;\n};",nextQuestionPath:"which-aspect-of-this-configuration-management-violates-both-kiss-and-dry-principles",correctAnswer:3,explanation:"This code violates DRY by duplicating validation rules for email and password fields. A better approach would be to extract common validation rules:\n\nconst validations = {\n  email: {\n    required: true,\n    pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n    message: 'Invalid email address'\n  },\n  password: {\n    required: true,\n    minLength: 8,\n    message: 'Must be at least 8 characters'\n  }\n};\n\nconst validateField = (name, value, rules) => {\n  if (rules.required && !value) return 'Required';\n  if (rules.pattern && !rules.pattern.test(value)) return rules.message;\n  if (rules.minLength && value.length < rules.minLength) return rules.message;\n  return null;\n};\n\nconst createValidator = (fields) => (values) => {\n  const errors = {};\n  \n  Object.keys(fields).forEach(field => {\n    const error = validateField(field, values[field], validations[field]);\n    if (error) errors[field] = error;\n  });\n  \n  return errors;\n};\n\nconst validateLoginForm = createValidator(['email', 'password']);\nconst validateRegistrationForm = (values) => {\n  const errors = validateLoginForm(values);\n  \n  if (!values.confirmPassword) {\n    errors.confirmPassword = 'Required';\n  } else if (values.confirmPassword !== values.password) {\n    errors.confirmPassword = 'Passwords must match';\n  }\n  \n  return errors;\n};",id:1437,quizId:63},16)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=58902)}),_N_E=e.O()}]);