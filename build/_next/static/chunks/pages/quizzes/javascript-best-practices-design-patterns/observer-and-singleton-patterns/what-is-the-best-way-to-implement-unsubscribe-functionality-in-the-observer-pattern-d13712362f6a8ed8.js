(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[90046],{41679:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/observer-and-singleton-patterns/what-is-the-best-way-to-implement-unsubscribe-functionality-in-the-observer-pattern",function(){return t(22394)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}});var s=t(85893),i=t(67294),a=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:a}=e,r=(0,i.useRef)(null),o=(0,i.useRef)(!1),[c,l]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(c){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!o.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),o.current=!0)}}}},[c]),c)?(0,s.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(a),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function r(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},22394:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return o}});var s=t(85893),i=t(1475),a=t(25190),r=t(16833),o=!0;n.default=(0,a.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"Observer & Singleton Patterns"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:7,totalQuestions:15,index:7,question:"What is the best way to implement unsubscribe functionality in the Observer Pattern?",options:["Remove all observers at once","Store observers in an array","Return an unsubscribe function when subscribing","Use a separate unsubscribe method"],code:"class EventEmitter {\n  constructor() {\n    this.listeners = new Map();\n  }\n\n  on(event, callback) {\n    if (!this.listeners.has(event)) {\n      this.listeners.set(event, new Set());\n    }\n    this.listeners.get(event).add(callback);\n    \n    return () => {\n      this.listeners.get(event)?.delete(callback);\n      if (this.listeners.get(event)?.size === 0) {\n        this.listeners.delete(event);\n      }\n    };\n  }\n\n  emit(event, data) {\n    this.listeners.get(event)?.forEach(callback => callback(data));\n  }\n}",nextQuestionPath:"how-can-the-singleton-pattern-be-implemented-to-be-thread-safe-in-javascript",correctAnswer:3,explanation:"This implementation demonstrates the best practice for handling unsubscribe functionality by: 1) Returning a cleanup function when subscribing, 2) Using a Set to manage unique callbacks, 3) Properly cleaning up empty event listeners, and 4) Providing a simple way to unsubscribe without maintaining external references. This approach prevents memory leaks and makes usage more intuitive.",id:1448,quizId:64},7)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=41679)}),_N_E=e.O()}]);