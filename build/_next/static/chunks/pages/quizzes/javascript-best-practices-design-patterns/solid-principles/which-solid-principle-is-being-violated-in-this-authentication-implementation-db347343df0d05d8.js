(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[92220],{5505:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/solid-principles/which-solid-principle-is-being-violated-in-this-authentication-implementation",function(){return t(17274)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return c}});var i=t(85893),s=t(67294),o=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:o}=e,c=(0,s.useRef)(null),a=(0,s.useRef)(!1),[r,l]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(r){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0)}}}},[r]),r)?(0,i.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(o),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function c(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,i.jsx)("div",{children:(0,i.jsx)(e,{...this.props})}),(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},17274:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return a}});var i=t(85893),s=t(1475),o=t(25190),c=t(16833),a=!0;n.default=(0,o.Z)((0,c.Z)(()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"SOLID Principles in JavaScript"}),(0,i.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,i.jsx)(s.Y3,{activeQuestionIndex:7,totalQuestions:20,index:7,question:"Which SOLID principle is being violated in this authentication implementation?",options:["Interface Segregation Principle","Open/Closed Principle","Dependency Inversion Principle","Liskov Substitution Principle"],code:"class Authentication {\n  constructor() {\n    this.database = new MySQLDatabase();\n    this.logger = new FileLogger();\n    this.emailService = new SMTPEmailService();\n  }\n\n  login(username, password) {\n    // Authentication logic using this.database\n    this.logger.log('Login attempt');\n    this.emailService.send('Login notification');\n  }\n}",nextQuestionPath:"what-solid-principle-suggests-that-a-class-should-focus-on-doing-one-thing-well",correctAnswer:3,explanation:"This code violates the Dependency Inversion Principle (DIP). The Authentication class directly creates concrete implementations of its dependencies (MySQLDatabase, FileLogger, SMTPEmailService) instead of depending on abstractions. A better approach would be to inject these dependencies through the constructor, allowing for different implementations to be used without modifying the Authentication class.",id:1408,quizId:62},7)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=5505)}),_N_E=e.O()}]);