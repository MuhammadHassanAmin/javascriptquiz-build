(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[37543],{99913:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/solid-principles/which-solid-principle-suggests-creating-specific-interfaces-instead-of-one-general-purpose-interface",function(){return t(47412)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}});var i=t(85893),s=t(67294),r=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:r="auto",className:a,fullWidthResponsive:o="true",style:c={}}=e,l=(0,s.useRef)(null),d=(0,s.useRef)(!1),[p,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(p){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[p]),p)?(0,i.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(a),style:{display:"block",...c},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":r,"data-full-width-responsive":o}):null};function a(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,i.jsx)("div",{children:(0,i.jsx)(r,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,i.jsx)("div",{children:(0,i.jsx)(e,{...this.props})}),(0,i.jsx)("div",{children:(0,i.jsx)(r,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(e){super(e)}}}},47412:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return o}});var i=t(85893),s=t(1475),r=t(25190),a=t(16833),o=!0;n.default=(0,r.Z)((0,a.Z)(()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"SOLID Principles in JavaScript"}),(0,i.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,i.jsx)(s.Y3,{activeQuestionIndex:5,totalQuestions:20,index:5,question:"Which SOLID principle suggests creating specific interfaces instead of one general-purpose interface?",options:["Single Responsibility Principle","Open/Closed Principle","Interface Segregation Principle","Liskov Substitution Principle"],code:"// Before:\ninterface Animal {\n  eat(): void;\n  sleep(): void;\n  fly(): void;\n  swim(): void;\n}\n\n// After:\ninterface Eater {\n  eat(): void;\n}\n\ninterface Sleeper {\n  sleep(): void;\n}\n\ninterface Flyer {\n  fly(): void;\n}\n\ninterface Swimmer {\n  swim(): void;\n}",nextQuestionPath:"what-solid-principle-is-being-applied-in-this-refactoring-example",correctAnswer:3,explanation:"The Interface Segregation Principle (ISP) suggests that it's better to have multiple smaller, specific interfaces rather than one large, general-purpose interface. In the example, instead of forcing all animals to implement methods they might not need, we separate the behaviors into specific interfaces. This allows classes to implement only the interfaces relevant to their behavior.",id:1406,quizId:62},5)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=99913)}),_N_E=e.O()}]);