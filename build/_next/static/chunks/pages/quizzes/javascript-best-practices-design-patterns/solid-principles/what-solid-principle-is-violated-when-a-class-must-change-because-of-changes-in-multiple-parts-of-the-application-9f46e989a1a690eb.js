(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[50975],{61590:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/solid-principles/what-solid-principle-is-violated-when-a-class-must-change-because-of-changes-in-multiple-parts-of-the-application",function(){return t(58729)}])},16833:function(e,s,t){"use strict";t.d(s,{Z:function(){return o}});var n=t(85893),i=t(67294),a=e=>{let{adClient:s="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:a="auto",className:o,fullWidthResponsive:r="true",style:c={}}=e,l=(0,i.useRef)(null),d=(0,i.useRef)(!1),[u,p]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(p(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(u){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[u]),u)?(0,n.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(o),style:{display:"block",...c},"data-ad-client":s,"data-ad-slot":t,"data-ad-format":a,"data-full-width-responsive":r}):null};function o(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(a,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(e){super(e)}}}},58729:function(e,s,t){"use strict";t.r(s),t.d(s,{__N_SSG:function(){return r}});var n=t(85893),i=t(1475),a=t(25190),o=t(16833),r=!0;s.default=(0,a.Z)((0,o.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"SOLID Principles in JavaScript"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(i.Y3,{activeQuestionIndex:10,totalQuestions:20,index:10,question:"What SOLID principle is violated when a class must change because of changes in multiple parts of the application?",options:["Open/Closed Principle","Single Responsibility Principle","Interface Segregation Principle","Dependency Inversion Principle"],code:"class UserManager {\n  createUser(userData) { /* ... */ }\n  validateUser(userData) { /* ... */ }\n  notifyUser(userId) { /* ... */ }\n  generateUserReport(userId) { /* ... */ }\n  updateUserProfile(userId, data) { /* ... */ }\n  logUserActivity(userId, activity) { /* ... */ }\n  calculateUserMetrics(userId) { /* ... */ }\n}",nextQuestionPath:"which-solid-principle-suggests-that-we-should-depend-on-abstractions-rather-than-concretions",correctAnswer:2,explanation:"This code violates the Single Responsibility Principle (SRP). The UserManager class has multiple responsibilities: user creation, validation, notification, reporting, profile management, activity logging, and metrics calculation. Each of these responsibilities could be a reason for the class to change. According to SRP, a class should have only one reason to change, so these responsibilities should be separated into different classes.",id:1411,quizId:62},10)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=61590)}),_N_E=e.O()}]);