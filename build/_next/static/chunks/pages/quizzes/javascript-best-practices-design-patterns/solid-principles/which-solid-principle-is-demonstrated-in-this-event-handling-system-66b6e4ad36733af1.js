(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[36667],{13868:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/solid-principles/which-solid-principle-is-demonstrated-in-this-event-handling-system",function(){return t(33303)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return l}});var s=t(85893),i=t(67294),a=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",adFormat:a="auto",className:l,fullWidthResponsive:o="true",style:r={}}=e,c=(0,i.useRef)(null),d=(0,i.useRef)(!1),[p,u]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(p){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{c.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[p]),p)?(0,s.jsx)("ins",{ref:c,className:"adsbygoogle ".concat(l),style:{display:"block",...r},"data-ad-client":n,"data-ad-slot":t,"data-ad-format":a,"data-full-width-responsive":o}):null};function l(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(a,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,s.jsx)(a,{adSlot:"6208304795",className:"h-[336px]"})}),(0,s.jsx)("div",{className:"max-h-[336] top-0 sticky",children:(0,s.jsx)(a,{adSlot:"6208304795",className:"h-[336px]"})})]})]})})}constructor(e){super(e)}}}},33303:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return o}});var s=t(85893),i=t(1475),a=t(25190),l=t(16833),o=!0;n.default=(0,a.Z)((0,l.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"SOLID Principles in JavaScript"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(i.Y3,{activeQuestionIndex:13,totalQuestions:20,index:13,question:"Which SOLID principle is demonstrated in this event handling system?",options:["Single Responsibility Principle","Interface Segregation Principle","Dependency Inversion Principle","Open/Closed Principle"],code:"interface EventHandler {\n  handle(event: Event): void;\n}\n\nclass LogEventHandler implements EventHandler {\n  handle(event: Event) {\n    console.log(event);\n  }\n}\n\nclass EmailEventHandler implements EventHandler {\n  handle(event: Event) {\n    // Send email\n  }\n}\n\nclass EventProcessor {\n  constructor(private handler: EventHandler) {}\n\n  processEvent(event: Event) {\n    this.handler.handle(event);\n  }\n}",nextQuestionPath:"what-solid-principle-suggests-that-a-derived-class-should-be-able-to-replace-its-base-class-without-breaking-the-application",correctAnswer:3,explanation:"This code demonstrates the Dependency Inversion Principle (DIP). The EventProcessor depends on the EventHandler abstraction rather than concrete implementations. This allows for different types of event handlers to be injected, making the system flexible and extensible. Both high-level (EventProcessor) and low-level (specific handlers) modules depend on the abstraction (EventHandler interface).",id:1414,quizId:62},13)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=13868)}),_N_E=e.O()}]);