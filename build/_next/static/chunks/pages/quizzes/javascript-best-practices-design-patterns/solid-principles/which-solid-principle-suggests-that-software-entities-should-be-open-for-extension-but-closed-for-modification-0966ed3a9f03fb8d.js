(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[11268],{71611:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/solid-principles/which-solid-principle-suggests-that-software-entities-should-be-open-for-extension-but-closed-for-modification",function(){return n(73576)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var i=n(85893),s=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:a,fullWidthResponsive:c="true",style:r={}}=e,d=(0,s.useRef)(null),l=(0,s.useRef)(!1),[h,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(h){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{d.current&&!l.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),l.current=!0)}}}},[h]),h)?(0,i.jsx)("ins",{ref:d,className:"adsbygoogle ".concat(a),style:{display:"block",...r},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":c}):null};function a(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,i.jsx)("div",{children:(0,i.jsx)(e,{...this.props})}),(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",height:"280px"}})})]})})}constructor(e){super(e)}}}},73576:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var i=n(85893),s=n(1475),o=n(25190),a=n(16833),c=!0;t.default=(0,o.Z)((0,a.Z)(()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"SOLID Principles in JavaScript"}),(0,i.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,i.jsx)(s.Y3,{activeQuestionIndex:1,totalQuestions:20,index:1,question:"Which SOLID principle suggests that software entities should be open for extension but closed for modification?",options:["Single Responsibility Principle","Dependency Inversion Principle","Open/Closed Principle","Interface Segregation Principle"],code:"// Before:\nclass Rectangle {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  area() {\n    return this.width * this.height;\n  }\n}\n\n// After:\nclass Shape {\n  area() {}\n}\n\nclass Rectangle extends Shape {\n  constructor(width, height) {\n    super();\n    this.width = width;\n    this.height = height;\n  }\n\n  area() {\n    return this.width * this.height;\n  }\n}",nextQuestionPath:"what-is-the-main-issue-with-this-code-according-to-the-liskov-substitution-principle",correctAnswer:3,explanation:"The Open/Closed Principle (OCP) states that software entities should be open for extension but closed for modification. In the example, instead of modifying the Rectangle class to handle different shapes, we create a base Shape class that can be extended by different shape implementations. This allows adding new shapes without modifying existing code, demonstrating OCP in practice.",id:1402,quizId:62},1)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=71611)}),_N_E=e.O()}]);