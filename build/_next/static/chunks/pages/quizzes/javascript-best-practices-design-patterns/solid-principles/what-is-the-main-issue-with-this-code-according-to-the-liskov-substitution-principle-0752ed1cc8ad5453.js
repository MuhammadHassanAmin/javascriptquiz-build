(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6247],{98810:function(e,t,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/solid-principles/what-is-the-main-issue-with-this-code-according-to-the-liskov-substitution-principle",function(){return s(66374)}])},16833:function(e,t,s){"use strict";s.d(t,{Z:function(){return a}});var n=s(85893),i=s(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:s="6753219060",className:o}=e,a=(0,i.useRef)(null),c=(0,i.useRef)(!1),[r,l]=(0,i.useState)(!1);return((0,i.useEffect)(()=>(l(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,i.useEffect)(()=>{if(r){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))a.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{a.current&&!c.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),c.current=!0)}}}},[r]),r)?(0,n.jsx)("ins",{ref:a,className:"adsbygoogle ".concat(o),style:{display:"block"},"data-ad-client":t,"data-ad-slot":s}):null};function a(e){return class extends i.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,n.jsx)(n.Fragment,{children:(0,n.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,n.jsx)("div",{children:(0,n.jsx)(e,{...this.props})}),(0,n.jsx)("div",{children:(0,n.jsx)(o,{adSlot:"2871546317",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},66374:function(e,t,s){"use strict";s.r(t),s.d(t,{__N_SSG:function(){return c}});var n=s(85893),i=s(1475),o=s(25190),a=s(16833),c=!0;t.default=(0,o.Z)((0,a.Z)(()=>(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"SOLID Principles in JavaScript"}),(0,n.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,n.jsx)(i.Y3,{activeQuestionIndex:2,totalQuestions:20,index:2,question:"What is the main issue with this code according to the Liskov Substitution Principle?",options:["The code is too simple","Bird should not have a fly method","Penguin violates the contract established by its base class","The error message is not descriptive enough"],code:"class Bird {\n  fly() {\n    console.log('Flying...');\n  }\n}\n\nclass Penguin extends Bird {\n  fly() {\n    throw new Error('Penguins cannot fly!');\n  }\n}",nextQuestionPath:"which-solid-principle-is-violated-in-this-interface-design",correctAnswer:3,explanation:"This code violates the Liskov Substitution Principle (LSP) because Penguin, despite being a subclass of Bird, cannot fulfill the contract established by its base class. LSP states that objects of a superclass should be replaceable with objects of its subclasses without breaking the application. A better design would be to have separate interfaces like FlyingBird and NonFlyingBird, or to model the behavior differently.",id:1403,quizId:62},2)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=98810)}),_N_E=e.O()}]);