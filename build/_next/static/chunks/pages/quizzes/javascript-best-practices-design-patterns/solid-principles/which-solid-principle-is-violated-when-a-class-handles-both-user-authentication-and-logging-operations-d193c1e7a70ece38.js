(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[49804],{28517:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/solid-principles/which-solid-principle-is-violated-when-a-class-handles-both-user-authentication-and-logging-operations",function(){return t(5736)}])},16833:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}});var s=t(85893),o=t(67294),i=e=>{let{adClient:n="ca-pub-7544108447932228",adSlot:t="6753219060",className:i}=e,r=(0,o.useRef)(null),a=(0,o.useRef)(!1),[l,c]=(0,o.useState)(!1);return((0,o.useEffect)(()=>(c(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,o.useEffect)(()=>{if(l){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))r.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{r.current&&!a.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),a.current=!0)}}}},[l]),l)?(0,s.jsx)("ins",{ref:r,className:"adsbygoogle ".concat(i),style:{display:"block"},"data-ad-client":n,"data-ad-slot":t}):null};function r(e){return class extends o.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6753219060",className:"h-[100px] md:h-full"})}),(0,s.jsx)("div",{children:(0,s.jsx)(e,{...this.props})}),(0,s.jsx)("div",{children:(0,s.jsx)(i,{adSlot:"6208304795",className:"h-[300px] md:h-full"})})]})})}constructor(e){super(e)}}}},5736:function(e,n,t){"use strict";t.r(n),t.d(n,{__N_SSG:function(){return a}});var s=t(85893),o=t(1475),i=t(25190),r=t(16833),a=!0;n.default=(0,i.Z)((0,r.Z)(()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"SOLID Principles in JavaScript"}),(0,s.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,s.jsx)(o.Y3,{activeQuestionIndex:0,totalQuestions:20,index:0,question:"Which SOLID principle is violated when a class handles both user authentication and logging operations?",options:["Interface Segregation Principle","Single Responsibility Principle","Open/Closed Principle","Dependency Inversion Principle"],code:"class UserAuth {\n  constructor() {\n    this.logger = new Logger();\n  }\n\n  login(username, password) {\n    // Authentication logic\n    this.logger.log('User login attempt');\n  }\n\n  logout() {\n    // Logout logic\n    this.logger.log('User logged out');\n  }\n\n  generateLoginReport() {\n    // Generate login statistics\n  }\n}",nextQuestionPath:"which-solid-principle-suggests-that-software-entities-should-be-open-for-extension-but-closed-for-modification",correctAnswer:2,explanation:"This code violates the Single Responsibility Principle (SRP). The UserAuth class has multiple responsibilities: authentication, logging, and reporting. According to SRP, a class should have only one reason to change. The solution would be to separate these concerns into different classes: UserAuth for authentication, Logger for logging, and a separate reporting class.",id:1401,quizId:62},0)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=28517)}),_N_E=e.O()}]);