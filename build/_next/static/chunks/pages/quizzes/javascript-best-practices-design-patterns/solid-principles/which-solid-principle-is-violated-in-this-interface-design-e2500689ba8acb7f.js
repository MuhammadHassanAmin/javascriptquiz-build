(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[39848],{11028:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/quizzes/javascript-best-practices-design-patterns/solid-principles/which-solid-principle-is-violated-in-this-interface-design",function(){return n(58720)}])},16833:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});var i=n(85893),s=n(67294),o=e=>{let{adClient:t="ca-pub-7544108447932228",adSlot:n="6753219060",adFormat:o="auto",className:r,fullWidthResponsive:c="true",style:a={}}=e,l=(0,s.useRef)(null),d=(0,s.useRef)(!1),[p,u]=(0,s.useState)(!1);return((0,s.useEffect)(()=>(u(!0),()=>{let e=document.getElementById("__next");e&&e.removeAttribute("style")}),[]),(0,s.useEffect)(()=>{if(p){if(document.querySelector('script[src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"]'))l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0);else{let e=document.createElement("script");e.src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7544108447932228",e.async=!0,e.crossOrigin="anonymous",document.body.appendChild(e),e.onload=()=>{l.current&&!d.current&&((window.adsbygoogle=window.adsbygoogle||[]).push({}),d.current=!0)}}}},[p]),p)?(0,i.jsx)("ins",{ref:l,className:"adsbygoogle ".concat(r),style:{display:"block",...a},"data-ad-client":t,"data-ad-slot":n,"data-ad-format":o,"data-full-width-responsive":c}):null};function r(e){return class extends s.Component{componentDidMount(){console.log("Wrapped Component")}render(){return(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:" md:grid grid-cols-[20%_60%_20%]  w-[95%] ",children:[(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"6753219060",className:"h-[100px] md:h-full top-0 sticky"})}),(0,i.jsx)("div",{children:(0,i.jsx)(e,{...this.props})}),(0,i.jsx)("div",{children:(0,i.jsx)(o,{adSlot:"6208304795",className:"h-[336px] top-0 sticky",style:{display:"inline-block",width:"100%",height:"280px"}})})]})})}constructor(e){super(e)}}}},58720:function(e,t,n){"use strict";n.r(t),n.d(t,{__N_SSG:function(){return c}});var i=n(85893),s=n(1475),o=n(25190),r=n(16833),c=!0;t.default=(0,o.Z)((0,r.Z)(()=>(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h1",{className:"text-2xl dark:text-white text-center",children:"SOLID Principles in JavaScript"}),(0,i.jsx)("div",{className:"flex justify-center w-full p-5 md:p-0 pt-0",children:(0,i.jsx)(s.Y3,{activeQuestionIndex:3,totalQuestions:20,index:3,question:"Which SOLID principle is violated in this interface design?",options:["Single Responsibility Principle","Open/Closed Principle","Interface Segregation Principle","Dependency Inversion Principle"],code:"interface Printer {\n  print();\n  scan();\n  fax();\n  photocopy();\n}\n\nclass BasicPrinter implements Printer {\n  print() { /* implementation */ }\n  scan() { throw new Error('Scan not supported'); }\n  fax() { throw new Error('Fax not supported'); }\n  photocopy() { throw new Error('Photocopy not supported'); }\n}",nextQuestionPath:"how-does-this-code-violate-the-dependency-inversion-principle",correctAnswer:3,explanation:"This code violates the Interface Segregation Principle (ISP). ISP states that clients should not be forced to depend on interfaces they don't use. The BasicPrinter is forced to implement methods it doesn't support. A better design would be to separate the interface into smaller, more focused interfaces like Printable, Scannable, Faxable, etc., allowing classes to implement only the functionality they support.",id:1404,quizId:62},3)})]})))}},function(e){e.O(0,[41966,25675,82893,92888,49774,40179],function(){return e(e.s=11028)}),_N_E=e.O()}]);